// This file is auto-generated by @hey-api/openapi-ts

export type ConnectionDataFilter = {
    expression?: string;
};

export type ConnectionFilter = {
    type?: ConnectionFilterType;
    data?: ConnectionDataFilter;
    header?: ConnectionHeaderFilter;
};

export type ConnectionFilterOperator = 'FILTER_OPERATOR_AND' | 'FILTER_OPERATOR_OR';

export type ConnectionFilterType = 'FILTER_TYPE_UNKNOWN' | 'FILTER_TYPE_DATA' | 'FILTER_TYPE_HEADER';

export type ConnectionHeaderFilter = {
    expression?: string;
};

export type ExecutionResult = 'RESULT_UNKNOWN' | 'RESULT_PASSED' | 'RESULT_FAILED';

export type ExecutorSpecSemaphore = {
    projectId?: string;
    branch?: string;
    pipelineFile?: string;
    taskId?: string;
    parameters?: {
        [key: string]: string;
    };
    apiToken?: string;
    organizationUrl?: string;
};

export type InputMappingValueDefinition = {
    name?: string;
    valueFrom?: InputMappingValueFrom;
    value?: string;
};

export type InputMappingValueFrom = {
    eventData?: InputMappingValueFromEventData;
    lastExecution?: InputMappingValueFromLastExecution;
};

export type InputMappingValueFromEventData = {
    connection?: string;
    expression?: string;
};

export type InputMappingValueFromLastExecution = {
    results?: Array<ExecutionResult>;
};

export type InputMappingWhen = {
    triggeredBy?: InputMappingWhenTriggeredBy;
};

export type InputMappingWhenTriggeredBy = {
    connection?: string;
};

export type StageEventStateReason = 'STATE_REASON_UNKNOWN' | 'STATE_REASON_APPROVAL' | 'STATE_REASON_TIME_WINDOW' | 'STATE_REASON_EXECUTION' | 'STATE_REASON_CONNECTION' | 'STATE_REASON_CANCELLED' | 'STATE_REASON_UNHEALTHY';

export type SuperplaneApproveStageEventBody = {
    requesterId?: string;
};

export type SuperplaneApproveStageEventResponse = {
    event?: SuperplaneStageEvent;
};

export type SuperplaneCanvas = {
    id?: string;
    name?: string;
    createdBy?: string;
    createdAt?: string;
};

export type SuperplaneCondition = {
    type?: SuperplaneConditionType;
    approval?: SuperplaneConditionApproval;
    timeWindow?: SuperplaneConditionTimeWindow;
};

export type SuperplaneConditionApproval = {
    count?: number;
};

export type SuperplaneConditionTimeWindow = {
    start?: string;
    end?: string;
    weekDays?: Array<string>;
};

export type SuperplaneConditionType = 'CONDITION_TYPE_UNKNOWN' | 'CONDITION_TYPE_APPROVAL' | 'CONDITION_TYPE_TIME_WINDOW';

export type SuperplaneConnection = {
    type?: SuperplaneConnectionType;
    name?: string;
    filters?: Array<ConnectionFilter>;
    filterOperator?: ConnectionFilterOperator;
};

export type SuperplaneConnectionType = 'TYPE_UNKNOWN' | 'TYPE_EVENT_SOURCE' | 'TYPE_STAGE';

export type SuperplaneCreateCanvasRequest = {
    name?: string;
    requesterId?: string;
};

export type SuperplaneCreateCanvasResponse = {
    canvas?: SuperplaneCanvas;
};

export type SuperplaneCreateEventSourceBody = {
    name?: string;
    requesterId?: string;
};

export type SuperplaneCreateEventSourceResponse = {
    eventSource?: SuperplaneEventSource;
    key?: string;
};

export type SuperplaneCreateStageBody = {
    name?: string;
    requesterId?: string;
    connections?: Array<SuperplaneConnection>;
    conditions?: Array<SuperplaneCondition>;
    executor?: SuperplaneExecutorSpec;
    inputs?: Array<SuperplaneInputDefinition>;
    inputMappings?: Array<SuperplaneInputMapping>;
    outputs?: Array<SuperplaneOutputDefinition>;
};

export type SuperplaneCreateStageResponse = {
    stage?: SuperplaneStage;
};

export type SuperplaneDescribeCanvasResponse = {
    canvas?: SuperplaneCanvas;
};

export type SuperplaneDescribeEventSourceResponse = {
    eventSource?: SuperplaneEventSource;
};

export type SuperplaneDescribeStageResponse = {
    stage?: SuperplaneStage;
};

export type SuperplaneEventSource = {
    id?: string;
    name?: string;
    canvasId?: string;
    createdAt?: string;
};

export type SuperplaneExecution = {
    id?: string;
    referenceId?: string;
    state?: SuperplaneExecutionState;
    result?: ExecutionResult;
    createdAt?: string;
    startedAt?: string;
    finishedAt?: string;
    outputs?: Array<SuperplaneOutputValue>;
};

export type SuperplaneExecutionState = 'STATE_UNKNOWN' | 'STATE_PENDING' | 'STATE_STARTED' | 'STATE_FINISHED';

export type SuperplaneExecutorSpec = {
    type?: SuperplaneExecutorSpecType;
    semaphore?: ExecutorSpecSemaphore;
};

export type SuperplaneExecutorSpecType = 'TYPE_UNKNOWN' | 'TYPE_SEMAPHORE';

export type SuperplaneInputDefinition = {
    name?: string;
    description?: string;
};

export type SuperplaneInputMapping = {
    values?: Array<InputMappingValueDefinition>;
    when?: InputMappingWhen;
};

export type SuperplaneInputValue = {
    name?: string;
    value?: string;
};

export type SuperplaneListCanvasesResponse = {
    canvases?: Array<SuperplaneCanvas>;
};

export type SuperplaneListEventSourcesResponse = {
    eventSources?: Array<SuperplaneEventSource>;
};

export type SuperplaneListStageEventsResponse = {
    events?: Array<SuperplaneStageEvent>;
};

export type SuperplaneListStagesResponse = {
    stages?: Array<SuperplaneStage>;
};

export type SuperplaneOutputDefinition = {
    name?: string;
    description?: string;
    required?: boolean;
};

export type SuperplaneOutputValue = {
    name?: string;
    value?: string;
};

export type SuperplaneStage = {
    id?: string;
    name?: string;
    canvasId?: string;
    createdAt?: string;
    connections?: Array<SuperplaneConnection>;
    conditions?: Array<SuperplaneCondition>;
    executor?: SuperplaneExecutorSpec;
    inputs?: Array<SuperplaneInputDefinition>;
    inputMappings?: Array<SuperplaneInputMapping>;
    outputs?: Array<SuperplaneOutputDefinition>;
};

export type SuperplaneStageEvent = {
    id?: string;
    sourceId?: string;
    sourceType?: SuperplaneConnectionType;
    state?: SuperplaneStageEventState;
    stateReason?: StageEventStateReason;
    createdAt?: string;
    approvals?: Array<SuperplaneStageEventApproval>;
    execution?: SuperplaneExecution;
    inputs?: Array<SuperplaneInputValue>;
};

export type SuperplaneStageEventApproval = {
    approvedBy?: string;
    approvedAt?: string;
};

export type SuperplaneStageEventState = 'STATE_UNKNOWN' | 'STATE_PENDING' | 'STATE_WAITING' | 'STATE_PROCESSED';

export type SuperplaneUpdateStageBody = {
    requesterId?: string;
    connections?: Array<SuperplaneConnection>;
    conditions?: Array<SuperplaneCondition>;
    executor?: SuperplaneExecutorSpec;
    inputs?: Array<SuperplaneInputDefinition>;
    inputMappings?: Array<SuperplaneInputMapping>;
    outputs?: Array<SuperplaneOutputDefinition>;
};

export type SuperplaneUpdateStageResponse = {
    stage?: SuperplaneStage;
};

export type ProtobufAny = {
    '@type'?: string;
    [key: string]: unknown | string | undefined;
};

export type RpcStatus = {
    code?: number;
    message?: string;
    details?: Array<ProtobufAny>;
};

export type SuperplaneListCanvasesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/canvases';
};

export type SuperplaneListCanvasesErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneListCanvasesError = SuperplaneListCanvasesErrors[keyof SuperplaneListCanvasesErrors];

export type SuperplaneListCanvasesResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListCanvasesResponse;
};

export type SuperplaneListCanvasesResponse2 = SuperplaneListCanvasesResponses[keyof SuperplaneListCanvasesResponses];

export type SuperplaneCreateCanvasData = {
    body: SuperplaneCreateCanvasRequest;
    path?: never;
    query?: never;
    url: '/api/v1/canvases';
};

export type SuperplaneCreateCanvasErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneCreateCanvasError = SuperplaneCreateCanvasErrors[keyof SuperplaneCreateCanvasErrors];

export type SuperplaneCreateCanvasResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneCreateCanvasResponse;
};

export type SuperplaneCreateCanvasResponse2 = SuperplaneCreateCanvasResponses[keyof SuperplaneCreateCanvasResponses];

export type SuperplaneListEventSourcesData = {
    body?: never;
    path: {
        canvasIdOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/event-sources';
};

export type SuperplaneListEventSourcesErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneListEventSourcesError = SuperplaneListEventSourcesErrors[keyof SuperplaneListEventSourcesErrors];

export type SuperplaneListEventSourcesResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListEventSourcesResponse;
};

export type SuperplaneListEventSourcesResponse2 = SuperplaneListEventSourcesResponses[keyof SuperplaneListEventSourcesResponses];

export type SuperplaneCreateEventSourceData = {
    body: SuperplaneCreateEventSourceBody;
    path: {
        canvasIdOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/event-sources';
};

export type SuperplaneCreateEventSourceErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneCreateEventSourceError = SuperplaneCreateEventSourceErrors[keyof SuperplaneCreateEventSourceErrors];

export type SuperplaneCreateEventSourceResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneCreateEventSourceResponse;
};

export type SuperplaneCreateEventSourceResponse2 = SuperplaneCreateEventSourceResponses[keyof SuperplaneCreateEventSourceResponses];

export type SuperplaneDescribeEventSourceData = {
    body?: never;
    path: {
        canvasIdOrName: string;
        id: string;
    };
    query?: {
        name?: string;
    };
    url: '/api/v1/canvases/{canvasIdOrName}/event-sources/{id}';
};

export type SuperplaneDescribeEventSourceErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneDescribeEventSourceError = SuperplaneDescribeEventSourceErrors[keyof SuperplaneDescribeEventSourceErrors];

export type SuperplaneDescribeEventSourceResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneDescribeEventSourceResponse;
};

export type SuperplaneDescribeEventSourceResponse2 = SuperplaneDescribeEventSourceResponses[keyof SuperplaneDescribeEventSourceResponses];

export type SuperplaneListStagesData = {
    body?: never;
    path: {
        canvasIdOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/stages';
};

export type SuperplaneListStagesErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneListStagesError = SuperplaneListStagesErrors[keyof SuperplaneListStagesErrors];

export type SuperplaneListStagesResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListStagesResponse;
};

export type SuperplaneListStagesResponse2 = SuperplaneListStagesResponses[keyof SuperplaneListStagesResponses];

export type SuperplaneCreateStageData = {
    body: SuperplaneCreateStageBody;
    path: {
        canvasIdOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/stages';
};

export type SuperplaneCreateStageErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneCreateStageError = SuperplaneCreateStageErrors[keyof SuperplaneCreateStageErrors];

export type SuperplaneCreateStageResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneCreateStageResponse;
};

export type SuperplaneCreateStageResponse2 = SuperplaneCreateStageResponses[keyof SuperplaneCreateStageResponses];

export type SuperplaneUpdateStageData = {
    body: SuperplaneUpdateStageBody;
    path: {
        canvasIdOrName: string;
        idOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/stages/{idOrName}';
};

export type SuperplaneUpdateStageErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneUpdateStageError = SuperplaneUpdateStageErrors[keyof SuperplaneUpdateStageErrors];

export type SuperplaneUpdateStageResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneUpdateStageResponse;
};

export type SuperplaneUpdateStageResponse2 = SuperplaneUpdateStageResponses[keyof SuperplaneUpdateStageResponses];

export type SuperplaneDescribeStageData = {
    body?: never;
    path: {
        canvasIdOrName: string;
        id: string;
    };
    query?: {
        name?: string;
    };
    url: '/api/v1/canvases/{canvasIdOrName}/stages/{id}';
};

export type SuperplaneDescribeStageErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneDescribeStageError = SuperplaneDescribeStageErrors[keyof SuperplaneDescribeStageErrors];

export type SuperplaneDescribeStageResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneDescribeStageResponse;
};

export type SuperplaneDescribeStageResponse2 = SuperplaneDescribeStageResponses[keyof SuperplaneDescribeStageResponses];

export type SuperplaneListStageEventsData = {
    body?: never;
    path: {
        canvasIdOrName: string;
        stageIdOrName: string;
    };
    query?: {
        states?: Array<'STATE_UNKNOWN' | 'STATE_PENDING' | 'STATE_WAITING' | 'STATE_PROCESSED'>;
        stateReasons?: Array<'STATE_REASON_UNKNOWN' | 'STATE_REASON_APPROVAL' | 'STATE_REASON_TIME_WINDOW' | 'STATE_REASON_EXECUTION' | 'STATE_REASON_CONNECTION' | 'STATE_REASON_CANCELLED' | 'STATE_REASON_UNHEALTHY'>;
    };
    url: '/api/v1/canvases/{canvasIdOrName}/stages/{stageIdOrName}/events';
};

export type SuperplaneListStageEventsErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneListStageEventsError = SuperplaneListStageEventsErrors[keyof SuperplaneListStageEventsErrors];

export type SuperplaneListStageEventsResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListStageEventsResponse;
};

export type SuperplaneListStageEventsResponse2 = SuperplaneListStageEventsResponses[keyof SuperplaneListStageEventsResponses];

export type SuperplaneApproveStageEventData = {
    body: SuperplaneApproveStageEventBody;
    path: {
        canvasIdOrName: string;
        stageIdOrName: string;
        eventId: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/stages/{stageIdOrName}/events/{eventId}/approve';
};

export type SuperplaneApproveStageEventErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneApproveStageEventError = SuperplaneApproveStageEventErrors[keyof SuperplaneApproveStageEventErrors];

export type SuperplaneApproveStageEventResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneApproveStageEventResponse;
};

export type SuperplaneApproveStageEventResponse2 = SuperplaneApproveStageEventResponses[keyof SuperplaneApproveStageEventResponses];

export type SuperplaneDescribeCanvasData = {
    body?: never;
    path: {
        id: string;
    };
    query?: {
        name?: string;
    };
    url: '/api/v1/canvases/{id}';
};

export type SuperplaneDescribeCanvasErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneDescribeCanvasError = SuperplaneDescribeCanvasErrors[keyof SuperplaneDescribeCanvasErrors];

export type SuperplaneDescribeCanvasResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneDescribeCanvasResponse;
};

export type SuperplaneDescribeCanvasResponse2 = SuperplaneDescribeCanvasResponses[keyof SuperplaneDescribeCanvasResponses];

export type ClientOptions = {
    baseUrl: `http://${string}` | `https://${string}` | (string & {});
};