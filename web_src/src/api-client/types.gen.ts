// This file is auto-generated by @hey-api/openapi-ts

export type ConnectionDataFilter = {
    expression?: string;
};

export type ConnectionFilter = {
    type?: ConnectionFilterType;
    data?: ConnectionDataFilter;
    header?: ConnectionHeaderFilter;
};

export type ConnectionFilterOperator = 'FILTER_OPERATOR_AND' | 'FILTER_OPERATOR_OR';

export type ConnectionFilterType = 'FILTER_TYPE_UNKNOWN' | 'FILTER_TYPE_DATA' | 'FILTER_TYPE_HEADER';

export type ConnectionHeaderFilter = {
    expression?: string;
};

export type StageEventStateReason = 'STATE_REASON_UNKNOWN' | 'STATE_REASON_APPROVAL' | 'STATE_REASON_TIME_WINDOW' | 'STATE_REASON_EXECUTION' | 'STATE_REASON_CONNECTION' | 'STATE_REASON_CANCELLED' | 'STATE_REASON_UNHEALTHY';

export type SuperplaneApproveStageEventBody = {
    organizationId?: string;
    requesterId?: string;
};

export type SuperplaneApproveStageEventResponse = {
    event?: SuperplaneStageEvent;
};

export type SuperplaneCanvas = {
    id?: string;
    name?: string;
    organizationId?: string;
    createdBy?: string;
    createdAt?: string;
};

export type SuperplaneCondition = {
    type?: SuperplaneConditionType;
    approval?: SuperplaneConditionApproval;
    timeWindow?: SuperplaneConditionTimeWindow;
};

export type SuperplaneConditionApproval = {
    count?: number;
};

export type SuperplaneConditionTimeWindow = {
    start?: string;
    end?: string;
    weekDays?: Array<string>;
};

export type SuperplaneConditionType = 'CONDITION_TYPE_UNKNOWN' | 'CONDITION_TYPE_APPROVAL' | 'CONDITION_TYPE_TIME_WINDOW';

export type SuperplaneConnection = {
    type?: SuperplaneConnectionType;
    name?: string;
    filters?: Array<ConnectionFilter>;
    filterOperator?: ConnectionFilterOperator;
};

export type SuperplaneConnectionType = 'TYPE_UNKNOWN' | 'TYPE_EVENT_SOURCE' | 'TYPE_STAGE';

export type SuperplaneCreateCanvasRequest = {
    name?: string;
    organizationId?: string;
    requesterId?: string;
};

export type SuperplaneCreateCanvasResponse = {
    canvas?: SuperplaneCanvas;
};

export type SuperplaneCreateEventSourceBody = {
    name?: string;
    organizationId?: string;
    requesterId?: string;
};

export type SuperplaneCreateEventSourceResponse = {
    eventSource?: SuperplaneEventSource;
    key?: string;
};

export type SuperplaneCreateStageBody = {
    name?: string;
    organizationId?: string;
    requesterId?: string;
    connections?: Array<SuperplaneConnection>;
    conditions?: Array<SuperplaneCondition>;
    use?: SuperplaneTagUsageDefinition;
    runTemplate?: SuperplaneRunTemplate;
};

export type SuperplaneCreateStageResponse = {
    stage?: SuperplaneStage;
};

export type SuperplaneDescribeCanvasResponse = {
    canvas?: SuperplaneCanvas;
};

export type SuperplaneDescribeEventSourceResponse = {
    eventSource?: SuperplaneEventSource;
};

export type SuperplaneDescribeStageResponse = {
    stage?: SuperplaneStage;
};

export type SuperplaneEventSource = {
    id?: string;
    name?: string;
    organizationId?: string;
    canvasId?: string;
    createdAt?: string;
};

export type SuperplaneListEventSourcesResponse = {
    eventSources?: Array<SuperplaneEventSource>;
};

export type SuperplaneListStageEventsResponse = {
    events?: Array<SuperplaneStageEvent>;
};

export type SuperplaneListStagesResponse = {
    stages?: Array<SuperplaneStage>;
};

export type SuperplaneListTagsResponse = {
    tags?: Array<SuperplaneStageTag>;
};

export type SuperplaneRunTemplate = {
    type?: SuperplaneRunTemplateType;
    semaphore?: SuperplaneSemaphoreRunTemplate;
};

export type SuperplaneRunTemplateType = 'TYPE_UNKNOWN' | 'TYPE_SEMAPHORE';

export type SuperplaneSemaphoreRunTemplate = {
    projectId?: string;
    branch?: string;
    pipelineFile?: string;
    taskId?: string;
    parameters?: {
        [key: string]: string;
    };
    apiToken?: string;
    organizationUrl?: string;
};

export type SuperplaneStage = {
    id?: string;
    name?: string;
    organizationId?: string;
    canvasId?: string;
    createdAt?: string;
    connections?: Array<SuperplaneConnection>;
    conditions?: Array<SuperplaneCondition>;
    use?: SuperplaneTagUsageDefinition;
    runTemplate?: SuperplaneRunTemplate;
};

export type SuperplaneStageEvent = {
    id?: string;
    sourceId?: string;
    sourceType?: SuperplaneConnectionType;
    state?: SuperplaneStageEventState;
    stateReason?: StageEventStateReason;
    createdAt?: string;
    approvals?: Array<SuperplaneStageEventApproval>;
    tags?: Array<SuperplaneTag>;
};

export type SuperplaneStageEventApproval = {
    approvedBy?: string;
    approvedAt?: string;
};

export type SuperplaneStageEventState = 'STATE_UNKNOWN' | 'STATE_PENDING' | 'STATE_WAITING' | 'STATE_PROCESSED';

export type SuperplaneStageTag = {
    stageId?: string;
    stageEventState?: SuperplaneStageEventState;
    tag?: SuperplaneTag;
};

export type SuperplaneTag = {
    name?: string;
    value?: string;
    state?: SuperplaneTagState;
};

export type SuperplaneTagDefinition = {
    name?: string;
    valueFrom?: string;
};

export type SuperplaneTagState = 'TAG_STATE_UNKNOWN' | 'TAG_STATE_HEALTHY' | 'TAG_STATE_UNHEALTHY';

export type SuperplaneTagUsageDefinition = {
    from?: Array<string>;
    tags?: Array<SuperplaneTagDefinition>;
};

export type SuperplaneUpdateStageBody = {
    connections?: Array<SuperplaneConnection>;
    requesterId?: string;
};

export type SuperplaneUpdateStageResponse = {
    stage?: SuperplaneStage;
};

export type SuperplaneUpdateTagStateRequest = {
    tag?: SuperplaneTag;
};

export type SuperplaneUpdateTagStateResponse = {
    [key: string]: unknown;
};

export type ProtobufAny = {
    '@type'?: string;
    [key: string]: unknown | string | undefined;
};

export type RpcStatus = {
    code?: number;
    message?: string;
    details?: Array<ProtobufAny>;
};

export type SuperplaneCreateCanvasData = {
    body: SuperplaneCreateCanvasRequest;
    path?: never;
    query?: never;
    url: '/api/v1/canvases';
};

export type SuperplaneCreateCanvasErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneCreateCanvasError = SuperplaneCreateCanvasErrors[keyof SuperplaneCreateCanvasErrors];

export type SuperplaneCreateCanvasResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneCreateCanvasResponse;
};

export type SuperplaneCreateCanvasResponse2 = SuperplaneCreateCanvasResponses[keyof SuperplaneCreateCanvasResponses];

export type SuperplaneListEventSourcesData = {
    body?: never;
    path: {
        canvasId: string;
    };
    query?: {
        organizationId?: string;
    };
    url: '/api/v1/canvases/{canvasId}/event-sources';
};

export type SuperplaneListEventSourcesErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneListEventSourcesError = SuperplaneListEventSourcesErrors[keyof SuperplaneListEventSourcesErrors];

export type SuperplaneListEventSourcesResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListEventSourcesResponse;
};

export type SuperplaneListEventSourcesResponse2 = SuperplaneListEventSourcesResponses[keyof SuperplaneListEventSourcesResponses];

export type SuperplaneCreateEventSourceData = {
    body: SuperplaneCreateEventSourceBody;
    path: {
        canvasId: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasId}/event-sources';
};

export type SuperplaneCreateEventSourceErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneCreateEventSourceError = SuperplaneCreateEventSourceErrors[keyof SuperplaneCreateEventSourceErrors];

export type SuperplaneCreateEventSourceResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneCreateEventSourceResponse;
};

export type SuperplaneCreateEventSourceResponse2 = SuperplaneCreateEventSourceResponses[keyof SuperplaneCreateEventSourceResponses];

export type SuperplaneDescribeEventSourceData = {
    body?: never;
    path: {
        canvasId: string;
        id: string;
    };
    query?: {
        name?: string;
        organizationId?: string;
    };
    url: '/api/v1/canvases/{canvasId}/event-sources/{id}';
};

export type SuperplaneDescribeEventSourceErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneDescribeEventSourceError = SuperplaneDescribeEventSourceErrors[keyof SuperplaneDescribeEventSourceErrors];

export type SuperplaneDescribeEventSourceResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneDescribeEventSourceResponse;
};

export type SuperplaneDescribeEventSourceResponse2 = SuperplaneDescribeEventSourceResponses[keyof SuperplaneDescribeEventSourceResponses];

export type SuperplaneListStagesData = {
    body?: never;
    path: {
        canvasId: string;
    };
    query?: {
        organizationId?: string;
    };
    url: '/api/v1/canvases/{canvasId}/stages';
};

export type SuperplaneListStagesErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneListStagesError = SuperplaneListStagesErrors[keyof SuperplaneListStagesErrors];

export type SuperplaneListStagesResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListStagesResponse;
};

export type SuperplaneListStagesResponse2 = SuperplaneListStagesResponses[keyof SuperplaneListStagesResponses];

export type SuperplaneCreateStageData = {
    body: SuperplaneCreateStageBody;
    path: {
        canvasId: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasId}/stages';
};

export type SuperplaneCreateStageErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneCreateStageError = SuperplaneCreateStageErrors[keyof SuperplaneCreateStageErrors];

export type SuperplaneCreateStageResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneCreateStageResponse;
};

export type SuperplaneCreateStageResponse2 = SuperplaneCreateStageResponses[keyof SuperplaneCreateStageResponses];

export type SuperplaneDescribeStageData = {
    body?: never;
    path: {
        canvasId: string;
        id: string;
    };
    query?: {
        name?: string;
        organizationId?: string;
    };
    url: '/api/v1/canvases/{canvasId}/stages/{id}';
};

export type SuperplaneDescribeStageErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneDescribeStageError = SuperplaneDescribeStageErrors[keyof SuperplaneDescribeStageErrors];

export type SuperplaneDescribeStageResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneDescribeStageResponse;
};

export type SuperplaneDescribeStageResponse2 = SuperplaneDescribeStageResponses[keyof SuperplaneDescribeStageResponses];

export type SuperplaneUpdateStageData = {
    body: SuperplaneUpdateStageBody;
    path: {
        /**
         * Added for REST API path
         */
        canvasId: string;
        id: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasId}/stages/{id}';
};

export type SuperplaneUpdateStageErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneUpdateStageError = SuperplaneUpdateStageErrors[keyof SuperplaneUpdateStageErrors];

export type SuperplaneUpdateStageResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneUpdateStageResponse;
};

export type SuperplaneUpdateStageResponse2 = SuperplaneUpdateStageResponses[keyof SuperplaneUpdateStageResponses];

export type SuperplaneListStageEventsData = {
    body?: never;
    path: {
        canvasId: string;
        stageId: string;
    };
    query?: {
        organizationId?: string;
        states?: Array<'STATE_UNKNOWN' | 'STATE_PENDING' | 'STATE_WAITING' | 'STATE_PROCESSED'>;
        stateReasons?: Array<'STATE_REASON_UNKNOWN' | 'STATE_REASON_APPROVAL' | 'STATE_REASON_TIME_WINDOW' | 'STATE_REASON_EXECUTION' | 'STATE_REASON_CONNECTION' | 'STATE_REASON_CANCELLED' | 'STATE_REASON_UNHEALTHY'>;
    };
    url: '/api/v1/canvases/{canvasId}/stages/{stageId}/events';
};

export type SuperplaneListStageEventsErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneListStageEventsError = SuperplaneListStageEventsErrors[keyof SuperplaneListStageEventsErrors];

export type SuperplaneListStageEventsResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListStageEventsResponse;
};

export type SuperplaneListStageEventsResponse2 = SuperplaneListStageEventsResponses[keyof SuperplaneListStageEventsResponses];

export type SuperplaneApproveStageEventData = {
    body: SuperplaneApproveStageEventBody;
    path: {
        canvasId: string;
        stageId: string;
        eventId: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasId}/stages/{stageId}/events/{eventId}/approve';
};

export type SuperplaneApproveStageEventErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneApproveStageEventError = SuperplaneApproveStageEventErrors[keyof SuperplaneApproveStageEventErrors];

export type SuperplaneApproveStageEventResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneApproveStageEventResponse;
};

export type SuperplaneApproveStageEventResponse2 = SuperplaneApproveStageEventResponses[keyof SuperplaneApproveStageEventResponses];

export type SuperplaneDescribeCanvasData = {
    body?: never;
    path: {
        id: string;
    };
    query?: {
        name?: string;
        organizationId?: string;
    };
    url: '/api/v1/canvases/{id}';
};

export type SuperplaneDescribeCanvasErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneDescribeCanvasError = SuperplaneDescribeCanvasErrors[keyof SuperplaneDescribeCanvasErrors];

export type SuperplaneDescribeCanvasResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneDescribeCanvasResponse;
};

export type SuperplaneDescribeCanvasResponse2 = SuperplaneDescribeCanvasResponses[keyof SuperplaneDescribeCanvasResponses];

export type SuperplaneListTags2Data = {
    body?: never;
    path: {
        stageId: string;
    };
    query?: {
        name?: string;
        value?: string;
        states?: Array<'TAG_STATE_UNKNOWN' | 'TAG_STATE_HEALTHY' | 'TAG_STATE_UNHEALTHY'>;
    };
    url: '/api/v1/stages/{stageId}/tags';
};

export type SuperplaneListTags2Errors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneListTags2Error = SuperplaneListTags2Errors[keyof SuperplaneListTags2Errors];

export type SuperplaneListTags2Responses = {
    /**
     * A successful response.
     */
    200: SuperplaneListTagsResponse;
};

export type SuperplaneListTags2Response = SuperplaneListTags2Responses[keyof SuperplaneListTags2Responses];

export type SuperplaneListTagsData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        value?: string;
        states?: Array<'TAG_STATE_UNKNOWN' | 'TAG_STATE_HEALTHY' | 'TAG_STATE_UNHEALTHY'>;
        stageId?: string;
    };
    url: '/api/v1/tags';
};

export type SuperplaneListTagsErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneListTagsError = SuperplaneListTagsErrors[keyof SuperplaneListTagsErrors];

export type SuperplaneListTagsResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListTagsResponse;
};

export type SuperplaneListTagsResponse2 = SuperplaneListTagsResponses[keyof SuperplaneListTagsResponses];

export type SuperplaneUpdateTagStateData = {
    body: SuperplaneUpdateTagStateRequest;
    path?: never;
    query?: never;
    url: '/api/v1/tags';
};

export type SuperplaneUpdateTagStateErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type SuperplaneUpdateTagStateError = SuperplaneUpdateTagStateErrors[keyof SuperplaneUpdateTagStateErrors];

export type SuperplaneUpdateTagStateResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneUpdateTagStateResponse;
};

export type SuperplaneUpdateTagStateResponse2 = SuperplaneUpdateTagStateResponses[keyof SuperplaneUpdateTagStateResponses];

export type ClientOptions = {
    baseUrl: `http://${string}` | `https://${string}` | (string & {});
};