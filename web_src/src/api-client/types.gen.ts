// This file is auto-generated by @hey-api/openapi-ts

export type AuthToken = {
    valueFrom?: SuperplaneIntegrationsValueFrom;
};

export type AuthorizationDomainType = 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';

export type AuthorizationPermission = {
    resource?: string;
    action?: string;
    domainType?: AuthorizationDomainType;
};

export type EventSourceEventType = {
    type?: string;
    filters?: Array<SuperplaneFilter>;
    filterOperator?: SuperplaneFilterOperator;
};

export type ExecutionResult = 'RESULT_UNKNOWN' | 'RESULT_PASSED' | 'RESULT_FAILED';

export type GroupByField = {
    name?: string;
    expression?: string;
};

export type GroupsAddUserToGroupBody = {
    domainType?: AuthorizationDomainType;
    domainId?: string;
    userId?: string;
    userEmail?: string;
};

export type GroupsAddUserToGroupResponse = {
    [key: string]: unknown;
};

export type GroupsCreateGroupRequest = {
    domainType?: AuthorizationDomainType;
    domainId?: string;
    group?: GroupsGroup;
};

export type GroupsCreateGroupResponse = {
    group?: GroupsGroup;
};

export type GroupsDeleteGroupResponse = {
    [key: string]: unknown;
};

export type GroupsDescribeGroupResponse = {
    group?: GroupsGroup;
};

export type GroupsGroup = {
    metadata?: GroupsGroupMetadata;
    spec?: GroupsGroupSpec;
    status?: GroupsGroupStatus;
};

export type GroupsGroupMetadata = {
    name?: string;
    domainType?: AuthorizationDomainType;
    domainId?: string;
    createdAt?: string;
    updatedAt?: string;
};

export type GroupsGroupSpec = {
    role?: string;
    displayName?: string;
    description?: string;
};

export type GroupsGroupStatus = {
    membersCount?: number;
};

export type GroupsListGroupUsersResponse = {
    users?: Array<UsersUser>;
    group?: GroupsGroup;
};

export type GroupsListGroupsResponse = {
    groups?: Array<GroupsGroup>;
};

export type GroupsRemoveUserFromGroupBody = {
    domainType?: AuthorizationDomainType;
    domainId?: string;
    userId?: string;
    userEmail?: string;
};

export type GroupsRemoveUserFromGroupResponse = {
    [key: string]: unknown;
};

export type GroupsUpdateGroupBody = {
    domainType?: AuthorizationDomainType;
    domainId?: string;
    group?: GroupsGroup;
};

export type GroupsUpdateGroupResponse = {
    group?: GroupsGroup;
};

export type InputMappingWhen = {
    triggeredBy?: InputMappingWhenTriggeredBy;
};

export type InputMappingWhenTriggeredBy = {
    connection?: string;
};

export type IntegrationAuth = {
    use?: IntegrationAuthType;
    token?: AuthToken;
};

export type IntegrationAuthType = 'AUTH_TYPE_NONE' | 'AUTH_TYPE_TOKEN' | 'AUTH_TYPE_OIDC';

export type IntegrationsCreateIntegrationRequest = {
    domainType?: AuthorizationDomainType;
    domainId?: string;
    integration?: IntegrationsIntegration;
};

export type IntegrationsCreateIntegrationResponse = {
    integration?: IntegrationsIntegration;
};

export type IntegrationsDescribeIntegrationResponse = {
    integration?: IntegrationsIntegration;
};

export type IntegrationsIntegration = {
    metadata?: IntegrationsIntegrationMetadata;
    spec?: IntegrationsIntegrationSpec;
};

export type IntegrationsIntegrationMetadata = {
    id?: string;
    name?: string;
    createdBy?: string;
    createdAt?: string;
    domainType?: AuthorizationDomainType;
    domainId?: string;
};

export type IntegrationsIntegrationRef = {
    domainType?: AuthorizationDomainType;
    name?: string;
};

export type IntegrationsIntegrationSpec = {
    type?: string;
    url?: string;
    auth?: IntegrationAuth;
};

export type IntegrationsListIntegrationsResponse = {
    integrations?: Array<IntegrationsIntegration>;
};

export type IntegrationsResourceRef = {
    type?: string;
    name?: string;
};

export type OrganizationsCreateInvitationBody = {
    email?: string;
};

export type OrganizationsCreateInvitationResponse = {
    invitation?: OrganizationsInvitation;
};

export type OrganizationsDeleteOrganizationResponse = {
    [key: string]: unknown;
};

export type OrganizationsDescribeOrganizationResponse = {
    organization?: OrganizationsOrganization;
};

export type OrganizationsInvitation = {
    id?: string;
    organizationId?: string;
    email?: string;
    status?: string;
    createdAt?: string;
};

export type OrganizationsListInvitationsResponse = {
    invitations?: Array<OrganizationsInvitation>;
};

export type OrganizationsOrganization = {
    metadata?: OrganizationsOrganizationMetadata;
};

export type OrganizationsOrganizationMetadata = {
    id?: string;
    name?: string;
    displayName?: string;
    description?: string;
    createdAt?: string;
    updatedAt?: string;
};

export type OrganizationsUpdateOrganizationBody = {
    organization?: OrganizationsOrganization;
};

export type OrganizationsUpdateOrganizationResponse = {
    organization?: OrganizationsOrganization;
};

export type RolesAssignRoleRequest = {
    domainType?: AuthorizationDomainType;
    domainId?: string;
    roleName?: string;
    userId?: string;
    userEmail?: string;
};

export type RolesAssignRoleResponse = {
    [key: string]: unknown;
};

export type RolesCreateRoleRequest = {
    domainType?: AuthorizationDomainType;
    domainId?: string;
    role?: RolesRole;
};

export type RolesCreateRoleResponse = {
    role?: RolesRole;
};

export type RolesDeleteRoleResponse = {
    [key: string]: unknown;
};

export type RolesDescribeRoleResponse = {
    role?: RolesRole;
};

export type RolesListRolesResponse = {
    roles?: Array<RolesRole>;
};

export type RolesRemoveRoleRequest = {
    domainType?: AuthorizationDomainType;
    domainId?: string;
    roleName?: string;
    userId?: string;
    userEmail?: string;
};

export type RolesRemoveRoleResponse = {
    [key: string]: unknown;
};

export type RolesRole = {
    metadata?: RolesRoleMetadata;
    spec?: RolesRoleSpec;
};

export type RolesRoleMetadata = {
    name?: string;
    domainType?: AuthorizationDomainType;
    domainId?: string;
    createdAt?: string;
    updatedAt?: string;
};

export type RolesRoleSpec = {
    displayName?: string;
    description?: string;
    permissions?: Array<AuthorizationPermission>;
    inheritedRole?: RolesRole;
};

export type RolesUpdateRoleBody = {
    domainType?: AuthorizationDomainType;
    domainId?: string;
    role?: RolesRole;
};

export type RolesUpdateRoleResponse = {
    role?: RolesRole;
};

/**
 * Local secrets are stored and managed by SuperPlane itself.
 */
export type SecretLocal = {
    data?: {
        [key: string]: string;
    };
};

export type SecretProvider = 'PROVIDER_UNKNOWN' | 'PROVIDER_LOCAL';

export type SecretsCreateSecretRequest = {
    secret?: SecretsSecret;
    domainType?: AuthorizationDomainType;
    domainId?: string;
};

export type SecretsCreateSecretResponse = {
    secret?: SecretsSecret;
};

export type SecretsDeleteSecretResponse = {
    [key: string]: unknown;
};

export type SecretsDescribeSecretResponse = {
    secret?: SecretsSecret;
};

export type SecretsListSecretsResponse = {
    secrets?: Array<SecretsSecret>;
};

export type SecretsSecret = {
    metadata?: SecretsSecretMetadata;
    spec?: SecretsSecretSpec;
};

export type SecretsSecretMetadata = {
    id?: string;
    name?: string;
    domainType?: AuthorizationDomainType;
    domainId?: string;
    createdAt?: string;
};

export type SecretsSecretSpec = {
    provider?: SecretProvider;
    local?: SecretLocal;
};

export type SecretsUpdateSecretBody = {
    secret?: SecretsSecret;
    domainType?: AuthorizationDomainType;
    domainId?: string;
};

export type SecretsUpdateSecretResponse = {
    secret?: SecretsSecret;
};

export type SpecGroupBy = {
    fields?: Array<GroupByField>;
};

export type SpecTimeoutBehavior = 'TIMEOUT_BEHAVIOR_NONE' | 'TIMEOUT_BEHAVIOR_DROP' | 'TIMEOUT_BEHAVIOR_EMIT';

export type SuperplaneApproveStageEventBody = {
    [key: string]: unknown;
};

export type SuperplaneApproveStageEventResponse = {
    event?: SuperplaneStageEvent;
};

export type SuperplaneCanvas = {
    metadata?: SuperplaneCanvasMetadata;
};

export type SuperplaneCanvasMetadata = {
    id?: string;
    name?: string;
    description?: string;
    createdBy?: string;
    createdAt?: string;
};

export type SuperplaneCondition = {
    type?: SuperplaneConditionType;
    approval?: SuperplaneConditionApproval;
    timeWindow?: SuperplaneConditionTimeWindow;
};

export type SuperplaneConditionApproval = {
    count?: number;
};

export type SuperplaneConditionTimeWindow = {
    start?: string;
    end?: string;
    weekDays?: Array<string>;
};

export type SuperplaneConditionType = 'CONDITION_TYPE_UNKNOWN' | 'CONDITION_TYPE_APPROVAL' | 'CONDITION_TYPE_TIME_WINDOW';

export type SuperplaneConnection = {
    type?: SuperplaneConnectionType;
    name?: string;
    filters?: Array<SuperplaneFilter>;
    filterOperator?: SuperplaneFilterOperator;
};

export type SuperplaneConnectionGroup = {
    metadata?: SuperplaneConnectionGroupMetadata;
    spec?: SuperplaneConnectionGroupSpec;
};

export type SuperplaneConnectionGroupEvent = {
    id?: string;
    sourceId?: string;
    sourceType?: SuperplaneConnectionType;
    sourceName?: string;
    receivedAt?: string;
};

export type SuperplaneConnectionGroupFieldSet = {
    id?: string;
    fields?: Array<SuperplaneKeyValuePair>;
    hash?: string;
    state?: SuperplaneConnectionGroupFieldSetState;
    stateReason?: SuperplaneConnectionGroupFieldSetStateReason;
    events?: Array<SuperplaneConnectionGroupEvent>;
    createdAt?: string;
};

export type SuperplaneConnectionGroupFieldSetState = 'STATE_UNKNOWN' | 'STATE_PENDING' | 'STATE_PROCESSED' | 'STATE_DISCARDED';

export type SuperplaneConnectionGroupFieldSetStateReason = 'STATE_REASON_NONE' | 'STATE_REASON_OK' | 'STATE_REASON_TIMEOUT';

export type SuperplaneConnectionGroupMetadata = {
    id?: string;
    name?: string;
    description?: string;
    canvasId?: string;
    createdAt?: string;
    createdBy?: string;
    updatedAt?: string;
    updatedBy?: string;
};

export type SuperplaneConnectionGroupSpec = {
    connections?: Array<SuperplaneConnection>;
    groupBy?: SpecGroupBy;
    timeout?: number;
    timeoutBehavior?: SpecTimeoutBehavior;
};

export type SuperplaneConnectionType = 'TYPE_UNKNOWN' | 'TYPE_EVENT_SOURCE' | 'TYPE_STAGE' | 'TYPE_CONNECTION_GROUP';

export type SuperplaneCreateCanvasRequest = {
    canvas?: SuperplaneCanvas;
};

export type SuperplaneCreateCanvasResponse = {
    canvas?: SuperplaneCanvas;
};

export type SuperplaneCreateConnectionGroupBody = {
    connectionGroup?: SuperplaneConnectionGroup;
};

export type SuperplaneCreateConnectionGroupResponse = {
    connectionGroup?: SuperplaneConnectionGroup;
};

export type SuperplaneCreateEventSourceBody = {
    eventSource?: SuperplaneEventSource;
};

export type SuperplaneCreateEventSourceResponse = {
    eventSource?: SuperplaneEventSource;
    key?: string;
};

export type SuperplaneCreateStageBody = {
    stage?: SuperplaneStage;
};

export type SuperplaneCreateStageResponse = {
    stage?: SuperplaneStage;
};

export type SuperplaneDataFilter = {
    expression?: string;
};

export type SuperplaneDeleteCanvasResponse = {
    [key: string]: unknown;
};

export type SuperplaneDescribeCanvasResponse = {
    canvas?: SuperplaneCanvas;
};

export type SuperplaneDescribeConnectionGroupResponse = {
    connectionGroup?: SuperplaneConnectionGroup;
};

export type SuperplaneDescribeEventSourceResponse = {
    eventSource?: SuperplaneEventSource;
};

export type SuperplaneDescribeStageResponse = {
    stage?: SuperplaneStage;
};

export type SuperplaneEventSource = {
    metadata?: SuperplaneEventSourceMetadata;
    spec?: SuperplaneEventSourceSpec;
};

export type SuperplaneEventSourceMetadata = {
    id?: string;
    name?: string;
    description?: string;
    canvasId?: string;
    createdAt?: string;
    updatedAt?: string;
};

export type SuperplaneEventSourceSpec = {
    integration?: IntegrationsIntegrationRef;
    resource?: IntegrationsResourceRef;
    events?: Array<EventSourceEventType>;
};

export type SuperplaneExecution = {
    id?: string;
    state?: SuperplaneExecutionState;
    result?: ExecutionResult;
    createdAt?: string;
    startedAt?: string;
    finishedAt?: string;
    outputs?: Array<SuperplaneOutputValue>;
    resources?: Array<SuperplaneExecutionResource>;
};

export type SuperplaneExecutionResource = {
    id?: string;
};

export type SuperplaneExecutionState = 'STATE_UNKNOWN' | 'STATE_PENDING' | 'STATE_STARTED' | 'STATE_FINISHED';

export type SuperplaneExecutor = {
    type?: string;
    integration?: IntegrationsIntegrationRef;
    resource?: IntegrationsResourceRef;
    spec?: {
        [key: string]: unknown;
    };
};

export type SuperplaneFilter = {
    type?: SuperplaneFilterType;
    data?: SuperplaneDataFilter;
    header?: SuperplaneHeaderFilter;
};

export type SuperplaneFilterOperator = 'FILTER_OPERATOR_AND' | 'FILTER_OPERATOR_OR';

export type SuperplaneFilterType = 'FILTER_TYPE_UNKNOWN' | 'FILTER_TYPE_DATA' | 'FILTER_TYPE_HEADER';

export type SuperplaneHeaderFilter = {
    expression?: string;
};

export type SuperplaneInputDefinition = {
    name?: string;
    description?: string;
};

export type SuperplaneInputMapping = {
    values?: Array<SuperplaneValueDefinition>;
    when?: InputMappingWhen;
};

export type SuperplaneIntegrationsValueFrom = {
    secret?: SuperplaneIntegrationsValueFromSecret;
};

export type SuperplaneIntegrationsValueFromSecret = {
    domainType?: AuthorizationDomainType;
    name?: string;
    key?: string;
};

export type SuperplaneKeyValuePair = {
    name?: string;
    value?: string;
};

export type SuperplaneListCanvasesResponse = {
    canvases?: Array<SuperplaneCanvas>;
};

export type SuperplaneListConnectionGroupFieldSetsResponse = {
    fieldSets?: Array<SuperplaneConnectionGroupFieldSet>;
};

export type SuperplaneListConnectionGroupsResponse = {
    connectionGroups?: Array<SuperplaneConnectionGroup>;
};

export type SuperplaneListEventSourcesResponse = {
    eventSources?: Array<SuperplaneEventSource>;
};

export type SuperplaneListStageEventsResponse = {
    events?: Array<SuperplaneStageEvent>;
};

export type SuperplaneListStagesResponse = {
    stages?: Array<SuperplaneStage>;
};

export type SuperplaneOutputDefinition = {
    name?: string;
    description?: string;
    required?: boolean;
};

export type SuperplaneOutputValue = {
    name?: string;
    value?: string;
};

export type SuperplaneResetEventSourceKeyBody = {
    [key: string]: unknown;
};

export type SuperplaneResetEventSourceKeyResponse = {
    eventSource?: SuperplaneEventSource;
    key?: string;
};

export type SuperplaneStage = {
    metadata?: SuperplaneStageMetadata;
    spec?: SuperplaneStageSpec;
};

export type SuperplaneStageEvent = {
    id?: string;
    sourceId?: string;
    sourceType?: SuperplaneConnectionType;
    state?: SuperplaneStageEventState;
    stateReason?: SuperplaneStageEventStateReason;
    createdAt?: string;
    approvals?: Array<SuperplaneStageEventApproval>;
    execution?: SuperplaneExecution;
    inputs?: Array<SuperplaneKeyValuePair>;
};

export type SuperplaneStageEventApproval = {
    approvedBy?: string;
    approvedAt?: string;
};

export type SuperplaneStageEventState = 'STATE_UNKNOWN' | 'STATE_PENDING' | 'STATE_WAITING' | 'STATE_PROCESSED';

export type SuperplaneStageEventStateReason = 'STATE_REASON_UNKNOWN' | 'STATE_REASON_APPROVAL' | 'STATE_REASON_TIME_WINDOW' | 'STATE_REASON_EXECUTION' | 'STATE_REASON_CONNECTION' | 'STATE_REASON_CANCELLED' | 'STATE_REASON_UNHEALTHY';

export type SuperplaneStageMetadata = {
    id?: string;
    name?: string;
    description?: string;
    canvasId?: string;
    createdAt?: string;
};

export type SuperplaneStageSpec = {
    connections?: Array<SuperplaneConnection>;
    conditions?: Array<SuperplaneCondition>;
    executor?: SuperplaneExecutor;
    inputs?: Array<SuperplaneInputDefinition>;
    inputMappings?: Array<SuperplaneInputMapping>;
    outputs?: Array<SuperplaneOutputDefinition>;
    secrets?: Array<SuperplaneValueDefinition>;
};

export type SuperplaneUpdateConnectionGroupBody = {
    connectionGroup?: SuperplaneConnectionGroup;
};

export type SuperplaneUpdateConnectionGroupResponse = {
    connectionGroup?: SuperplaneConnectionGroup;
};

export type SuperplaneUpdateStageBody = {
    stage?: SuperplaneStage;
};

export type SuperplaneUpdateStageResponse = {
    stage?: SuperplaneStage;
};

export type SuperplaneValueDefinition = {
    name?: string;
    valueFrom?: SuperplaneValueFrom;
    value?: string;
};

export type SuperplaneValueFrom = {
    eventData?: SuperplaneValueFromEventData;
    lastExecution?: SuperplaneValueFromLastExecution;
    secret?: SuperplaneValueFromSecret;
};

export type SuperplaneValueFromEventData = {
    connection?: string;
    expression?: string;
};

export type SuperplaneValueFromLastExecution = {
    results?: Array<ExecutionResult>;
};

export type SuperplaneValueFromSecret = {
    domainType?: AuthorizationDomainType;
    name?: string;
    key?: string;
};

export type UsersAccountProvider = {
    providerType?: string;
    providerId?: string;
    email?: string;
    displayName?: string;
    avatarUrl?: string;
    createdAt?: string;
    updatedAt?: string;
};

export type UsersListUserPermissionsResponse = {
    userId?: string;
    domainType?: AuthorizationDomainType;
    domainId?: string;
    permissions?: Array<AuthorizationPermission>;
};

export type UsersListUserRolesResponse = {
    userId?: string;
    domainType?: AuthorizationDomainType;
    domainId?: string;
    roles?: Array<RolesRole>;
};

export type UsersListUsersResponse = {
    users?: Array<UsersUser>;
};

export type UsersRegenerateTokenResponse = {
    token?: string;
};

export type UsersUser = {
    metadata?: UsersUserMetadata;
    spec?: UsersUserSpec;
    status?: UsersUserStatus;
};

export type UsersUserMetadata = {
    id?: string;
    email?: string;
    createdAt?: string;
    updatedAt?: string;
};

export type UsersUserRoleAssignment = {
    roleName?: string;
    roleDisplayName?: string;
    roleDescription?: string;
    domainType?: AuthorizationDomainType;
    domainId?: string;
    assignedAt?: string;
};

export type UsersUserSpec = {
    displayName?: string;
    accountProviders?: Array<UsersAccountProvider>;
};

export type UsersUserStatus = {
    roleAssignments?: Array<UsersUserRoleAssignment>;
};

export type GooglerpcStatus = {
    code?: number;
    message?: string;
    details?: Array<ProtobufAny>;
};

export type ProtobufAny = {
    '@type'?: string;
    [key: string]: unknown | string | undefined;
};

/**
 * `NullValue` is a singleton enumeration to represent the null value for the
 * `Value` type union.
 *
 * The JSON representation for `NullValue` is JSON `null`.
 *
 * - NULL_VALUE: Null value.
 */
export type ProtobufNullValue = 'NULL_VALUE';

export type SuperplaneListCanvasesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/canvases';
};

export type SuperplaneListCanvasesErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneListCanvasesError = SuperplaneListCanvasesErrors[keyof SuperplaneListCanvasesErrors];

export type SuperplaneListCanvasesResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListCanvasesResponse;
};

export type SuperplaneListCanvasesResponse2 = SuperplaneListCanvasesResponses[keyof SuperplaneListCanvasesResponses];

export type SuperplaneCreateCanvasData = {
    body: SuperplaneCreateCanvasRequest;
    path?: never;
    query?: never;
    url: '/api/v1/canvases';
};

export type SuperplaneCreateCanvasErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneCreateCanvasError = SuperplaneCreateCanvasErrors[keyof SuperplaneCreateCanvasErrors];

export type SuperplaneCreateCanvasResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneCreateCanvasResponse;
};

export type SuperplaneCreateCanvasResponse2 = SuperplaneCreateCanvasResponses[keyof SuperplaneCreateCanvasResponses];

export type SuperplaneListConnectionGroupsData = {
    body?: never;
    path: {
        canvasIdOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/connection-groups';
};

export type SuperplaneListConnectionGroupsErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneListConnectionGroupsError = SuperplaneListConnectionGroupsErrors[keyof SuperplaneListConnectionGroupsErrors];

export type SuperplaneListConnectionGroupsResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListConnectionGroupsResponse;
};

export type SuperplaneListConnectionGroupsResponse2 = SuperplaneListConnectionGroupsResponses[keyof SuperplaneListConnectionGroupsResponses];

export type SuperplaneCreateConnectionGroupData = {
    body: SuperplaneCreateConnectionGroupBody;
    path: {
        canvasIdOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/connection-groups';
};

export type SuperplaneCreateConnectionGroupErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneCreateConnectionGroupError = SuperplaneCreateConnectionGroupErrors[keyof SuperplaneCreateConnectionGroupErrors];

export type SuperplaneCreateConnectionGroupResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneCreateConnectionGroupResponse;
};

export type SuperplaneCreateConnectionGroupResponse2 = SuperplaneCreateConnectionGroupResponses[keyof SuperplaneCreateConnectionGroupResponses];

export type SuperplaneDescribeConnectionGroupData = {
    body?: never;
    path: {
        canvasIdOrName: string;
        idOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/connection-groups/{idOrName}';
};

export type SuperplaneDescribeConnectionGroupErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneDescribeConnectionGroupError = SuperplaneDescribeConnectionGroupErrors[keyof SuperplaneDescribeConnectionGroupErrors];

export type SuperplaneDescribeConnectionGroupResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneDescribeConnectionGroupResponse;
};

export type SuperplaneDescribeConnectionGroupResponse2 = SuperplaneDescribeConnectionGroupResponses[keyof SuperplaneDescribeConnectionGroupResponses];

export type SuperplaneUpdateConnectionGroupData = {
    body: SuperplaneUpdateConnectionGroupBody;
    path: {
        canvasIdOrName: string;
        idOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/connection-groups/{idOrName}';
};

export type SuperplaneUpdateConnectionGroupErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneUpdateConnectionGroupError = SuperplaneUpdateConnectionGroupErrors[keyof SuperplaneUpdateConnectionGroupErrors];

export type SuperplaneUpdateConnectionGroupResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneUpdateConnectionGroupResponse;
};

export type SuperplaneUpdateConnectionGroupResponse2 = SuperplaneUpdateConnectionGroupResponses[keyof SuperplaneUpdateConnectionGroupResponses];

export type SuperplaneListConnectionGroupFieldSetsData = {
    body?: never;
    path: {
        canvasIdOrName: string;
        idOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/connection-groups/{idOrName}/field-sets';
};

export type SuperplaneListConnectionGroupFieldSetsErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneListConnectionGroupFieldSetsError = SuperplaneListConnectionGroupFieldSetsErrors[keyof SuperplaneListConnectionGroupFieldSetsErrors];

export type SuperplaneListConnectionGroupFieldSetsResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListConnectionGroupFieldSetsResponse;
};

export type SuperplaneListConnectionGroupFieldSetsResponse2 = SuperplaneListConnectionGroupFieldSetsResponses[keyof SuperplaneListConnectionGroupFieldSetsResponses];

export type SuperplaneListEventSourcesData = {
    body?: never;
    path: {
        canvasIdOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/event-sources';
};

export type SuperplaneListEventSourcesErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneListEventSourcesError = SuperplaneListEventSourcesErrors[keyof SuperplaneListEventSourcesErrors];

export type SuperplaneListEventSourcesResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListEventSourcesResponse;
};

export type SuperplaneListEventSourcesResponse2 = SuperplaneListEventSourcesResponses[keyof SuperplaneListEventSourcesResponses];

export type SuperplaneCreateEventSourceData = {
    body: SuperplaneCreateEventSourceBody;
    path: {
        canvasIdOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/event-sources';
};

export type SuperplaneCreateEventSourceErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneCreateEventSourceError = SuperplaneCreateEventSourceErrors[keyof SuperplaneCreateEventSourceErrors];

export type SuperplaneCreateEventSourceResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneCreateEventSourceResponse;
};

export type SuperplaneCreateEventSourceResponse2 = SuperplaneCreateEventSourceResponses[keyof SuperplaneCreateEventSourceResponses];

export type SuperplaneDescribeEventSourceData = {
    body?: never;
    path: {
        canvasIdOrName: string;
        idOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/event-sources/{idOrName}';
};

export type SuperplaneDescribeEventSourceErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneDescribeEventSourceError = SuperplaneDescribeEventSourceErrors[keyof SuperplaneDescribeEventSourceErrors];

export type SuperplaneDescribeEventSourceResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneDescribeEventSourceResponse;
};

export type SuperplaneDescribeEventSourceResponse2 = SuperplaneDescribeEventSourceResponses[keyof SuperplaneDescribeEventSourceResponses];

export type SuperplaneResetEventSourceKeyData = {
    body: SuperplaneResetEventSourceKeyBody;
    path: {
        canvasIdOrName: string;
        idOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/event-sources/{idOrName}/reset-key';
};

export type SuperplaneResetEventSourceKeyErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneResetEventSourceKeyError = SuperplaneResetEventSourceKeyErrors[keyof SuperplaneResetEventSourceKeyErrors];

export type SuperplaneResetEventSourceKeyResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneResetEventSourceKeyResponse;
};

export type SuperplaneResetEventSourceKeyResponse2 = SuperplaneResetEventSourceKeyResponses[keyof SuperplaneResetEventSourceKeyResponses];

export type SuperplaneListStagesData = {
    body?: never;
    path: {
        canvasIdOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/stages';
};

export type SuperplaneListStagesErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneListStagesError = SuperplaneListStagesErrors[keyof SuperplaneListStagesErrors];

export type SuperplaneListStagesResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListStagesResponse;
};

export type SuperplaneListStagesResponse2 = SuperplaneListStagesResponses[keyof SuperplaneListStagesResponses];

export type SuperplaneCreateStageData = {
    body: SuperplaneCreateStageBody;
    path: {
        canvasIdOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/stages';
};

export type SuperplaneCreateStageErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneCreateStageError = SuperplaneCreateStageErrors[keyof SuperplaneCreateStageErrors];

export type SuperplaneCreateStageResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneCreateStageResponse;
};

export type SuperplaneCreateStageResponse2 = SuperplaneCreateStageResponses[keyof SuperplaneCreateStageResponses];

export type SuperplaneDescribeStageData = {
    body?: never;
    path: {
        canvasIdOrName: string;
        idOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/stages/{idOrName}';
};

export type SuperplaneDescribeStageErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneDescribeStageError = SuperplaneDescribeStageErrors[keyof SuperplaneDescribeStageErrors];

export type SuperplaneDescribeStageResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneDescribeStageResponse;
};

export type SuperplaneDescribeStageResponse2 = SuperplaneDescribeStageResponses[keyof SuperplaneDescribeStageResponses];

export type SuperplaneUpdateStageData = {
    body: SuperplaneUpdateStageBody;
    path: {
        canvasIdOrName: string;
        idOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/stages/{idOrName}';
};

export type SuperplaneUpdateStageErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneUpdateStageError = SuperplaneUpdateStageErrors[keyof SuperplaneUpdateStageErrors];

export type SuperplaneUpdateStageResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneUpdateStageResponse;
};

export type SuperplaneUpdateStageResponse2 = SuperplaneUpdateStageResponses[keyof SuperplaneUpdateStageResponses];

export type SuperplaneListStageEventsData = {
    body?: never;
    path: {
        canvasIdOrName: string;
        stageIdOrName: string;
    };
    query?: {
        states?: Array<'STATE_UNKNOWN' | 'STATE_PENDING' | 'STATE_WAITING' | 'STATE_PROCESSED'>;
        stateReasons?: Array<'STATE_REASON_UNKNOWN' | 'STATE_REASON_APPROVAL' | 'STATE_REASON_TIME_WINDOW' | 'STATE_REASON_EXECUTION' | 'STATE_REASON_CONNECTION' | 'STATE_REASON_CANCELLED' | 'STATE_REASON_UNHEALTHY'>;
    };
    url: '/api/v1/canvases/{canvasIdOrName}/stages/{stageIdOrName}/events';
};

export type SuperplaneListStageEventsErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneListStageEventsError = SuperplaneListStageEventsErrors[keyof SuperplaneListStageEventsErrors];

export type SuperplaneListStageEventsResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneListStageEventsResponse;
};

export type SuperplaneListStageEventsResponse2 = SuperplaneListStageEventsResponses[keyof SuperplaneListStageEventsResponses];

export type SuperplaneApproveStageEventData = {
    body: SuperplaneApproveStageEventBody;
    path: {
        canvasIdOrName: string;
        stageIdOrName: string;
        eventId: string;
    };
    query?: never;
    url: '/api/v1/canvases/{canvasIdOrName}/stages/{stageIdOrName}/events/{eventId}/approve';
};

export type SuperplaneApproveStageEventErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneApproveStageEventError = SuperplaneApproveStageEventErrors[keyof SuperplaneApproveStageEventErrors];

export type SuperplaneApproveStageEventResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneApproveStageEventResponse;
};

export type SuperplaneApproveStageEventResponse2 = SuperplaneApproveStageEventResponses[keyof SuperplaneApproveStageEventResponses];

export type SuperplaneDeleteCanvasData = {
    body?: never;
    path: {
        idOrName: string;
    };
    query?: never;
    url: '/api/v1/canvases/{idOrName}';
};

export type SuperplaneDeleteCanvasErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneDeleteCanvasError = SuperplaneDeleteCanvasErrors[keyof SuperplaneDeleteCanvasErrors];

export type SuperplaneDeleteCanvasResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneDeleteCanvasResponse;
};

export type SuperplaneDeleteCanvasResponse2 = SuperplaneDeleteCanvasResponses[keyof SuperplaneDeleteCanvasResponses];

export type SuperplaneDescribeCanvasData = {
    body?: never;
    path: {
        id: string;
    };
    query?: {
        name?: string;
    };
    url: '/api/v1/canvases/{id}';
};

export type SuperplaneDescribeCanvasErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SuperplaneDescribeCanvasError = SuperplaneDescribeCanvasErrors[keyof SuperplaneDescribeCanvasErrors];

export type SuperplaneDescribeCanvasResponses = {
    /**
     * A successful response.
     */
    200: SuperplaneDescribeCanvasResponse;
};

export type SuperplaneDescribeCanvasResponse2 = SuperplaneDescribeCanvasResponses[keyof SuperplaneDescribeCanvasResponses];

export type GroupsListGroupsData = {
    body?: never;
    path?: never;
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/groups';
};

export type GroupsListGroupsErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type GroupsListGroupsError = GroupsListGroupsErrors[keyof GroupsListGroupsErrors];

export type GroupsListGroupsResponses = {
    /**
     * A successful response.
     */
    200: GroupsListGroupsResponse;
};

export type GroupsListGroupsResponse2 = GroupsListGroupsResponses[keyof GroupsListGroupsResponses];

export type GroupsCreateGroupData = {
    body: GroupsCreateGroupRequest;
    path?: never;
    query?: never;
    url: '/api/v1/groups';
};

export type GroupsCreateGroupErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type GroupsCreateGroupError = GroupsCreateGroupErrors[keyof GroupsCreateGroupErrors];

export type GroupsCreateGroupResponses = {
    /**
     * A successful response.
     */
    200: GroupsCreateGroupResponse;
};

export type GroupsCreateGroupResponse2 = GroupsCreateGroupResponses[keyof GroupsCreateGroupResponses];

export type GroupsDeleteGroupData = {
    body?: never;
    path: {
        groupName: string;
    };
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/groups/{groupName}';
};

export type GroupsDeleteGroupErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type GroupsDeleteGroupError = GroupsDeleteGroupErrors[keyof GroupsDeleteGroupErrors];

export type GroupsDeleteGroupResponses = {
    /**
     * A successful response.
     */
    200: GroupsDeleteGroupResponse;
};

export type GroupsDeleteGroupResponse2 = GroupsDeleteGroupResponses[keyof GroupsDeleteGroupResponses];

export type GroupsDescribeGroupData = {
    body?: never;
    path: {
        groupName: string;
    };
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/groups/{groupName}';
};

export type GroupsDescribeGroupErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type GroupsDescribeGroupError = GroupsDescribeGroupErrors[keyof GroupsDescribeGroupErrors];

export type GroupsDescribeGroupResponses = {
    /**
     * A successful response.
     */
    200: GroupsDescribeGroupResponse;
};

export type GroupsDescribeGroupResponse2 = GroupsDescribeGroupResponses[keyof GroupsDescribeGroupResponses];

export type GroupsUpdateGroupData = {
    body: GroupsUpdateGroupBody;
    path: {
        groupName: string;
    };
    query?: never;
    url: '/api/v1/groups/{groupName}';
};

export type GroupsUpdateGroupErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type GroupsUpdateGroupError = GroupsUpdateGroupErrors[keyof GroupsUpdateGroupErrors];

export type GroupsUpdateGroupResponses = {
    /**
     * A successful response.
     */
    200: GroupsUpdateGroupResponse;
};

export type GroupsUpdateGroupResponse2 = GroupsUpdateGroupResponses[keyof GroupsUpdateGroupResponses];

export type GroupsListGroupUsersData = {
    body?: never;
    path: {
        groupName: string;
    };
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/groups/{groupName}/users';
};

export type GroupsListGroupUsersErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type GroupsListGroupUsersError = GroupsListGroupUsersErrors[keyof GroupsListGroupUsersErrors];

export type GroupsListGroupUsersResponses = {
    /**
     * A successful response.
     */
    200: GroupsListGroupUsersResponse;
};

export type GroupsListGroupUsersResponse2 = GroupsListGroupUsersResponses[keyof GroupsListGroupUsersResponses];

export type GroupsAddUserToGroupData = {
    body: GroupsAddUserToGroupBody;
    path: {
        groupName: string;
    };
    query?: never;
    url: '/api/v1/groups/{groupName}/users';
};

export type GroupsAddUserToGroupErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type GroupsAddUserToGroupError = GroupsAddUserToGroupErrors[keyof GroupsAddUserToGroupErrors];

export type GroupsAddUserToGroupResponses = {
    /**
     * A successful response.
     */
    200: GroupsAddUserToGroupResponse;
};

export type GroupsAddUserToGroupResponse2 = GroupsAddUserToGroupResponses[keyof GroupsAddUserToGroupResponses];

export type GroupsRemoveUserFromGroupData = {
    body: GroupsRemoveUserFromGroupBody;
    path: {
        groupName: string;
    };
    query?: never;
    url: '/api/v1/groups/{groupName}/users/remove';
};

export type GroupsRemoveUserFromGroupErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type GroupsRemoveUserFromGroupError = GroupsRemoveUserFromGroupErrors[keyof GroupsRemoveUserFromGroupErrors];

export type GroupsRemoveUserFromGroupResponses = {
    /**
     * A successful response.
     */
    200: GroupsRemoveUserFromGroupResponse;
};

export type GroupsRemoveUserFromGroupResponse2 = GroupsRemoveUserFromGroupResponses[keyof GroupsRemoveUserFromGroupResponses];

export type IntegrationsListIntegrationsData = {
    body?: never;
    path?: never;
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/integrations';
};

export type IntegrationsListIntegrationsErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type IntegrationsListIntegrationsError = IntegrationsListIntegrationsErrors[keyof IntegrationsListIntegrationsErrors];

export type IntegrationsListIntegrationsResponses = {
    /**
     * A successful response.
     */
    200: IntegrationsListIntegrationsResponse;
};

export type IntegrationsListIntegrationsResponse2 = IntegrationsListIntegrationsResponses[keyof IntegrationsListIntegrationsResponses];

export type IntegrationsCreateIntegrationData = {
    body: IntegrationsCreateIntegrationRequest;
    path?: never;
    query?: never;
    url: '/api/v1/integrations';
};

export type IntegrationsCreateIntegrationErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type IntegrationsCreateIntegrationError = IntegrationsCreateIntegrationErrors[keyof IntegrationsCreateIntegrationErrors];

export type IntegrationsCreateIntegrationResponses = {
    /**
     * A successful response.
     */
    200: IntegrationsCreateIntegrationResponse;
};

export type IntegrationsCreateIntegrationResponse2 = IntegrationsCreateIntegrationResponses[keyof IntegrationsCreateIntegrationResponses];

export type IntegrationsDescribeIntegrationData = {
    body?: never;
    path: {
        idOrName: string;
    };
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/integrations/{idOrName}';
};

export type IntegrationsDescribeIntegrationErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type IntegrationsDescribeIntegrationError = IntegrationsDescribeIntegrationErrors[keyof IntegrationsDescribeIntegrationErrors];

export type IntegrationsDescribeIntegrationResponses = {
    /**
     * A successful response.
     */
    200: IntegrationsDescribeIntegrationResponse;
};

export type IntegrationsDescribeIntegrationResponse2 = IntegrationsDescribeIntegrationResponses[keyof IntegrationsDescribeIntegrationResponses];

export type OrganizationsDeleteOrganizationData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/v1/organizations/{id}';
};

export type OrganizationsDeleteOrganizationErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type OrganizationsDeleteOrganizationError = OrganizationsDeleteOrganizationErrors[keyof OrganizationsDeleteOrganizationErrors];

export type OrganizationsDeleteOrganizationResponses = {
    /**
     * A successful response.
     */
    200: OrganizationsDeleteOrganizationResponse;
};

export type OrganizationsDeleteOrganizationResponse2 = OrganizationsDeleteOrganizationResponses[keyof OrganizationsDeleteOrganizationResponses];

export type OrganizationsDescribeOrganizationData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/v1/organizations/{id}';
};

export type OrganizationsDescribeOrganizationErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type OrganizationsDescribeOrganizationError = OrganizationsDescribeOrganizationErrors[keyof OrganizationsDescribeOrganizationErrors];

export type OrganizationsDescribeOrganizationResponses = {
    /**
     * A successful response.
     */
    200: OrganizationsDescribeOrganizationResponse;
};

export type OrganizationsDescribeOrganizationResponse2 = OrganizationsDescribeOrganizationResponses[keyof OrganizationsDescribeOrganizationResponses];

export type OrganizationsUpdateOrganizationData = {
    body: OrganizationsUpdateOrganizationBody;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/v1/organizations/{id}';
};

export type OrganizationsUpdateOrganizationErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type OrganizationsUpdateOrganizationError = OrganizationsUpdateOrganizationErrors[keyof OrganizationsUpdateOrganizationErrors];

export type OrganizationsUpdateOrganizationResponses = {
    /**
     * A successful response.
     */
    200: OrganizationsUpdateOrganizationResponse;
};

export type OrganizationsUpdateOrganizationResponse2 = OrganizationsUpdateOrganizationResponses[keyof OrganizationsUpdateOrganizationResponses];

export type OrganizationsListInvitationsData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/v1/organizations/{id}/invitations';
};

export type OrganizationsListInvitationsErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type OrganizationsListInvitationsError = OrganizationsListInvitationsErrors[keyof OrganizationsListInvitationsErrors];

export type OrganizationsListInvitationsResponses = {
    /**
     * A successful response.
     */
    200: OrganizationsListInvitationsResponse;
};

export type OrganizationsListInvitationsResponse2 = OrganizationsListInvitationsResponses[keyof OrganizationsListInvitationsResponses];

export type OrganizationsCreateInvitationData = {
    body: OrganizationsCreateInvitationBody;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/v1/organizations/{id}/invitations';
};

export type OrganizationsCreateInvitationErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type OrganizationsCreateInvitationError = OrganizationsCreateInvitationErrors[keyof OrganizationsCreateInvitationErrors];

export type OrganizationsCreateInvitationResponses = {
    /**
     * A successful response.
     */
    200: OrganizationsCreateInvitationResponse;
};

export type OrganizationsCreateInvitationResponse2 = OrganizationsCreateInvitationResponses[keyof OrganizationsCreateInvitationResponses];

export type RolesListRolesData = {
    body?: never;
    path?: never;
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/roles';
};

export type RolesListRolesErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type RolesListRolesError = RolesListRolesErrors[keyof RolesListRolesErrors];

export type RolesListRolesResponses = {
    /**
     * A successful response.
     */
    200: RolesListRolesResponse;
};

export type RolesListRolesResponse2 = RolesListRolesResponses[keyof RolesListRolesResponses];

export type RolesCreateRoleData = {
    body: RolesCreateRoleRequest;
    path?: never;
    query?: never;
    url: '/api/v1/roles';
};

export type RolesCreateRoleErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type RolesCreateRoleError = RolesCreateRoleErrors[keyof RolesCreateRoleErrors];

export type RolesCreateRoleResponses = {
    /**
     * A successful response.
     */
    200: RolesCreateRoleResponse;
};

export type RolesCreateRoleResponse2 = RolesCreateRoleResponses[keyof RolesCreateRoleResponses];

export type RolesAssignRoleData = {
    body: RolesAssignRoleRequest;
    path?: never;
    query?: never;
    url: '/api/v1/roles/assign';
};

export type RolesAssignRoleErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type RolesAssignRoleError = RolesAssignRoleErrors[keyof RolesAssignRoleErrors];

export type RolesAssignRoleResponses = {
    /**
     * A successful response.
     */
    200: RolesAssignRoleResponse;
};

export type RolesAssignRoleResponse2 = RolesAssignRoleResponses[keyof RolesAssignRoleResponses];

export type RolesDescribeRoleData = {
    body?: never;
    path?: never;
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
        role?: string;
    };
    url: '/api/v1/roles/describe';
};

export type RolesDescribeRoleErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type RolesDescribeRoleError = RolesDescribeRoleErrors[keyof RolesDescribeRoleErrors];

export type RolesDescribeRoleResponses = {
    /**
     * A successful response.
     */
    200: RolesDescribeRoleResponse;
};

export type RolesDescribeRoleResponse2 = RolesDescribeRoleResponses[keyof RolesDescribeRoleResponses];

export type RolesRemoveRoleData = {
    body: RolesRemoveRoleRequest;
    path?: never;
    query?: never;
    url: '/api/v1/roles/remove';
};

export type RolesRemoveRoleErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type RolesRemoveRoleError = RolesRemoveRoleErrors[keyof RolesRemoveRoleErrors];

export type RolesRemoveRoleResponses = {
    /**
     * A successful response.
     */
    200: RolesRemoveRoleResponse;
};

export type RolesRemoveRoleResponse2 = RolesRemoveRoleResponses[keyof RolesRemoveRoleResponses];

export type RolesDeleteRoleData = {
    body?: never;
    path: {
        roleName: string;
    };
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/roles/{roleName}';
};

export type RolesDeleteRoleErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type RolesDeleteRoleError = RolesDeleteRoleErrors[keyof RolesDeleteRoleErrors];

export type RolesDeleteRoleResponses = {
    /**
     * A successful response.
     */
    200: RolesDeleteRoleResponse;
};

export type RolesDeleteRoleResponse2 = RolesDeleteRoleResponses[keyof RolesDeleteRoleResponses];

export type RolesUpdateRoleData = {
    body: RolesUpdateRoleBody;
    path: {
        roleName: string;
    };
    query?: never;
    url: '/api/v1/roles/{roleName}';
};

export type RolesUpdateRoleErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type RolesUpdateRoleError = RolesUpdateRoleErrors[keyof RolesUpdateRoleErrors];

export type RolesUpdateRoleResponses = {
    /**
     * A successful response.
     */
    200: RolesUpdateRoleResponse;
};

export type RolesUpdateRoleResponse2 = RolesUpdateRoleResponses[keyof RolesUpdateRoleResponses];

export type SecretsListSecretsData = {
    body?: never;
    path?: never;
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/secrets';
};

export type SecretsListSecretsErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SecretsListSecretsError = SecretsListSecretsErrors[keyof SecretsListSecretsErrors];

export type SecretsListSecretsResponses = {
    /**
     * A successful response.
     */
    200: SecretsListSecretsResponse;
};

export type SecretsListSecretsResponse2 = SecretsListSecretsResponses[keyof SecretsListSecretsResponses];

export type SecretsCreateSecretData = {
    body: SecretsCreateSecretRequest;
    path?: never;
    query?: never;
    url: '/api/v1/secrets';
};

export type SecretsCreateSecretErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SecretsCreateSecretError = SecretsCreateSecretErrors[keyof SecretsCreateSecretErrors];

export type SecretsCreateSecretResponses = {
    /**
     * A successful response.
     */
    200: SecretsCreateSecretResponse;
};

export type SecretsCreateSecretResponse2 = SecretsCreateSecretResponses[keyof SecretsCreateSecretResponses];

export type SecretsDeleteSecretData = {
    body?: never;
    path: {
        idOrName: string;
    };
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/secrets/{idOrName}';
};

export type SecretsDeleteSecretErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SecretsDeleteSecretError = SecretsDeleteSecretErrors[keyof SecretsDeleteSecretErrors];

export type SecretsDeleteSecretResponses = {
    /**
     * A successful response.
     */
    200: SecretsDeleteSecretResponse;
};

export type SecretsDeleteSecretResponse2 = SecretsDeleteSecretResponses[keyof SecretsDeleteSecretResponses];

export type SecretsDescribeSecretData = {
    body?: never;
    path: {
        idOrName: string;
    };
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/secrets/{idOrName}';
};

export type SecretsDescribeSecretErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SecretsDescribeSecretError = SecretsDescribeSecretErrors[keyof SecretsDescribeSecretErrors];

export type SecretsDescribeSecretResponses = {
    /**
     * A successful response.
     */
    200: SecretsDescribeSecretResponse;
};

export type SecretsDescribeSecretResponse2 = SecretsDescribeSecretResponses[keyof SecretsDescribeSecretResponses];

export type SecretsUpdateSecretData = {
    body: SecretsUpdateSecretBody;
    path: {
        idOrName: string;
    };
    query?: never;
    url: '/api/v1/secrets/{idOrName}';
};

export type SecretsUpdateSecretErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type SecretsUpdateSecretError = SecretsUpdateSecretErrors[keyof SecretsUpdateSecretErrors];

export type SecretsUpdateSecretResponses = {
    /**
     * A successful response.
     */
    200: SecretsUpdateSecretResponse;
};

export type SecretsUpdateSecretResponse2 = SecretsUpdateSecretResponses[keyof SecretsUpdateSecretResponses];

export type UsersListUsersData = {
    body?: never;
    path?: never;
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/users';
};

export type UsersListUsersErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type UsersListUsersError = UsersListUsersErrors[keyof UsersListUsersErrors];

export type UsersListUsersResponses = {
    /**
     * A successful response.
     */
    200: UsersListUsersResponse;
};

export type UsersListUsersResponse2 = UsersListUsersResponses[keyof UsersListUsersResponses];

export type UsersListUserPermissionsData = {
    body?: never;
    path: {
        userId: string;
    };
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/users/{userId}/permissions';
};

export type UsersListUserPermissionsErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type UsersListUserPermissionsError = UsersListUserPermissionsErrors[keyof UsersListUserPermissionsErrors];

export type UsersListUserPermissionsResponses = {
    /**
     * A successful response.
     */
    200: UsersListUserPermissionsResponse;
};

export type UsersListUserPermissionsResponse2 = UsersListUserPermissionsResponses[keyof UsersListUserPermissionsResponses];

export type UsersListUserRolesData = {
    body?: never;
    path: {
        userId: string;
    };
    query?: {
        domainType?: 'DOMAIN_TYPE_UNSPECIFIED' | 'DOMAIN_TYPE_ORGANIZATION' | 'DOMAIN_TYPE_CANVAS';
        domainId?: string;
    };
    url: '/api/v1/users/{userId}/roles';
};

export type UsersListUserRolesErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type UsersListUserRolesError = UsersListUserRolesErrors[keyof UsersListUserRolesErrors];

export type UsersListUserRolesResponses = {
    /**
     * A successful response.
     */
    200: UsersListUserRolesResponse;
};

export type UsersListUserRolesResponse2 = UsersListUserRolesResponses[keyof UsersListUserRolesResponses];

export type UsersRegenerateTokenData = {
    body?: never;
    path: {
        userId: string;
    };
    query?: never;
    url: '/api/v1/users/{userId}/token';
};

export type UsersRegenerateTokenErrors = {
    /**
     * An unexpected error response.
     */
    default: GooglerpcStatus;
};

export type UsersRegenerateTokenError = UsersRegenerateTokenErrors[keyof UsersRegenerateTokenErrors];

export type UsersRegenerateTokenResponses = {
    /**
     * A successful response.
     */
    200: UsersRegenerateTokenResponse;
};

export type UsersRegenerateTokenResponse2 = UsersRegenerateTokenResponses[keyof UsersRegenerateTokenResponses];

export type ClientOptions = {
    baseUrl: `http://${string}` | `https://${string}` | (string & {});
};