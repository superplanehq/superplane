syntax = "proto3";

package Superplane;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/superplanehq/superplane/pkg/protos/primitives";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Superplane Primitives API";
    version: "1.0";
    description: "API for Superplane primitives";
    contact: {
      name: "API Support";
      email: "support@superplane.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service Primitives {
  rpc ListPrimitives(ListPrimitivesRequest) returns (ListPrimitivesResponse) {
    option (google.api.http) = {
      get: "/api/v1/primitives"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List primitives";
      description: "Returns a list of all primitives";
      tags: "Primitive";
    };
  }

  rpc DescribePrimitive(DescribePrimitiveRequest) returns (DescribePrimitiveResponse) {
    option (google.api.http) = {
      get: "/api/v1/primitives/{name}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Describe primitive";
      description: "Returns a primitive by its name";
      tags: "Primitive";
    };
  }
}

message ListPrimitivesRequest {}

message ListPrimitivesResponse {
  repeated Primitive primitives = 1;
}

message DescribePrimitiveRequest {
  string name = 1;
}

message DescribePrimitiveResponse {
  Primitive primitive = 1;
}

message Primitive {
  string name = 1;
  string description = 2;
  repeated ConfigurationField configuration = 3;
  repeated OutputBranch branches = 4;
}

message ConfigurationField {
  string name = 1;
  string type = 2;
  string description = 3;
  bool required = 4;
}

message OutputBranch {
  string name = 1;
}