syntax = "proto3";

package Superplane.Me;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/superplanehq/superplane/pkg/protos/me";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Superplane Me API";
    version: "1.0";
    contact: {
      name: "API Support";
      email: "support@superplane.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service Me {

  //
  // Endpoint for getting the currently authenticated user.
  //
  rpc Me(google.protobuf.Empty) returns (User) {
    option (google.api.http) = {
      get: "/api/v1/me"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get current user";
      description: "Returns the currently authenticated user";
      tags: "Me";
    };
  }

  //
  // Endpoint for regenerating the currently authenticated user's API token.
  //
  rpc RegenerateToken(google.protobuf.Empty) returns (RegenerateTokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/me/token"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Regenerate API token";
      description: "Regenerates the currently authencated user's API token";
      tags: "Me";
    };
  }
}

message User {
  string id = 1;
  string email = 2;
  string organization_id = 3;
  google.protobuf.Timestamp created_at = 4;
  bool has_token = 5;
}

message RegenerateTokenResponse {
  string token = 1;
}
