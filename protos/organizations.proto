syntax = "proto3";

package Superplane.Organizations;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/superplanehq/superplane/pkg/protos/organizations";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Superplane Organizations API";
    version: "1.0";
    description: "API for managing organizations in the Superplane service";
    contact: {
      name: "API Support";
      email: "support@superplane.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service Organizations {
  rpc DescribeOrganization(DescribeOrganizationRequest) returns (DescribeOrganizationResponse) {
    option (google.api.http) = {
      get: "/api/v1/organizations/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get organization details";
      description: "Returns the details of a specific organization (can be referenced by ID or name)";
      tags: "Organization";
    };
  }

  rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse) {
    option (google.api.http) = {
      patch: "/api/v1/organizations/{id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update an organization";
      description: "Updates the specified organization (can be referenced by ID or name)";
      tags: "Organization";
    };
  }

  rpc DeleteOrganization(DeleteOrganizationRequest) returns (DeleteOrganizationResponse) {
    option (google.api.http) = {
      delete: "/api/v1/organizations/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete an organization";
      description: "Deletes the specified organization (can be referenced by ID or name)";
      tags: "Organization";
    };
  }

  rpc RemoveUser(RemoveUserRequest) returns (RemoveUserResponse) {
    option (google.api.http) = {
      delete: "/api/v1/organizations/{id}/users/{user_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Remove a user from an organization";
      description: "Removes a user from an organization (can be referenced by ID or name)";
      tags: "Organization";
    };
  }

  rpc CreateInvitation(CreateInvitationRequest) returns (CreateInvitationResponse) {
    option (google.api.http) = {
      post: "/api/v1/organizations/{id}/invitations"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Create an organization invitation";
      description: "Invites a user to join an organization by email";
      tags: "Organization";
    };
  }

  rpc ListInvitations(ListInvitationsRequest) returns (ListInvitationsResponse) {
    option (google.api.http) = {
      get: "/api/v1/organizations/{id}/invitations"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List organization invitations";
      description: "Returns pending invitations for an organization";
      tags: "Organization";
    };
  }
}

message Organization {
  message Metadata {
    string id = 1;
    string name = 2;
    string description = 3;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp updated_at = 5;
  }

  Metadata metadata = 1;
}

message DescribeOrganizationRequest {
  string id = 1;
}

message DescribeOrganizationResponse {
  Organization organization = 1;
}

message UpdateOrganizationRequest {
  string id = 1;
  Organization organization = 2;
}

message UpdateOrganizationResponse {
  Organization organization = 1;
}

message DeleteOrganizationRequest {
  string id = 1;
}

message DeleteOrganizationResponse {}

message Invitation {
  string id = 1;
  string organization_id = 2;
  string email = 3;
  string state = 4;
  google.protobuf.Timestamp created_at = 5;
}

message CreateInvitationRequest {
  string id = 1;
  string email = 2;
}

message CreateInvitationResponse {
  Invitation invitation = 1;
}

message ListInvitationsRequest {
  string id = 1;
}

message ListInvitationsResponse {
  repeated Invitation invitations = 1;
}

message RemoveUserRequest {
  string id = 1;
  string user_id = 2;
}

message RemoveUserResponse {}

// Event messages for organization lifecycle events
message OrganizationCreated {
  string organization_id = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message OrganizationUpdated {
  string organization_id = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message OrganizationDeleted {
  string organization_id = 1;
  google.protobuf.Timestamp timestamp = 2;
}