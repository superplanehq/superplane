// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.3.0
// source: user.proto

package user

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	repository_integrator "github.com/superplanehq/superplane/pkg/protos/repository_integrator"
	response_status "github.com/superplanehq/superplane/pkg/protos/response_status"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Favorite_Kind int32

const (
	Favorite_PROJECT   Favorite_Kind = 0
	Favorite_DASHBOARD Favorite_Kind = 1
)

// Enum value maps for Favorite_Kind.
var (
	Favorite_Kind_name = map[int32]string{
		0: "PROJECT",
		1: "DASHBOARD",
	}
	Favorite_Kind_value = map[string]int32{
		"PROJECT":   0,
		"DASHBOARD": 1,
	}
)

func (x Favorite_Kind) Enum() *Favorite_Kind {
	p := new(Favorite_Kind)
	*p = x
	return p
}

func (x Favorite_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Favorite_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[0].Descriptor()
}

func (Favorite_Kind) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[0]
}

func (x Favorite_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Favorite_Kind.Descriptor instead.
func (Favorite_Kind) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2, 0}
}

type DescribeResponse_RepoScope int32

const (
	DescribeResponse_NONE    DescribeResponse_RepoScope = 0
	DescribeResponse_PUBLIC  DescribeResponse_RepoScope = 1
	DescribeResponse_PRIVATE DescribeResponse_RepoScope = 2
)

// Enum value maps for DescribeResponse_RepoScope.
var (
	DescribeResponse_RepoScope_name = map[int32]string{
		0: "NONE",
		1: "PUBLIC",
		2: "PRIVATE",
	}
	DescribeResponse_RepoScope_value = map[string]int32{
		"NONE":    0,
		"PUBLIC":  1,
		"PRIVATE": 2,
	}
)

func (x DescribeResponse_RepoScope) Enum() *DescribeResponse_RepoScope {
	p := new(DescribeResponse_RepoScope)
	*p = x
	return p
}

func (x DescribeResponse_RepoScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DescribeResponse_RepoScope) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[1].Descriptor()
}

func (DescribeResponse_RepoScope) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[1]
}

func (x DescribeResponse_RepoScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DescribeResponse_RepoScope.Descriptor instead.
func (DescribeResponse_RepoScope) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6, 0}
}

type RepositoryProvider_Type int32

const (
	RepositoryProvider_GITHUB    RepositoryProvider_Type = 0
	RepositoryProvider_BITBUCKET RepositoryProvider_Type = 1
	RepositoryProvider_GITLAB    RepositoryProvider_Type = 2
)

// Enum value maps for RepositoryProvider_Type.
var (
	RepositoryProvider_Type_name = map[int32]string{
		0: "GITHUB",
		1: "BITBUCKET",
		2: "GITLAB",
	}
	RepositoryProvider_Type_value = map[string]int32{
		"GITHUB":    0,
		"BITBUCKET": 1,
		"GITLAB":    2,
	}
)

func (x RepositoryProvider_Type) Enum() *RepositoryProvider_Type {
	p := new(RepositoryProvider_Type)
	*p = x
	return p
}

func (x RepositoryProvider_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepositoryProvider_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[2].Descriptor()
}

func (RepositoryProvider_Type) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[2]
}

func (x RepositoryProvider_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepositoryProvider_Type.Descriptor instead.
func (RepositoryProvider_Type) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7, 0}
}

type RepositoryProvider_Scope int32

const (
	RepositoryProvider_NONE    RepositoryProvider_Scope = 0
	RepositoryProvider_EMAIL   RepositoryProvider_Scope = 1
	RepositoryProvider_PUBLIC  RepositoryProvider_Scope = 2
	RepositoryProvider_PRIVATE RepositoryProvider_Scope = 3
)

// Enum value maps for RepositoryProvider_Scope.
var (
	RepositoryProvider_Scope_name = map[int32]string{
		0: "NONE",
		1: "EMAIL",
		2: "PUBLIC",
		3: "PRIVATE",
	}
	RepositoryProvider_Scope_value = map[string]int32{
		"NONE":    0,
		"EMAIL":   1,
		"PUBLIC":  2,
		"PRIVATE": 3,
	}
)

func (x RepositoryProvider_Scope) Enum() *RepositoryProvider_Scope {
	p := new(RepositoryProvider_Scope)
	*p = x
	return p
}

func (x RepositoryProvider_Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepositoryProvider_Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[3].Descriptor()
}

func (RepositoryProvider_Scope) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[3]
}

func (x RepositoryProvider_Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepositoryProvider_Scope.Descriptor instead.
func (RepositoryProvider_Scope) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7, 1}
}

type RepositoryScopes_RepositoryScope_Scope int32

const (
	RepositoryScopes_RepositoryScope_NONE    RepositoryScopes_RepositoryScope_Scope = 0
	RepositoryScopes_RepositoryScope_EMAIL   RepositoryScopes_RepositoryScope_Scope = 1
	RepositoryScopes_RepositoryScope_PUBLIC  RepositoryScopes_RepositoryScope_Scope = 2
	RepositoryScopes_RepositoryScope_PRIVATE RepositoryScopes_RepositoryScope_Scope = 3
)

// Enum value maps for RepositoryScopes_RepositoryScope_Scope.
var (
	RepositoryScopes_RepositoryScope_Scope_name = map[int32]string{
		0: "NONE",
		1: "EMAIL",
		2: "PUBLIC",
		3: "PRIVATE",
	}
	RepositoryScopes_RepositoryScope_Scope_value = map[string]int32{
		"NONE":    0,
		"EMAIL":   1,
		"PUBLIC":  2,
		"PRIVATE": 3,
	}
)

func (x RepositoryScopes_RepositoryScope_Scope) Enum() *RepositoryScopes_RepositoryScope_Scope {
	p := new(RepositoryScopes_RepositoryScope_Scope)
	*p = x
	return p
}

func (x RepositoryScopes_RepositoryScope_Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepositoryScopes_RepositoryScope_Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[4].Descriptor()
}

func (RepositoryScopes_RepositoryScope_Scope) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[4]
}

func (x RepositoryScopes_RepositoryScope_Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepositoryScopes_RepositoryScope_Scope.Descriptor instead.
func (RepositoryScopes_RepositoryScope_Scope) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8, 0, 0}
}

type User_CreationSource int32

const (
	User_NOT_SET User_CreationSource = 0
	User_OKTA    User_CreationSource = 1
)

// Enum value maps for User_CreationSource.
var (
	User_CreationSource_name = map[int32]string{
		0: "NOT_SET",
		1: "OKTA",
	}
	User_CreationSource_value = map[string]int32{
		"NOT_SET": 0,
		"OKTA":    1,
	}
)

func (x User_CreationSource) Enum() *User_CreationSource {
	p := new(User_CreationSource)
	*p = x
	return p
}

func (x User_CreationSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_CreationSource) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[5].Descriptor()
}

func (User_CreationSource) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[5]
}

func (x User_CreationSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use User_CreationSource.Descriptor instead.
func (User_CreationSource) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{27, 0}
}

// ListFavorites call request
//
// - user_id         = [required] UUID of the user for which to list favorites.
// - organization_id = [required] UUID of the organization within which to list favorites.
type ListFavoritesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrganizationId string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListFavoritesRequest) Reset() {
	*x = ListFavoritesRequest{}
	mi := &file_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFavoritesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFavoritesRequest) ProtoMessage() {}

func (x *ListFavoritesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFavoritesRequest.ProtoReflect.Descriptor instead.
func (*ListFavoritesRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *ListFavoritesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListFavoritesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

// ListFavorites call response
// - favorites = [required]
type ListFavoritesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Favorites     []*Favorite            `protobuf:"bytes,1,rep,name=favorites,proto3" json:"favorites,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFavoritesResponse) Reset() {
	*x = ListFavoritesResponse{}
	mi := &file_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFavoritesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFavoritesResponse) ProtoMessage() {}

func (x *ListFavoritesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFavoritesResponse.ProtoReflect.Descriptor instead.
func (*ListFavoritesResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *ListFavoritesResponse) GetFavorites() []*Favorite {
	if x != nil {
		return x.Favorites
	}
	return nil
}

// - user_id         = [required] ID of the user
// - organization_id = [required] ID of organization
// - favorite_id     = [required] ID of the favorite
// - kind            = [required] Kind of the favorite / can be Dashboard or Project
type Favorite struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrganizationId string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	FavoriteId     string                 `protobuf:"bytes,3,opt,name=favorite_id,json=favoriteId,proto3" json:"favorite_id,omitempty"`
	Kind           Favorite_Kind          `protobuf:"varint,4,opt,name=kind,proto3,enum=InternalApi.User.Favorite_Kind" json:"kind,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Favorite) Reset() {
	*x = Favorite{}
	mi := &file_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Favorite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Favorite) ProtoMessage() {}

func (x *Favorite) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Favorite.ProtoReflect.Descriptor instead.
func (*Favorite) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *Favorite) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Favorite) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *Favorite) GetFavoriteId() string {
	if x != nil {
		return x.FavoriteId
	}
	return ""
}

func (x *Favorite) GetKind() Favorite_Kind {
	if x != nil {
		return x.Kind
	}
	return Favorite_PROJECT
}

// DescribeMany call request
//
// - user_ids = [required] UUIDs of the users to describe.
type DescribeManyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIds       []string               `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeManyRequest) Reset() {
	*x = DescribeManyRequest{}
	mi := &file_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeManyRequest) ProtoMessage() {}

func (x *DescribeManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeManyRequest.ProtoReflect.Descriptor instead.
func (*DescribeManyRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *DescribeManyRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

// DescribeMany call response
//
// - users  = [required] descriptions of users.
// - status = [required] status of response.
type DescribeManyResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Users         []*User                         `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Status        *response_status.ResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeManyResponse) Reset() {
	*x = DescribeManyResponse{}
	mi := &file_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeManyResponse) ProtoMessage() {}

func (x *DescribeManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeManyResponse.ProtoReflect.Descriptor instead.
func (*DescribeManyResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *DescribeManyResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *DescribeManyResponse) GetStatus() *response_status.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// Describe call request
//
// - user_id = [required] uuid or login of a user in system.
type DescribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeRequest) Reset() {
	*x = DescribeRequest{}
	mi := &file_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeRequest) ProtoMessage() {}

func (x *DescribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeRequest.ProtoReflect.Descriptor instead.
func (*DescribeRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Describe call response
//
// - email             = [required] email of a user.
// - created_at        = [required] date of creation a user.
// - avatar_url        = [required] url to user avatar.
// - user_id           = [required] UUID of the user.
// - github_token      = [required] GitHub token of a user - use repository_providers instead.
// - github_scope      = [deprecated] GitHub access scope - use repository_providers instead.
// - github_uid        = [deprecated] GitHub uid of a user - use repository_providers instead.
// - name              = [required] User's name used for presentation purposes.
// - github_login      = [deprecated] GitHub login of a user - use repository_providers instead.
// - company           = [required] The company associated with the user.
// - blocked_at        = [required] the timestamp of user blocking
// - repository_scopes = [deprecated] List of repository scopes availabe for user - use repository_providers instead.
// - repository_providers = [required] List of repository providers availabe for user
type DescribeResponse struct {
	state               protoimpl.MessageState          `protogen:"open.v1"`
	Status              *response_status.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Email               string                          `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt           *timestamp.Timestamp            `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	AvatarUrl           string                          `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	UserId              string                          `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GithubToken         string                          `protobuf:"bytes,7,opt,name=github_token,json=githubToken,proto3" json:"github_token,omitempty"`
	GithubScope         DescribeResponse_RepoScope      `protobuf:"varint,12,opt,name=github_scope,json=githubScope,proto3,enum=InternalApi.User.DescribeResponse_RepoScope" json:"github_scope,omitempty"`
	GithubUid           string                          `protobuf:"bytes,8,opt,name=github_uid,json=githubUid,proto3" json:"github_uid,omitempty"`
	Name                string                          `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	GithubLogin         string                          `protobuf:"bytes,11,opt,name=github_login,json=githubLogin,proto3" json:"github_login,omitempty"`
	Company             string                          `protobuf:"bytes,13,opt,name=company,proto3" json:"company,omitempty"`
	BlockedAt           *timestamp.Timestamp            `protobuf:"bytes,14,opt,name=blocked_at,json=blockedAt,proto3" json:"blocked_at,omitempty"`
	RepositoryScopes    *RepositoryScopes               `protobuf:"bytes,15,opt,name=repository_scopes,json=repositoryScopes,proto3" json:"repository_scopes,omitempty"`
	RepositoryProviders []*RepositoryProvider           `protobuf:"bytes,16,rep,name=repository_providers,json=repositoryProviders,proto3" json:"repository_providers,omitempty"`
	User                *User                           `protobuf:"bytes,17,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DescribeResponse) Reset() {
	*x = DescribeResponse{}
	mi := &file_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeResponse) ProtoMessage() {}

func (x *DescribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeResponse.ProtoReflect.Descriptor instead.
func (*DescribeResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeResponse) GetStatus() *response_status.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DescribeResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DescribeResponse) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DescribeResponse) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *DescribeResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DescribeResponse) GetGithubToken() string {
	if x != nil {
		return x.GithubToken
	}
	return ""
}

func (x *DescribeResponse) GetGithubScope() DescribeResponse_RepoScope {
	if x != nil {
		return x.GithubScope
	}
	return DescribeResponse_NONE
}

func (x *DescribeResponse) GetGithubUid() string {
	if x != nil {
		return x.GithubUid
	}
	return ""
}

func (x *DescribeResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DescribeResponse) GetGithubLogin() string {
	if x != nil {
		return x.GithubLogin
	}
	return ""
}

func (x *DescribeResponse) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *DescribeResponse) GetBlockedAt() *timestamp.Timestamp {
	if x != nil {
		return x.BlockedAt
	}
	return nil
}

func (x *DescribeResponse) GetRepositoryScopes() *RepositoryScopes {
	if x != nil {
		return x.RepositoryScopes
	}
	return nil
}

func (x *DescribeResponse) GetRepositoryProviders() []*RepositoryProvider {
	if x != nil {
		return x.RepositoryProviders
	}
	return nil
}

func (x *DescribeResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type RepositoryProvider struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Type          RepositoryProvider_Type  `protobuf:"varint,1,opt,name=type,proto3,enum=InternalApi.User.RepositoryProvider_Type" json:"type,omitempty"`
	Scope         RepositoryProvider_Scope `protobuf:"varint,2,opt,name=scope,proto3,enum=InternalApi.User.RepositoryProvider_Scope" json:"scope,omitempty"`
	Login         string                   `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	Uid           string                   `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepositoryProvider) Reset() {
	*x = RepositoryProvider{}
	mi := &file_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryProvider) ProtoMessage() {}

func (x *RepositoryProvider) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryProvider.ProtoReflect.Descriptor instead.
func (*RepositoryProvider) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *RepositoryProvider) GetType() RepositoryProvider_Type {
	if x != nil {
		return x.Type
	}
	return RepositoryProvider_GITHUB
}

func (x *RepositoryProvider) GetScope() RepositoryProvider_Scope {
	if x != nil {
		return x.Scope
	}
	return RepositoryProvider_NONE
}

func (x *RepositoryProvider) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *RepositoryProvider) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type RepositoryScopes struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Github        *RepositoryScopes_RepositoryScope `protobuf:"bytes,1,opt,name=github,proto3" json:"github,omitempty"`
	Bitbucket     *RepositoryScopes_RepositoryScope `protobuf:"bytes,2,opt,name=bitbucket,proto3" json:"bitbucket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepositoryScopes) Reset() {
	*x = RepositoryScopes{}
	mi := &file_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryScopes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryScopes) ProtoMessage() {}

func (x *RepositoryScopes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryScopes.ProtoReflect.Descriptor instead.
func (*RepositoryScopes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8}
}

func (x *RepositoryScopes) GetGithub() *RepositoryScopes_RepositoryScope {
	if x != nil {
		return x.Github
	}
	return nil
}

func (x *RepositoryScopes) GetBitbucket() *RepositoryScopes_RepositoryScope {
	if x != nil {
		return x.Bitbucket
	}
	return nil
}

// Update call request
//
// - user = [required] The user to be updated. The ID identifies the user, while
// other fileds are to be changed.
type UpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	mi := &file_user_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Update call response
//
// Response:
// - status = [required] Status of response
// - user   = [required] The description of updated user
type UpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *status.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	User          *User                  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	mi := &file_user_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UpdateResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// SearchUsers call request
//
// - query  = [required] The query to be used to find the user, for example it could be an email, username or user id.
// - limit  = [required] The limit value used to limit the number of users returned.
type SearchUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUsersRequest) Reset() {
	*x = SearchUsersRequest{}
	mi := &file_user_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsersRequest) ProtoMessage() {}

func (x *SearchUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUsersRequest.ProtoReflect.Descriptor instead.
func (*SearchUsersRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{11}
}

func (x *SearchUsersRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchUsersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// SearchUsers call response
//
// Response:
// - user     = [Required] The list of users found
type SearchUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUsersResponse) Reset() {
	*x = SearchUsersResponse{}
	mi := &file_user_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsersResponse) ProtoMessage() {}

func (x *SearchUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUsersResponse.ProtoReflect.Descriptor instead.
func (*SearchUsersResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12}
}

func (x *SearchUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

// DeleteWithOwnedOrgs call request
//
// - user_id = [required] The id of the user who should be purged
type DeleteWithOwnedOrgsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWithOwnedOrgsRequest) Reset() {
	*x = DeleteWithOwnedOrgsRequest{}
	mi := &file_user_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWithOwnedOrgsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWithOwnedOrgsRequest) ProtoMessage() {}

func (x *DeleteWithOwnedOrgsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWithOwnedOrgsRequest.ProtoReflect.Descriptor instead.
func (*DeleteWithOwnedOrgsRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteWithOwnedOrgsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Regenerate token call request
//
// - user_id = [required] The id of the user whose token should be regenerated
type RegenerateTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegenerateTokenRequest) Reset() {
	*x = RegenerateTokenRequest{}
	mi := &file_user_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegenerateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateTokenRequest) ProtoMessage() {}

func (x *RegenerateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateTokenRequest.ProtoReflect.Descriptor instead.
func (*RegenerateTokenRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{14}
}

func (x *RegenerateTokenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Regenerate token call response
//
// Response:
// - status = [required] Status of response
// - user   = [required] The description of updated user
type RegenerateTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *status.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ApiToken      string                 `protobuf:"bytes,3,opt,name=api_token,json=apiToken,proto3" json:"api_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegenerateTokenResponse) Reset() {
	*x = RegenerateTokenResponse{}
	mi := &file_user_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegenerateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateTokenResponse) ProtoMessage() {}

func (x *RegenerateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateTokenResponse.ProtoReflect.Descriptor instead.
func (*RegenerateTokenResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{15}
}

func (x *RegenerateTokenResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RegenerateTokenResponse) GetApiToken() string {
	if x != nil {
		return x.ApiToken
	}
	return ""
}

// CheckGithubToken call request
type CheckGithubTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckGithubTokenRequest) Reset() {
	*x = CheckGithubTokenRequest{}
	mi := &file_user_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckGithubTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckGithubTokenRequest) ProtoMessage() {}

func (x *CheckGithubTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckGithubTokenRequest.ProtoReflect.Descriptor instead.
func (*CheckGithubTokenRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{16}
}

func (x *CheckGithubTokenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// CheckGithubToken call response
//
// Response
// - revoked     = [required] Client revoke the token on the github
// - repo        = [required] Token has access to private repositories
// - public_repo = [required] Token has access to public repositories
type CheckGithubTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revoked       bool                   `protobuf:"varint,1,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Repo          bool                   `protobuf:"varint,2,opt,name=repo,proto3" json:"repo,omitempty"`
	PublicRepo    bool                   `protobuf:"varint,3,opt,name=public_repo,json=publicRepo,proto3" json:"public_repo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckGithubTokenResponse) Reset() {
	*x = CheckGithubTokenResponse{}
	mi := &file_user_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckGithubTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckGithubTokenResponse) ProtoMessage() {}

func (x *CheckGithubTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckGithubTokenResponse.ProtoReflect.Descriptor instead.
func (*CheckGithubTokenResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{17}
}

func (x *CheckGithubTokenResponse) GetRevoked() bool {
	if x != nil {
		return x.Revoked
	}
	return false
}

func (x *CheckGithubTokenResponse) GetRepo() bool {
	if x != nil {
		return x.Repo
	}
	return false
}

func (x *CheckGithubTokenResponse) GetPublicRepo() bool {
	if x != nil {
		return x.PublicRepo
	}
	return false
}

// - user_id = [required] The user id
type BlockAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockAccountRequest) Reset() {
	*x = BlockAccountRequest{}
	mi := &file_user_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockAccountRequest) ProtoMessage() {}

func (x *BlockAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockAccountRequest.ProtoReflect.Descriptor instead.
func (*BlockAccountRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{18}
}

func (x *BlockAccountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// - user_id = [required] The user id
type UnblockAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnblockAccountRequest) Reset() {
	*x = UnblockAccountRequest{}
	mi := &file_user_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnblockAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnblockAccountRequest) ProtoMessage() {}

func (x *UnblockAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnblockAccountRequest.ProtoReflect.Descriptor instead.
func (*UnblockAccountRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{19}
}

func (x *UnblockAccountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetRepositoryTokenRequest struct {
	state           protoimpl.MessageState                `protogen:"open.v1"`
	UserId          string                                `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IntegrationType repository_integrator.IntegrationType `protobuf:"varint,2,opt,name=integration_type,json=integrationType,proto3,enum=InternalApi.RepositoryIntegrator.IntegrationType" json:"integration_type,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetRepositoryTokenRequest) Reset() {
	*x = GetRepositoryTokenRequest{}
	mi := &file_user_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepositoryTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryTokenRequest) ProtoMessage() {}

func (x *GetRepositoryTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryTokenRequest.ProtoReflect.Descriptor instead.
func (*GetRepositoryTokenRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{20}
}

func (x *GetRepositoryTokenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetRepositoryTokenRequest) GetIntegrationType() repository_integrator.IntegrationType {
	if x != nil {
		return x.IntegrationType
	}
	return repository_integrator.IntegrationType(0)
}

type GetRepositoryTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiresAt     *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepositoryTokenResponse) Reset() {
	*x = GetRepositoryTokenResponse{}
	mi := &file_user_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepositoryTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryTokenResponse) ProtoMessage() {}

func (x *GetRepositoryTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryTokenResponse.ProtoReflect.Descriptor instead.
func (*GetRepositoryTokenResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{21}
}

func (x *GetRepositoryTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetRepositoryTokenResponse) GetExpiresAt() *timestamp.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type DescribeByRepositoryProviderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Provider      *RepositoryProvider    `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeByRepositoryProviderRequest) Reset() {
	*x = DescribeByRepositoryProviderRequest{}
	mi := &file_user_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeByRepositoryProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeByRepositoryProviderRequest) ProtoMessage() {}

func (x *DescribeByRepositoryProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeByRepositoryProviderRequest.ProtoReflect.Descriptor instead.
func (*DescribeByRepositoryProviderRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{22}
}

func (x *DescribeByRepositoryProviderRequest) GetProvider() *RepositoryProvider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type DescribeByEmailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeByEmailRequest) Reset() {
	*x = DescribeByEmailRequest{}
	mi := &file_user_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeByEmailRequest) ProtoMessage() {}

func (x *DescribeByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeByEmailRequest.ProtoReflect.Descriptor instead.
func (*DescribeByEmailRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{23}
}

func (x *DescribeByEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type RefreshRepositoryProviderRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	UserId        string                  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type          RepositoryProvider_Type `protobuf:"varint,2,opt,name=type,proto3,enum=InternalApi.User.RepositoryProvider_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshRepositoryProviderRequest) Reset() {
	*x = RefreshRepositoryProviderRequest{}
	mi := &file_user_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshRepositoryProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRepositoryProviderRequest) ProtoMessage() {}

func (x *RefreshRepositoryProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRepositoryProviderRequest.ProtoReflect.Descriptor instead.
func (*RefreshRepositoryProviderRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{24}
}

func (x *RefreshRepositoryProviderRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RefreshRepositoryProviderRequest) GetType() RepositoryProvider_Type {
	if x != nil {
		return x.Type
	}
	return RepositoryProvider_GITHUB
}

type RefreshRepositoryProviderResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserId             string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RepositoryProvider *RepositoryProvider    `protobuf:"bytes,2,opt,name=repository_provider,json=repositoryProvider,proto3" json:"repository_provider,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RefreshRepositoryProviderResponse) Reset() {
	*x = RefreshRepositoryProviderResponse{}
	mi := &file_user_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshRepositoryProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRepositoryProviderResponse) ProtoMessage() {}

func (x *RefreshRepositoryProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRepositoryProviderResponse.ProtoReflect.Descriptor instead.
func (*RefreshRepositoryProviderResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{25}
}

func (x *RefreshRepositoryProviderResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RefreshRepositoryProviderResponse) GetRepositoryProvider() *RepositoryProvider {
	if x != nil {
		return x.RepositoryProvider
	}
	return nil
}

// Create call CreateRequest
// fields
// - email = [required] The user's email address
// - name = [required] The user's display name
// - password = [optional] The user's password
// - repository_providers = [optional] List of repository providers for the user - will be always created with email scope
// - skip_password_change = [optional] The user will not be asked to change the password on the first login. Default is false.
type CreateRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Email               string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Password            string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	RepositoryProviders []*RepositoryProvider  `protobuf:"bytes,4,rep,name=repository_providers,json=repositoryProviders,proto3" json:"repository_providers,omitempty"`
	SkipPasswordChange  bool                   `protobuf:"varint,5,opt,name=skip_password_change,json=skipPasswordChange,proto3" json:"skip_password_change,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	mi := &file_user_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{26}
}

func (x *CreateRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateRequest) GetRepositoryProviders() []*RepositoryProvider {
	if x != nil {
		return x.RepositoryProviders
	}
	return nil
}

func (x *CreateRequest) GetSkipPasswordChange() bool {
	if x != nil {
		return x.SkipPasswordChange
	}
	return false
}

// - id = user UUID
// - avatar_url = Url to user avatar.
// - github_uid = GitHub uid of a user.
// - name = User's name used for presentation purposes.
// - company = The company associated with the user.
// - email = User email.
// - blocked_at = the timestamp of user blocking
// - visited_at = the timestamp of user last visit
// - single_org_user = Is this is a single org user? This is the case for okta users for example.
// - org_id = If single_org_user is true, this is the org_id to which this user belongs.
// - creation_source = not set or okta
// - deactivated = if the account was deactivated
type User struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AvatarUrl           string                 `protobuf:"bytes,3,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	GithubUid           string                 `protobuf:"bytes,4,opt,name=github_uid,json=githubUid,proto3" json:"github_uid,omitempty"`
	Name                string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	GithubLogin         string                 `protobuf:"bytes,7,opt,name=github_login,json=githubLogin,proto3" json:"github_login,omitempty"`
	Company             string                 `protobuf:"bytes,8,opt,name=company,proto3" json:"company,omitempty"`
	Email               string                 `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`
	BlockedAt           *timestamp.Timestamp   `protobuf:"bytes,10,opt,name=blocked_at,json=blockedAt,proto3" json:"blocked_at,omitempty"`
	CreatedAt           *timestamp.Timestamp   `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	RepositoryProviders []*RepositoryProvider  `protobuf:"bytes,12,rep,name=repository_providers,json=repositoryProviders,proto3" json:"repository_providers,omitempty"`
	VisitedAt           *timestamp.Timestamp   `protobuf:"bytes,13,opt,name=visited_at,json=visitedAt,proto3" json:"visited_at,omitempty"`
	SingleOrgUser       bool                   `protobuf:"varint,14,opt,name=single_org_user,json=singleOrgUser,proto3" json:"single_org_user,omitempty"`
	OrgId               string                 `protobuf:"bytes,15,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CreationSource      User_CreationSource    `protobuf:"varint,16,opt,name=creation_source,json=creationSource,proto3,enum=InternalApi.User.User_CreationSource" json:"creation_source,omitempty"`
	Deactivated         bool                   `protobuf:"varint,17,opt,name=deactivated,proto3" json:"deactivated,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_user_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{27}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *User) GetGithubUid() string {
	if x != nil {
		return x.GithubUid
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetGithubLogin() string {
	if x != nil {
		return x.GithubLogin
	}
	return ""
}

func (x *User) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetBlockedAt() *timestamp.Timestamp {
	if x != nil {
		return x.BlockedAt
	}
	return nil
}

func (x *User) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetRepositoryProviders() []*RepositoryProvider {
	if x != nil {
		return x.RepositoryProviders
	}
	return nil
}

func (x *User) GetVisitedAt() *timestamp.Timestamp {
	if x != nil {
		return x.VisitedAt
	}
	return nil
}

func (x *User) GetSingleOrgUser() bool {
	if x != nil {
		return x.SingleOrgUser
	}
	return false
}

func (x *User) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *User) GetCreationSource() User_CreationSource {
	if x != nil {
		return x.CreationSource
	}
	return User_NOT_SET
}

func (x *User) GetDeactivated() bool {
	if x != nil {
		return x.Deactivated
	}
	return false
}

// Published with routing key: 'created'.
// All fields are required.
type UserCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Invited       bool                   `protobuf:"varint,3,opt,name=invited,proto3" json:"invited,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserCreated) Reset() {
	*x = UserCreated{}
	mi := &file_user_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCreated) ProtoMessage() {}

func (x *UserCreated) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCreated.ProtoReflect.Descriptor instead.
func (*UserCreated) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{28}
}

func (x *UserCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserCreated) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *UserCreated) GetInvited() bool {
	if x != nil {
		return x.Invited
	}
	return false
}

// Published with routing key: 'deleted'.
// All fields are required.
type UserDeleted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserDeleted) Reset() {
	*x = UserDeleted{}
	mi := &file_user_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeleted) ProtoMessage() {}

func (x *UserDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeleted.ProtoReflect.Descriptor instead.
func (*UserDeleted) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{29}
}

func (x *UserDeleted) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserDeleted) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Published with routing key: 'updated'.
// All fields are required.
type UserUpdated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserUpdated) Reset() {
	*x = UserUpdated{}
	mi := &file_user_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdated) ProtoMessage() {}

func (x *UserUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdated.ProtoReflect.Descriptor instead.
func (*UserUpdated) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{30}
}

func (x *UserUpdated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserUpdated) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type UserJoinedOrganization struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrgId         string                 `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserJoinedOrganization) Reset() {
	*x = UserJoinedOrganization{}
	mi := &file_user_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserJoinedOrganization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserJoinedOrganization) ProtoMessage() {}

func (x *UserJoinedOrganization) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserJoinedOrganization.ProtoReflect.Descriptor instead.
func (*UserJoinedOrganization) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{31}
}

func (x *UserJoinedOrganization) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserJoinedOrganization) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *UserJoinedOrganization) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type UserLeftOrganization struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrgId         string                 `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserLeftOrganization) Reset() {
	*x = UserLeftOrganization{}
	mi := &file_user_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserLeftOrganization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLeftOrganization) ProtoMessage() {}

func (x *UserLeftOrganization) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLeftOrganization.ProtoReflect.Descriptor instead.
func (*UserLeftOrganization) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{32}
}

func (x *UserLeftOrganization) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserLeftOrganization) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *UserLeftOrganization) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type MemberInvited struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GithubUsername string                 `protobuf:"bytes,1,opt,name=github_username,json=githubUsername,proto3" json:"github_username,omitempty"`
	OrgId          string                 `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Timestamp      *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MemberInvited) Reset() {
	*x = MemberInvited{}
	mi := &file_user_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberInvited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInvited) ProtoMessage() {}

func (x *MemberInvited) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInvited.ProtoReflect.Descriptor instead.
func (*MemberInvited) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{33}
}

func (x *MemberInvited) GetGithubUsername() string {
	if x != nil {
		return x.GithubUsername
	}
	return ""
}

func (x *MemberInvited) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *MemberInvited) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Published with routing key: 'active_owner'.
// All fields are required.
//
// We sent this event if user as a org owner create any project in the first day
type ActiveOwner struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveOwner) Reset() {
	*x = ActiveOwner{}
	mi := &file_user_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveOwner) ProtoMessage() {}

func (x *ActiveOwner) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveOwner.ProtoReflect.Descriptor instead.
func (*ActiveOwner) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{34}
}

func (x *ActiveOwner) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ActiveOwner) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Published with routing key: 'inactive_owner'.
// All fields are required.
//
// We sent this event if user as a org owner did not create any project in the first day
type InactiveOwner struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InactiveOwner) Reset() {
	*x = InactiveOwner{}
	mi := &file_user_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InactiveOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InactiveOwner) ProtoMessage() {}

func (x *InactiveOwner) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InactiveOwner.ProtoReflect.Descriptor instead.
func (*InactiveOwner) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{35}
}

func (x *InactiveOwner) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InactiveOwner) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Published with routing key: 'work_email_added'.
// All fields are required.
type WorkEmailAdded struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	OldEmail      string                 `protobuf:"bytes,3,opt,name=old_email,json=oldEmail,proto3" json:"old_email,omitempty"`
	NewEmail      string                 `protobuf:"bytes,4,opt,name=new_email,json=newEmail,proto3" json:"new_email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkEmailAdded) Reset() {
	*x = WorkEmailAdded{}
	mi := &file_user_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkEmailAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkEmailAdded) ProtoMessage() {}

func (x *WorkEmailAdded) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkEmailAdded.ProtoReflect.Descriptor instead.
func (*WorkEmailAdded) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{36}
}

func (x *WorkEmailAdded) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WorkEmailAdded) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *WorkEmailAdded) GetOldEmail() string {
	if x != nil {
		return x.OldEmail
	}
	return ""
}

func (x *WorkEmailAdded) GetNewEmail() string {
	if x != nil {
		return x.NewEmail
	}
	return ""
}

// Published with routing key: 'favorite_created'.
// All fields are required.
type FavoriteCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Favorite      *Favorite              `protobuf:"bytes,1,opt,name=favorite,proto3" json:"favorite,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FavoriteCreated) Reset() {
	*x = FavoriteCreated{}
	mi := &file_user_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FavoriteCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteCreated) ProtoMessage() {}

func (x *FavoriteCreated) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteCreated.ProtoReflect.Descriptor instead.
func (*FavoriteCreated) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{37}
}

func (x *FavoriteCreated) GetFavorite() *Favorite {
	if x != nil {
		return x.Favorite
	}
	return nil
}

func (x *FavoriteCreated) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Published with routing key: 'favorite_deleted'.
// All fields are required.
type FavoriteDeleted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Favorite      *Favorite              `protobuf:"bytes,1,opt,name=favorite,proto3" json:"favorite,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FavoriteDeleted) Reset() {
	*x = FavoriteDeleted{}
	mi := &file_user_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FavoriteDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteDeleted) ProtoMessage() {}

func (x *FavoriteDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteDeleted.ProtoReflect.Descriptor instead.
func (*FavoriteDeleted) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{38}
}

func (x *FavoriteDeleted) GetFavorite() *Favorite {
	if x != nil {
		return x.Favorite
	}
	return nil
}

func (x *FavoriteDeleted) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type RepositoryScopes_RepositoryScope struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Scope         RepositoryScopes_RepositoryScope_Scope `protobuf:"varint,2,opt,name=scope,proto3,enum=InternalApi.User.RepositoryScopes_RepositoryScope_Scope" json:"scope,omitempty"`
	Login         string                                 `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	Uid           string                                 `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepositoryScopes_RepositoryScope) Reset() {
	*x = RepositoryScopes_RepositoryScope{}
	mi := &file_user_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryScopes_RepositoryScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryScopes_RepositoryScope) ProtoMessage() {}

func (x *RepositoryScopes_RepositoryScope) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryScopes_RepositoryScope.ProtoReflect.Descriptor instead.
func (*RepositoryScopes_RepositoryScope) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8, 0}
}

func (x *RepositoryScopes_RepositoryScope) GetScope() RepositoryScopes_RepositoryScope_Scope {
	if x != nil {
		return x.Scope
	}
	return RepositoryScopes_RepositoryScope_NONE
}

func (x *RepositoryScopes_RepositoryScope) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *RepositoryScopes_RepositoryScope) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

var File_user_proto protoreflect.FileDescriptor

const file_user_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"user.proto\x12\x10InternalApi.User\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17google/rpc/status.proto\x1a\"internal_api/response_status.proto\x1a\x1brepository_integrator.proto\"X\n" +
	"\x14ListFavoritesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0forganization_id\x18\x02 \x01(\tR\x0eorganizationId\"Q\n" +
	"\x15ListFavoritesResponse\x128\n" +
	"\tfavorites\x18\x01 \x03(\v2\x1a.InternalApi.User.FavoriteR\tfavorites\"\xc6\x01\n" +
	"\bFavorite\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0forganization_id\x18\x02 \x01(\tR\x0eorganizationId\x12\x1f\n" +
	"\vfavorite_id\x18\x03 \x01(\tR\n" +
	"favoriteId\x123\n" +
	"\x04kind\x18\x04 \x01(\x0e2\x1f.InternalApi.User.Favorite.KindR\x04kind\"\"\n" +
	"\x04Kind\x12\v\n" +
	"\aPROJECT\x10\x00\x12\r\n" +
	"\tDASHBOARD\x10\x01\"0\n" +
	"\x13DescribeManyRequest\x12\x19\n" +
	"\buser_ids\x18\x01 \x03(\tR\auserIds\"y\n" +
	"\x14DescribeManyResponse\x12,\n" +
	"\x05users\x18\x01 \x03(\v2\x16.InternalApi.User.UserR\x05users\x123\n" +
	"\x06status\x18\x02 \x01(\v2\x1b.InternalApi.ResponseStatusR\x06status\"*\n" +
	"\x0fDescribeRequest\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xf5\x05\n" +
	"\x10DescribeResponse\x123\n" +
	"\x06status\x18\x01 \x01(\v2\x1b.InternalApi.ResponseStatusR\x06status\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x05 \x01(\tR\tavatarUrl\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\tR\x06userId\x12!\n" +
	"\fgithub_token\x18\a \x01(\tR\vgithubToken\x12O\n" +
	"\fgithub_scope\x18\f \x01(\x0e2,.InternalApi.User.DescribeResponse.RepoScopeR\vgithubScope\x12\x1d\n" +
	"\n" +
	"github_uid\x18\b \x01(\tR\tgithubUid\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\x12!\n" +
	"\fgithub_login\x18\v \x01(\tR\vgithubLogin\x12\x18\n" +
	"\acompany\x18\r \x01(\tR\acompany\x129\n" +
	"\n" +
	"blocked_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tblockedAt\x12O\n" +
	"\x11repository_scopes\x18\x0f \x01(\v2\".InternalApi.User.RepositoryScopesR\x10repositoryScopes\x12W\n" +
	"\x14repository_providers\x18\x10 \x03(\v2$.InternalApi.User.RepositoryProviderR\x13repositoryProviders\x12*\n" +
	"\x04user\x18\x11 \x01(\v2\x16.InternalApi.User.UserR\x04user\".\n" +
	"\tRepoScope\x12\b\n" +
	"\x04NONE\x10\x00\x12\n" +
	"\n" +
	"\x06PUBLIC\x10\x01\x12\v\n" +
	"\aPRIVATE\x10\x02\"\xa3\x02\n" +
	"\x12RepositoryProvider\x12=\n" +
	"\x04type\x18\x01 \x01(\x0e2).InternalApi.User.RepositoryProvider.TypeR\x04type\x12@\n" +
	"\x05scope\x18\x02 \x01(\x0e2*.InternalApi.User.RepositoryProvider.ScopeR\x05scope\x12\x14\n" +
	"\x05login\x18\x03 \x01(\tR\x05login\x12\x10\n" +
	"\x03uid\x18\x04 \x01(\tR\x03uid\"-\n" +
	"\x04Type\x12\n" +
	"\n" +
	"\x06GITHUB\x10\x00\x12\r\n" +
	"\tBITBUCKET\x10\x01\x12\n" +
	"\n" +
	"\x06GITLAB\x10\x02\"5\n" +
	"\x05Scope\x12\b\n" +
	"\x04NONE\x10\x00\x12\t\n" +
	"\x05EMAIL\x10\x01\x12\n" +
	"\n" +
	"\x06PUBLIC\x10\x02\x12\v\n" +
	"\aPRIVATE\x10\x03\"\xf3\x02\n" +
	"\x10RepositoryScopes\x12J\n" +
	"\x06github\x18\x01 \x01(\v22.InternalApi.User.RepositoryScopes.RepositoryScopeR\x06github\x12P\n" +
	"\tbitbucket\x18\x02 \x01(\v22.InternalApi.User.RepositoryScopes.RepositoryScopeR\tbitbucket\x1a\xc0\x01\n" +
	"\x0fRepositoryScope\x12N\n" +
	"\x05scope\x18\x02 \x01(\x0e28.InternalApi.User.RepositoryScopes.RepositoryScope.ScopeR\x05scope\x12\x14\n" +
	"\x05login\x18\x03 \x01(\tR\x05login\x12\x10\n" +
	"\x03uid\x18\x04 \x01(\tR\x03uid\"5\n" +
	"\x05Scope\x12\b\n" +
	"\x04NONE\x10\x00\x12\t\n" +
	"\x05EMAIL\x10\x01\x12\n" +
	"\n" +
	"\x06PUBLIC\x10\x02\x12\v\n" +
	"\aPRIVATE\x10\x03\";\n" +
	"\rUpdateRequest\x12*\n" +
	"\x04user\x18\x01 \x01(\v2\x16.InternalApi.User.UserR\x04user\"h\n" +
	"\x0eUpdateResponse\x12*\n" +
	"\x06status\x18\x01 \x01(\v2\x12.google.rpc.StatusR\x06status\x12*\n" +
	"\x04user\x18\x02 \x01(\v2\x16.InternalApi.User.UserR\x04user\"@\n" +
	"\x12SearchUsersRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"C\n" +
	"\x13SearchUsersResponse\x12,\n" +
	"\x05users\x18\x01 \x03(\v2\x16.InternalApi.User.UserR\x05users\"5\n" +
	"\x1aDeleteWithOwnedOrgsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"1\n" +
	"\x16RegenerateTokenRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"b\n" +
	"\x17RegenerateTokenResponse\x12*\n" +
	"\x06status\x18\x01 \x01(\v2\x12.google.rpc.StatusR\x06status\x12\x1b\n" +
	"\tapi_token\x18\x03 \x01(\tR\bapiToken\"2\n" +
	"\x17CheckGithubTokenRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"i\n" +
	"\x18CheckGithubTokenResponse\x12\x18\n" +
	"\arevoked\x18\x01 \x01(\bR\arevoked\x12\x12\n" +
	"\x04repo\x18\x02 \x01(\bR\x04repo\x12\x1f\n" +
	"\vpublic_repo\x18\x03 \x01(\bR\n" +
	"publicRepo\".\n" +
	"\x13BlockAccountRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"0\n" +
	"\x15UnblockAccountRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"\x92\x01\n" +
	"\x19GetRepositoryTokenRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\\\n" +
	"\x10integration_type\x18\x02 \x01(\x0e21.InternalApi.RepositoryIntegrator.IntegrationTypeR\x0fintegrationType\"m\n" +
	"\x1aGetRepositoryTokenResponse\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x129\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"g\n" +
	"#DescribeByRepositoryProviderRequest\x12@\n" +
	"\bprovider\x18\x01 \x01(\v2$.InternalApi.User.RepositoryProviderR\bprovider\".\n" +
	"\x16DescribeByEmailRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\"z\n" +
	" RefreshRepositoryProviderRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12=\n" +
	"\x04type\x18\x02 \x01(\x0e2).InternalApi.User.RepositoryProvider.TypeR\x04type\"\x93\x01\n" +
	"!RefreshRepositoryProviderResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12U\n" +
	"\x13repository_provider\x18\x02 \x01(\v2$.InternalApi.User.RepositoryProviderR\x12repositoryProvider\"\xe0\x01\n" +
	"\rCreateRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12W\n" +
	"\x14repository_providers\x18\x04 \x03(\v2$.InternalApi.User.RepositoryProviderR\x13repositoryProviders\x120\n" +
	"\x14skip_password_change\x18\x05 \x01(\bR\x12skipPasswordChange\"\x9f\x05\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x03 \x01(\tR\tavatarUrl\x12\x1d\n" +
	"\n" +
	"github_uid\x18\x04 \x01(\tR\tgithubUid\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12!\n" +
	"\fgithub_login\x18\a \x01(\tR\vgithubLogin\x12\x18\n" +
	"\acompany\x18\b \x01(\tR\acompany\x12\x14\n" +
	"\x05email\x18\t \x01(\tR\x05email\x129\n" +
	"\n" +
	"blocked_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tblockedAt\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12W\n" +
	"\x14repository_providers\x18\f \x03(\v2$.InternalApi.User.RepositoryProviderR\x13repositoryProviders\x129\n" +
	"\n" +
	"visited_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tvisitedAt\x12&\n" +
	"\x0fsingle_org_user\x18\x0e \x01(\bR\rsingleOrgUser\x12\x15\n" +
	"\x06org_id\x18\x0f \x01(\tR\x05orgId\x12N\n" +
	"\x0fcreation_source\x18\x10 \x01(\x0e2%.InternalApi.User.User.CreationSourceR\x0ecreationSource\x12 \n" +
	"\vdeactivated\x18\x11 \x01(\bR\vdeactivated\"'\n" +
	"\x0eCreationSource\x12\v\n" +
	"\aNOT_SET\x10\x00\x12\b\n" +
	"\x04OKTA\x10\x01\"z\n" +
	"\vUserCreated\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x18\n" +
	"\ainvited\x18\x03 \x01(\bR\ainvited\"`\n" +
	"\vUserDeleted\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"`\n" +
	"\vUserUpdated\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x82\x01\n" +
	"\x16UserJoinedOrganization\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x15\n" +
	"\x06org_id\x18\x02 \x01(\tR\x05orgId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x80\x01\n" +
	"\x14UserLeftOrganization\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x15\n" +
	"\x06org_id\x18\x02 \x01(\tR\x05orgId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x89\x01\n" +
	"\rMemberInvited\x12'\n" +
	"\x0fgithub_username\x18\x01 \x01(\tR\x0egithubUsername\x12\x15\n" +
	"\x06org_id\x18\x02 \x01(\tR\x05orgId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"`\n" +
	"\vActiveOwner\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"b\n" +
	"\rInactiveOwner\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x9d\x01\n" +
	"\x0eWorkEmailAdded\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\told_email\x18\x03 \x01(\tR\boldEmail\x12\x1b\n" +
	"\tnew_email\x18\x04 \x01(\tR\bnewEmail\"\x83\x01\n" +
	"\x0fFavoriteCreated\x126\n" +
	"\bfavorite\x18\x01 \x01(\v2\x1a.InternalApi.User.FavoriteR\bfavorite\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x83\x01\n" +
	"\x0fFavoriteDeleted\x126\n" +
	"\bfavorite\x18\x01 \x01(\v2\x1a.InternalApi.User.FavoriteR\bfavorite\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp2\xaf\f\n" +
	"\vUserService\x12Q\n" +
	"\bDescribe\x12!.InternalApi.User.DescribeRequest\x1a\".InternalApi.User.DescribeResponse\x12m\n" +
	"\x1cDescribeByRepositoryProvider\x125.InternalApi.User.DescribeByRepositoryProviderRequest\x1a\x16.InternalApi.User.User\x12S\n" +
	"\x0fDescribeByEmail\x12(.InternalApi.User.DescribeByEmailRequest\x1a\x16.InternalApi.User.User\x12Z\n" +
	"\vSearchUsers\x12$.InternalApi.User.SearchUsersRequest\x1a%.InternalApi.User.SearchUsersResponse\x12]\n" +
	"\fDescribeMany\x12%.InternalApi.User.DescribeManyRequest\x1a&.InternalApi.User.DescribeManyResponse\x12K\n" +
	"\x06Update\x12\x1f.InternalApi.User.UpdateRequest\x1a .InternalApi.User.UpdateResponse\x12[\n" +
	"\x13DeleteWithOwnedOrgs\x12,.InternalApi.User.DeleteWithOwnedOrgsRequest\x1a\x16.InternalApi.User.User\x12f\n" +
	"\x0fRegenerateToken\x12(.InternalApi.User.RegenerateTokenRequest\x1a).InternalApi.User.RegenerateTokenResponse\x12`\n" +
	"\rListFavorites\x12&.InternalApi.User.ListFavoritesRequest\x1a'.InternalApi.User.ListFavoritesResponse\x12H\n" +
	"\x0eCreateFavorite\x12\x1a.InternalApi.User.Favorite\x1a\x1a.InternalApi.User.Favorite\x12H\n" +
	"\x0eDeleteFavorite\x12\x1a.InternalApi.User.Favorite\x1a\x1a.InternalApi.User.Favorite\x12i\n" +
	"\x10CheckGithubToken\x12).InternalApi.User.CheckGithubTokenRequest\x1a*.InternalApi.User.CheckGithubTokenResponse\x12M\n" +
	"\fBlockAccount\x12%.InternalApi.User.BlockAccountRequest\x1a\x16.InternalApi.User.User\x12Q\n" +
	"\x0eUnblockAccount\x12'.InternalApi.User.UnblockAccountRequest\x1a\x16.InternalApi.User.User\x12o\n" +
	"\x12GetRepositoryToken\x12+.InternalApi.User.GetRepositoryTokenRequest\x1a,.InternalApi.User.GetRepositoryTokenResponse\x12\x84\x01\n" +
	"\x19RefreshRepositoryProvider\x122.InternalApi.User.RefreshRepositoryProviderRequest\x1a3.InternalApi.User.RefreshRepositoryProviderResponse\x12A\n" +
	"\x06Create\x12\x1f.InternalApi.User.CreateRequest\x1a\x16.InternalApi.User.UserB4Z2github.com/superplanehq/superplane/pkg/protos/userb\x06proto3"

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData []byte
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_user_proto_rawDesc), len(file_user_proto_rawDesc)))
	})
	return file_user_proto_rawDescData
}

var file_user_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_user_proto_goTypes = []any{
	(Favorite_Kind)(0),                          // 0: InternalApi.User.Favorite.Kind
	(DescribeResponse_RepoScope)(0),             // 1: InternalApi.User.DescribeResponse.RepoScope
	(RepositoryProvider_Type)(0),                // 2: InternalApi.User.RepositoryProvider.Type
	(RepositoryProvider_Scope)(0),               // 3: InternalApi.User.RepositoryProvider.Scope
	(RepositoryScopes_RepositoryScope_Scope)(0), // 4: InternalApi.User.RepositoryScopes.RepositoryScope.Scope
	(User_CreationSource)(0),                    // 5: InternalApi.User.User.CreationSource
	(*ListFavoritesRequest)(nil),                // 6: InternalApi.User.ListFavoritesRequest
	(*ListFavoritesResponse)(nil),               // 7: InternalApi.User.ListFavoritesResponse
	(*Favorite)(nil),                            // 8: InternalApi.User.Favorite
	(*DescribeManyRequest)(nil),                 // 9: InternalApi.User.DescribeManyRequest
	(*DescribeManyResponse)(nil),                // 10: InternalApi.User.DescribeManyResponse
	(*DescribeRequest)(nil),                     // 11: InternalApi.User.DescribeRequest
	(*DescribeResponse)(nil),                    // 12: InternalApi.User.DescribeResponse
	(*RepositoryProvider)(nil),                  // 13: InternalApi.User.RepositoryProvider
	(*RepositoryScopes)(nil),                    // 14: InternalApi.User.RepositoryScopes
	(*UpdateRequest)(nil),                       // 15: InternalApi.User.UpdateRequest
	(*UpdateResponse)(nil),                      // 16: InternalApi.User.UpdateResponse
	(*SearchUsersRequest)(nil),                  // 17: InternalApi.User.SearchUsersRequest
	(*SearchUsersResponse)(nil),                 // 18: InternalApi.User.SearchUsersResponse
	(*DeleteWithOwnedOrgsRequest)(nil),          // 19: InternalApi.User.DeleteWithOwnedOrgsRequest
	(*RegenerateTokenRequest)(nil),              // 20: InternalApi.User.RegenerateTokenRequest
	(*RegenerateTokenResponse)(nil),             // 21: InternalApi.User.RegenerateTokenResponse
	(*CheckGithubTokenRequest)(nil),             // 22: InternalApi.User.CheckGithubTokenRequest
	(*CheckGithubTokenResponse)(nil),            // 23: InternalApi.User.CheckGithubTokenResponse
	(*BlockAccountRequest)(nil),                 // 24: InternalApi.User.BlockAccountRequest
	(*UnblockAccountRequest)(nil),               // 25: InternalApi.User.UnblockAccountRequest
	(*GetRepositoryTokenRequest)(nil),           // 26: InternalApi.User.GetRepositoryTokenRequest
	(*GetRepositoryTokenResponse)(nil),          // 27: InternalApi.User.GetRepositoryTokenResponse
	(*DescribeByRepositoryProviderRequest)(nil), // 28: InternalApi.User.DescribeByRepositoryProviderRequest
	(*DescribeByEmailRequest)(nil),              // 29: InternalApi.User.DescribeByEmailRequest
	(*RefreshRepositoryProviderRequest)(nil),    // 30: InternalApi.User.RefreshRepositoryProviderRequest
	(*RefreshRepositoryProviderResponse)(nil),   // 31: InternalApi.User.RefreshRepositoryProviderResponse
	(*CreateRequest)(nil),                       // 32: InternalApi.User.CreateRequest
	(*User)(nil),                                // 33: InternalApi.User.User
	(*UserCreated)(nil),                         // 34: InternalApi.User.UserCreated
	(*UserDeleted)(nil),                         // 35: InternalApi.User.UserDeleted
	(*UserUpdated)(nil),                         // 36: InternalApi.User.UserUpdated
	(*UserJoinedOrganization)(nil),              // 37: InternalApi.User.UserJoinedOrganization
	(*UserLeftOrganization)(nil),                // 38: InternalApi.User.UserLeftOrganization
	(*MemberInvited)(nil),                       // 39: InternalApi.User.MemberInvited
	(*ActiveOwner)(nil),                         // 40: InternalApi.User.ActiveOwner
	(*InactiveOwner)(nil),                       // 41: InternalApi.User.InactiveOwner
	(*WorkEmailAdded)(nil),                      // 42: InternalApi.User.WorkEmailAdded
	(*FavoriteCreated)(nil),                     // 43: InternalApi.User.FavoriteCreated
	(*FavoriteDeleted)(nil),                     // 44: InternalApi.User.FavoriteDeleted
	(*RepositoryScopes_RepositoryScope)(nil),    // 45: InternalApi.User.RepositoryScopes.RepositoryScope
	(*response_status.ResponseStatus)(nil),      // 46: InternalApi.ResponseStatus
	(*timestamp.Timestamp)(nil),                 // 47: google.protobuf.Timestamp
	(*status.Status)(nil),                       // 48: google.rpc.Status
	(repository_integrator.IntegrationType)(0),  // 49: InternalApi.RepositoryIntegrator.IntegrationType
}
var file_user_proto_depIdxs = []int32{
	8,  // 0: InternalApi.User.ListFavoritesResponse.favorites:type_name -> InternalApi.User.Favorite
	0,  // 1: InternalApi.User.Favorite.kind:type_name -> InternalApi.User.Favorite.Kind
	33, // 2: InternalApi.User.DescribeManyResponse.users:type_name -> InternalApi.User.User
	46, // 3: InternalApi.User.DescribeManyResponse.status:type_name -> InternalApi.ResponseStatus
	46, // 4: InternalApi.User.DescribeResponse.status:type_name -> InternalApi.ResponseStatus
	47, // 5: InternalApi.User.DescribeResponse.created_at:type_name -> google.protobuf.Timestamp
	1,  // 6: InternalApi.User.DescribeResponse.github_scope:type_name -> InternalApi.User.DescribeResponse.RepoScope
	47, // 7: InternalApi.User.DescribeResponse.blocked_at:type_name -> google.protobuf.Timestamp
	14, // 8: InternalApi.User.DescribeResponse.repository_scopes:type_name -> InternalApi.User.RepositoryScopes
	13, // 9: InternalApi.User.DescribeResponse.repository_providers:type_name -> InternalApi.User.RepositoryProvider
	33, // 10: InternalApi.User.DescribeResponse.user:type_name -> InternalApi.User.User
	2,  // 11: InternalApi.User.RepositoryProvider.type:type_name -> InternalApi.User.RepositoryProvider.Type
	3,  // 12: InternalApi.User.RepositoryProvider.scope:type_name -> InternalApi.User.RepositoryProvider.Scope
	45, // 13: InternalApi.User.RepositoryScopes.github:type_name -> InternalApi.User.RepositoryScopes.RepositoryScope
	45, // 14: InternalApi.User.RepositoryScopes.bitbucket:type_name -> InternalApi.User.RepositoryScopes.RepositoryScope
	33, // 15: InternalApi.User.UpdateRequest.user:type_name -> InternalApi.User.User
	48, // 16: InternalApi.User.UpdateResponse.status:type_name -> google.rpc.Status
	33, // 17: InternalApi.User.UpdateResponse.user:type_name -> InternalApi.User.User
	33, // 18: InternalApi.User.SearchUsersResponse.users:type_name -> InternalApi.User.User
	48, // 19: InternalApi.User.RegenerateTokenResponse.status:type_name -> google.rpc.Status
	49, // 20: InternalApi.User.GetRepositoryTokenRequest.integration_type:type_name -> InternalApi.RepositoryIntegrator.IntegrationType
	47, // 21: InternalApi.User.GetRepositoryTokenResponse.expires_at:type_name -> google.protobuf.Timestamp
	13, // 22: InternalApi.User.DescribeByRepositoryProviderRequest.provider:type_name -> InternalApi.User.RepositoryProvider
	2,  // 23: InternalApi.User.RefreshRepositoryProviderRequest.type:type_name -> InternalApi.User.RepositoryProvider.Type
	13, // 24: InternalApi.User.RefreshRepositoryProviderResponse.repository_provider:type_name -> InternalApi.User.RepositoryProvider
	13, // 25: InternalApi.User.CreateRequest.repository_providers:type_name -> InternalApi.User.RepositoryProvider
	47, // 26: InternalApi.User.User.blocked_at:type_name -> google.protobuf.Timestamp
	47, // 27: InternalApi.User.User.created_at:type_name -> google.protobuf.Timestamp
	13, // 28: InternalApi.User.User.repository_providers:type_name -> InternalApi.User.RepositoryProvider
	47, // 29: InternalApi.User.User.visited_at:type_name -> google.protobuf.Timestamp
	5,  // 30: InternalApi.User.User.creation_source:type_name -> InternalApi.User.User.CreationSource
	47, // 31: InternalApi.User.UserCreated.timestamp:type_name -> google.protobuf.Timestamp
	47, // 32: InternalApi.User.UserDeleted.timestamp:type_name -> google.protobuf.Timestamp
	47, // 33: InternalApi.User.UserUpdated.timestamp:type_name -> google.protobuf.Timestamp
	47, // 34: InternalApi.User.UserJoinedOrganization.timestamp:type_name -> google.protobuf.Timestamp
	47, // 35: InternalApi.User.UserLeftOrganization.timestamp:type_name -> google.protobuf.Timestamp
	47, // 36: InternalApi.User.MemberInvited.timestamp:type_name -> google.protobuf.Timestamp
	47, // 37: InternalApi.User.ActiveOwner.timestamp:type_name -> google.protobuf.Timestamp
	47, // 38: InternalApi.User.InactiveOwner.timestamp:type_name -> google.protobuf.Timestamp
	47, // 39: InternalApi.User.WorkEmailAdded.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 40: InternalApi.User.FavoriteCreated.favorite:type_name -> InternalApi.User.Favorite
	47, // 41: InternalApi.User.FavoriteCreated.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 42: InternalApi.User.FavoriteDeleted.favorite:type_name -> InternalApi.User.Favorite
	47, // 43: InternalApi.User.FavoriteDeleted.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 44: InternalApi.User.RepositoryScopes.RepositoryScope.scope:type_name -> InternalApi.User.RepositoryScopes.RepositoryScope.Scope
	11, // 45: InternalApi.User.UserService.Describe:input_type -> InternalApi.User.DescribeRequest
	28, // 46: InternalApi.User.UserService.DescribeByRepositoryProvider:input_type -> InternalApi.User.DescribeByRepositoryProviderRequest
	29, // 47: InternalApi.User.UserService.DescribeByEmail:input_type -> InternalApi.User.DescribeByEmailRequest
	17, // 48: InternalApi.User.UserService.SearchUsers:input_type -> InternalApi.User.SearchUsersRequest
	9,  // 49: InternalApi.User.UserService.DescribeMany:input_type -> InternalApi.User.DescribeManyRequest
	15, // 50: InternalApi.User.UserService.Update:input_type -> InternalApi.User.UpdateRequest
	19, // 51: InternalApi.User.UserService.DeleteWithOwnedOrgs:input_type -> InternalApi.User.DeleteWithOwnedOrgsRequest
	20, // 52: InternalApi.User.UserService.RegenerateToken:input_type -> InternalApi.User.RegenerateTokenRequest
	6,  // 53: InternalApi.User.UserService.ListFavorites:input_type -> InternalApi.User.ListFavoritesRequest
	8,  // 54: InternalApi.User.UserService.CreateFavorite:input_type -> InternalApi.User.Favorite
	8,  // 55: InternalApi.User.UserService.DeleteFavorite:input_type -> InternalApi.User.Favorite
	22, // 56: InternalApi.User.UserService.CheckGithubToken:input_type -> InternalApi.User.CheckGithubTokenRequest
	24, // 57: InternalApi.User.UserService.BlockAccount:input_type -> InternalApi.User.BlockAccountRequest
	25, // 58: InternalApi.User.UserService.UnblockAccount:input_type -> InternalApi.User.UnblockAccountRequest
	26, // 59: InternalApi.User.UserService.GetRepositoryToken:input_type -> InternalApi.User.GetRepositoryTokenRequest
	30, // 60: InternalApi.User.UserService.RefreshRepositoryProvider:input_type -> InternalApi.User.RefreshRepositoryProviderRequest
	32, // 61: InternalApi.User.UserService.Create:input_type -> InternalApi.User.CreateRequest
	12, // 62: InternalApi.User.UserService.Describe:output_type -> InternalApi.User.DescribeResponse
	33, // 63: InternalApi.User.UserService.DescribeByRepositoryProvider:output_type -> InternalApi.User.User
	33, // 64: InternalApi.User.UserService.DescribeByEmail:output_type -> InternalApi.User.User
	18, // 65: InternalApi.User.UserService.SearchUsers:output_type -> InternalApi.User.SearchUsersResponse
	10, // 66: InternalApi.User.UserService.DescribeMany:output_type -> InternalApi.User.DescribeManyResponse
	16, // 67: InternalApi.User.UserService.Update:output_type -> InternalApi.User.UpdateResponse
	33, // 68: InternalApi.User.UserService.DeleteWithOwnedOrgs:output_type -> InternalApi.User.User
	21, // 69: InternalApi.User.UserService.RegenerateToken:output_type -> InternalApi.User.RegenerateTokenResponse
	7,  // 70: InternalApi.User.UserService.ListFavorites:output_type -> InternalApi.User.ListFavoritesResponse
	8,  // 71: InternalApi.User.UserService.CreateFavorite:output_type -> InternalApi.User.Favorite
	8,  // 72: InternalApi.User.UserService.DeleteFavorite:output_type -> InternalApi.User.Favorite
	23, // 73: InternalApi.User.UserService.CheckGithubToken:output_type -> InternalApi.User.CheckGithubTokenResponse
	33, // 74: InternalApi.User.UserService.BlockAccount:output_type -> InternalApi.User.User
	33, // 75: InternalApi.User.UserService.UnblockAccount:output_type -> InternalApi.User.User
	27, // 76: InternalApi.User.UserService.GetRepositoryToken:output_type -> InternalApi.User.GetRepositoryTokenResponse
	31, // 77: InternalApi.User.UserService.RefreshRepositoryProvider:output_type -> InternalApi.User.RefreshRepositoryProviderResponse
	33, // 78: InternalApi.User.UserService.Create:output_type -> InternalApi.User.User
	62, // [62:79] is the sub-list for method output_type
	45, // [45:62] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_user_proto_rawDesc), len(file_user_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		EnumInfos:         file_user_proto_enumTypes,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}
