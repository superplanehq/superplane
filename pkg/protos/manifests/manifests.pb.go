// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.15.8
// source: manifests.proto

package manifests

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetManifestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      string                 `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"` // Required: "executor" or "event_source"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManifestsRequest) Reset() {
	*x = GetManifestsRequest{}
	mi := &file_manifests_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManifestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManifestsRequest) ProtoMessage() {}

func (x *GetManifestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manifests_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManifestsRequest.ProtoReflect.Descriptor instead.
func (*GetManifestsRequest) Descriptor() ([]byte, []int) {
	return file_manifests_proto_rawDescGZIP(), []int{0}
}

func (x *GetManifestsRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type GetManifestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Manifests     []*TypeManifest        `protobuf:"bytes,1,rep,name=manifests,proto3" json:"manifests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManifestsResponse) Reset() {
	*x = GetManifestsResponse{}
	mi := &file_manifests_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManifestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManifestsResponse) ProtoMessage() {}

func (x *GetManifestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manifests_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManifestsResponse.ProtoReflect.Descriptor instead.
func (*GetManifestsResponse) Descriptor() ([]byte, []int) {
	return file_manifests_proto_rawDescGZIP(), []int{1}
}

func (x *GetManifestsResponse) GetManifests() []*TypeManifest {
	if x != nil {
		return x.Manifests
	}
	return nil
}

type TypeManifest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Type            string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	DisplayName     string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Category        string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	IntegrationType string                 `protobuf:"bytes,5,opt,name=integration_type,json=integrationType,proto3" json:"integration_type,omitempty"`
	Icon            string                 `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Fields          []*FieldManifest       `protobuf:"bytes,7,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TypeManifest) Reset() {
	*x = TypeManifest{}
	mi := &file_manifests_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeManifest) ProtoMessage() {}

func (x *TypeManifest) ProtoReflect() protoreflect.Message {
	mi := &file_manifests_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeManifest.ProtoReflect.Descriptor instead.
func (*TypeManifest) Descriptor() ([]byte, []int) {
	return file_manifests_proto_rawDescGZIP(), []int{2}
}

func (x *TypeManifest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TypeManifest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *TypeManifest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TypeManifest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *TypeManifest) GetIntegrationType() string {
	if x != nil {
		return x.IntegrationType
	}
	return ""
}

func (x *TypeManifest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *TypeManifest) GetFields() []*FieldManifest {
	if x != nil {
		return x.Fields
	}
	return nil
}

type FieldManifest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName   string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Required      bool                   `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Options       []*Option              `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`
	ResourceType  string                 `protobuf:"bytes,7,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Placeholder   string                 `protobuf:"bytes,8,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
	Default       *_struct.Value         `protobuf:"bytes,9,opt,name=default,proto3" json:"default,omitempty"`
	Validation    *Validation            `protobuf:"bytes,10,opt,name=validation,proto3" json:"validation,omitempty"`
	DependsOn     string                 `protobuf:"bytes,11,opt,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty"`
	Hidden        bool                   `protobuf:"varint,12,opt,name=hidden,proto3" json:"hidden,omitempty"`
	Fields        []*FieldManifest       `protobuf:"bytes,13,rep,name=fields,proto3" json:"fields,omitempty"`                     // For nested object fields
	ItemType      string                 `protobuf:"bytes,14,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"` // For array fields
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldManifest) Reset() {
	*x = FieldManifest{}
	mi := &file_manifests_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldManifest) ProtoMessage() {}

func (x *FieldManifest) ProtoReflect() protoreflect.Message {
	mi := &file_manifests_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldManifest.ProtoReflect.Descriptor instead.
func (*FieldManifest) Descriptor() ([]byte, []int) {
	return file_manifests_proto_rawDescGZIP(), []int{3}
}

func (x *FieldManifest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldManifest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *FieldManifest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FieldManifest) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *FieldManifest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FieldManifest) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *FieldManifest) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *FieldManifest) GetPlaceholder() string {
	if x != nil {
		return x.Placeholder
	}
	return ""
}

func (x *FieldManifest) GetDefault() *_struct.Value {
	if x != nil {
		return x.Default
	}
	return nil
}

func (x *FieldManifest) GetValidation() *Validation {
	if x != nil {
		return x.Validation
	}
	return nil
}

func (x *FieldManifest) GetDependsOn() string {
	if x != nil {
		return x.DependsOn
	}
	return ""
}

func (x *FieldManifest) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *FieldManifest) GetFields() []*FieldManifest {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *FieldManifest) GetItemType() string {
	if x != nil {
		return x.ItemType
	}
	return ""
}

type Option struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Option) Reset() {
	*x = Option{}
	mi := &file_manifests_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file_manifests_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file_manifests_proto_rawDescGZIP(), []int{4}
}

func (x *Option) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Option) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Option) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Validation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           *int32                 `protobuf:"varint,1,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max           *int32                 `protobuf:"varint,2,opt,name=max,proto3,oneof" json:"max,omitempty"`
	Pattern       string                 `protobuf:"bytes,3,opt,name=pattern,proto3" json:"pattern,omitempty"`
	MinLength     *int32                 `protobuf:"varint,4,opt,name=min_length,json=minLength,proto3,oneof" json:"min_length,omitempty"`
	MaxLength     *int32                 `protobuf:"varint,5,opt,name=max_length,json=maxLength,proto3,oneof" json:"max_length,omitempty"`
	CustomRule    string                 `protobuf:"bytes,6,opt,name=custom_rule,json=customRule,proto3" json:"custom_rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Validation) Reset() {
	*x = Validation{}
	mi := &file_manifests_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Validation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validation) ProtoMessage() {}

func (x *Validation) ProtoReflect() protoreflect.Message {
	mi := &file_manifests_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validation.ProtoReflect.Descriptor instead.
func (*Validation) Descriptor() ([]byte, []int) {
	return file_manifests_proto_rawDescGZIP(), []int{5}
}

func (x *Validation) GetMin() int32 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *Validation) GetMax() int32 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

func (x *Validation) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *Validation) GetMinLength() int32 {
	if x != nil && x.MinLength != nil {
		return *x.MinLength
	}
	return 0
}

func (x *Validation) GetMaxLength() int32 {
	if x != nil && x.MaxLength != nil {
		return *x.MaxLength
	}
	return 0
}

func (x *Validation) GetCustomRule() string {
	if x != nil {
		return x.CustomRule
	}
	return ""
}

var File_manifests_proto protoreflect.FileDescriptor

const file_manifests_proto_rawDesc = "" +
	"\n" +
	"\x0fmanifests.proto\x12\n" +
	"Superplane\x1a\x1cgoogle/api/annotations.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"1\n" +
	"\x13GetManifestsRequest\x12\x1a\n" +
	"\bcategory\x18\x01 \x01(\tR\bcategory\"N\n" +
	"\x14GetManifestsResponse\x126\n" +
	"\tmanifests\x18\x01 \x03(\v2\x18.Superplane.TypeManifestR\tmanifests\"\xf5\x01\n" +
	"\fTypeManifest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12)\n" +
	"\x10integration_type\x18\x05 \x01(\tR\x0fintegrationType\x12\x12\n" +
	"\x04icon\x18\x06 \x01(\tR\x04icon\x121\n" +
	"\x06fields\x18\a \x03(\v2\x19.Superplane.FieldManifestR\x06fields\"\xfe\x03\n" +
	"\rFieldManifest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1a\n" +
	"\brequired\x18\x04 \x01(\bR\brequired\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12,\n" +
	"\aoptions\x18\x06 \x03(\v2\x12.Superplane.OptionR\aoptions\x12#\n" +
	"\rresource_type\x18\a \x01(\tR\fresourceType\x12 \n" +
	"\vplaceholder\x18\b \x01(\tR\vplaceholder\x120\n" +
	"\adefault\x18\t \x01(\v2\x16.google.protobuf.ValueR\adefault\x126\n" +
	"\n" +
	"validation\x18\n" +
	" \x01(\v2\x16.Superplane.ValidationR\n" +
	"validation\x12\x1d\n" +
	"\n" +
	"depends_on\x18\v \x01(\tR\tdependsOn\x12\x16\n" +
	"\x06hidden\x18\f \x01(\bR\x06hidden\x121\n" +
	"\x06fields\x18\r \x03(\v2\x19.Superplane.FieldManifestR\x06fields\x12\x1b\n" +
	"\titem_type\x18\x0e \x01(\tR\bitemType\"V\n" +
	"\x06Option\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"\xeb\x01\n" +
	"\n" +
	"Validation\x12\x15\n" +
	"\x03min\x18\x01 \x01(\x05H\x00R\x03min\x88\x01\x01\x12\x15\n" +
	"\x03max\x18\x02 \x01(\x05H\x01R\x03max\x88\x01\x01\x12\x18\n" +
	"\apattern\x18\x03 \x01(\tR\apattern\x12\"\n" +
	"\n" +
	"min_length\x18\x04 \x01(\x05H\x02R\tminLength\x88\x01\x01\x12\"\n" +
	"\n" +
	"max_length\x18\x05 \x01(\x05H\x03R\tmaxLength\x88\x01\x01\x12\x1f\n" +
	"\vcustom_rule\x18\x06 \x01(\tR\n" +
	"customRuleB\x06\n" +
	"\x04_minB\x06\n" +
	"\x04_maxB\r\n" +
	"\v_min_lengthB\r\n" +
	"\v_max_length2\xd8\x01\n" +
	"\x0fManifestService\x12\xc4\x01\n" +
	"\fGetManifests\x12\x1f.Superplane.GetManifestsRequest\x1a .Superplane.GetManifestsResponse\"q\x92AU\n" +
	"\tManifests\x12\x12Get type manifests\x1a4Returns all executor and event source type manifests\x82\xd3\xe4\x93\x02\x13\x12\x11/api/v1/manifestsB9Z7github.com/superplanehq/superplane/pkg/protos/manifestsb\x06proto3"

var (
	file_manifests_proto_rawDescOnce sync.Once
	file_manifests_proto_rawDescData []byte
)

func file_manifests_proto_rawDescGZIP() []byte {
	file_manifests_proto_rawDescOnce.Do(func() {
		file_manifests_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_manifests_proto_rawDesc), len(file_manifests_proto_rawDesc)))
	})
	return file_manifests_proto_rawDescData
}

var file_manifests_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_manifests_proto_goTypes = []any{
	(*GetManifestsRequest)(nil),  // 0: Superplane.GetManifestsRequest
	(*GetManifestsResponse)(nil), // 1: Superplane.GetManifestsResponse
	(*TypeManifest)(nil),         // 2: Superplane.TypeManifest
	(*FieldManifest)(nil),        // 3: Superplane.FieldManifest
	(*Option)(nil),               // 4: Superplane.Option
	(*Validation)(nil),           // 5: Superplane.Validation
	(*_struct.Value)(nil),        // 6: google.protobuf.Value
}
var file_manifests_proto_depIdxs = []int32{
	2, // 0: Superplane.GetManifestsResponse.manifests:type_name -> Superplane.TypeManifest
	3, // 1: Superplane.TypeManifest.fields:type_name -> Superplane.FieldManifest
	4, // 2: Superplane.FieldManifest.options:type_name -> Superplane.Option
	6, // 3: Superplane.FieldManifest.default:type_name -> google.protobuf.Value
	5, // 4: Superplane.FieldManifest.validation:type_name -> Superplane.Validation
	3, // 5: Superplane.FieldManifest.fields:type_name -> Superplane.FieldManifest
	0, // 6: Superplane.ManifestService.GetManifests:input_type -> Superplane.GetManifestsRequest
	1, // 7: Superplane.ManifestService.GetManifests:output_type -> Superplane.GetManifestsResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_manifests_proto_init() }
func file_manifests_proto_init() {
	if File_manifests_proto != nil {
		return
	}
	file_manifests_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_manifests_proto_rawDesc), len(file_manifests_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_manifests_proto_goTypes,
		DependencyIndexes: file_manifests_proto_depIdxs,
		MessageInfos:      file_manifests_proto_msgTypes,
	}.Build()
	File_manifests_proto = out.File
	file_manifests_proto_goTypes = nil
	file_manifests_proto_depIdxs = nil
}
