/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"time"
)

// checks if the WorkflowsWorkflowQueueItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowsWorkflowQueueItem{}

// WorkflowsWorkflowQueueItem struct for WorkflowsWorkflowQueueItem
type WorkflowsWorkflowQueueItem struct {
	EventId *string `json:"eventId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Event *WorkflowsWorkflowEvent `json:"event,omitempty"`
}

// NewWorkflowsWorkflowQueueItem instantiates a new WorkflowsWorkflowQueueItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowsWorkflowQueueItem() *WorkflowsWorkflowQueueItem {
	this := WorkflowsWorkflowQueueItem{}
	return &this
}

// NewWorkflowsWorkflowQueueItemWithDefaults instantiates a new WorkflowsWorkflowQueueItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowsWorkflowQueueItemWithDefaults() *WorkflowsWorkflowQueueItem {
	this := WorkflowsWorkflowQueueItem{}
	return &this
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *WorkflowsWorkflowQueueItem) GetEventId() string {
	if o == nil || IsNil(o.EventId) {
		var ret string
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowQueueItem) GetEventIdOk() (*string, bool) {
	if o == nil || IsNil(o.EventId) {
		return nil, false
	}
	return o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *WorkflowsWorkflowQueueItem) HasEventId() bool {
	if o != nil && !IsNil(o.EventId) {
		return true
	}

	return false
}

// SetEventId gets a reference to the given string and assigns it to the EventId field.
func (o *WorkflowsWorkflowQueueItem) SetEventId(v string) {
	o.EventId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *WorkflowsWorkflowQueueItem) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowQueueItem) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *WorkflowsWorkflowQueueItem) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *WorkflowsWorkflowQueueItem) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *WorkflowsWorkflowQueueItem) GetEvent() WorkflowsWorkflowEvent {
	if o == nil || IsNil(o.Event) {
		var ret WorkflowsWorkflowEvent
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowQueueItem) GetEventOk() (*WorkflowsWorkflowEvent, bool) {
	if o == nil || IsNil(o.Event) {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *WorkflowsWorkflowQueueItem) HasEvent() bool {
	if o != nil && !IsNil(o.Event) {
		return true
	}

	return false
}

// SetEvent gets a reference to the given WorkflowsWorkflowEvent and assigns it to the Event field.
func (o *WorkflowsWorkflowQueueItem) SetEvent(v WorkflowsWorkflowEvent) {
	o.Event = &v
}

func (o WorkflowsWorkflowQueueItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowsWorkflowQueueItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EventId) {
		toSerialize["eventId"] = o.EventId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Event) {
		toSerialize["event"] = o.Event
	}
	return toSerialize, nil
}

type NullableWorkflowsWorkflowQueueItem struct {
	value *WorkflowsWorkflowQueueItem
	isSet bool
}

func (v NullableWorkflowsWorkflowQueueItem) Get() *WorkflowsWorkflowQueueItem {
	return v.value
}

func (v *NullableWorkflowsWorkflowQueueItem) Set(val *WorkflowsWorkflowQueueItem) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowsWorkflowQueueItem) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowsWorkflowQueueItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowsWorkflowQueueItem(val *WorkflowsWorkflowQueueItem) *NullableWorkflowsWorkflowQueueItem {
	return &NullableWorkflowsWorkflowQueueItem{value: val, isSet: true}
}

func (v NullableWorkflowsWorkflowQueueItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowsWorkflowQueueItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


