/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the WorkflowsListEventExecutionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowsListEventExecutionsResponse{}

// WorkflowsListEventExecutionsResponse struct for WorkflowsListEventExecutionsResponse
type WorkflowsListEventExecutionsResponse struct {
	Executions []WorkflowsWorkflowNodeExecution `json:"executions,omitempty"`
}

// NewWorkflowsListEventExecutionsResponse instantiates a new WorkflowsListEventExecutionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowsListEventExecutionsResponse() *WorkflowsListEventExecutionsResponse {
	this := WorkflowsListEventExecutionsResponse{}
	return &this
}

// NewWorkflowsListEventExecutionsResponseWithDefaults instantiates a new WorkflowsListEventExecutionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowsListEventExecutionsResponseWithDefaults() *WorkflowsListEventExecutionsResponse {
	this := WorkflowsListEventExecutionsResponse{}
	return &this
}

// GetExecutions returns the Executions field value if set, zero value otherwise.
func (o *WorkflowsListEventExecutionsResponse) GetExecutions() []WorkflowsWorkflowNodeExecution {
	if o == nil || IsNil(o.Executions) {
		var ret []WorkflowsWorkflowNodeExecution
		return ret
	}
	return o.Executions
}

// GetExecutionsOk returns a tuple with the Executions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsListEventExecutionsResponse) GetExecutionsOk() ([]WorkflowsWorkflowNodeExecution, bool) {
	if o == nil || IsNil(o.Executions) {
		return nil, false
	}
	return o.Executions, true
}

// HasExecutions returns a boolean if a field has been set.
func (o *WorkflowsListEventExecutionsResponse) HasExecutions() bool {
	if o != nil && !IsNil(o.Executions) {
		return true
	}

	return false
}

// SetExecutions gets a reference to the given []WorkflowsWorkflowNodeExecution and assigns it to the Executions field.
func (o *WorkflowsListEventExecutionsResponse) SetExecutions(v []WorkflowsWorkflowNodeExecution) {
	o.Executions = v
}

func (o WorkflowsListEventExecutionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowsListEventExecutionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Executions) {
		toSerialize["executions"] = o.Executions
	}
	return toSerialize, nil
}

type NullableWorkflowsListEventExecutionsResponse struct {
	value *WorkflowsListEventExecutionsResponse
	isSet bool
}

func (v NullableWorkflowsListEventExecutionsResponse) Get() *WorkflowsListEventExecutionsResponse {
	return v.value
}

func (v *NullableWorkflowsListEventExecutionsResponse) Set(val *WorkflowsListEventExecutionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowsListEventExecutionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowsListEventExecutionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowsListEventExecutionsResponse(val *WorkflowsListEventExecutionsResponse) *NullableWorkflowsListEventExecutionsResponse {
	return &NullableWorkflowsListEventExecutionsResponse{value: val, isSet: true}
}

func (v NullableWorkflowsListEventExecutionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowsListEventExecutionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


