/*
Superplane Authorization API

API for the Superplane Authorization service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneListConnectionGroupsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneListConnectionGroupsResponse{}

// SuperplaneListConnectionGroupsResponse struct for SuperplaneListConnectionGroupsResponse
type SuperplaneListConnectionGroupsResponse struct {
	ConnectionGroups []SuperplaneConnectionGroup `json:"connectionGroups,omitempty"`
}

// NewSuperplaneListConnectionGroupsResponse instantiates a new SuperplaneListConnectionGroupsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneListConnectionGroupsResponse() *SuperplaneListConnectionGroupsResponse {
	this := SuperplaneListConnectionGroupsResponse{}
	return &this
}

// NewSuperplaneListConnectionGroupsResponseWithDefaults instantiates a new SuperplaneListConnectionGroupsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneListConnectionGroupsResponseWithDefaults() *SuperplaneListConnectionGroupsResponse {
	this := SuperplaneListConnectionGroupsResponse{}
	return &this
}

// GetConnectionGroups returns the ConnectionGroups field value if set, zero value otherwise.
func (o *SuperplaneListConnectionGroupsResponse) GetConnectionGroups() []SuperplaneConnectionGroup {
	if o == nil || IsNil(o.ConnectionGroups) {
		var ret []SuperplaneConnectionGroup
		return ret
	}
	return o.ConnectionGroups
}

// GetConnectionGroupsOk returns a tuple with the ConnectionGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneListConnectionGroupsResponse) GetConnectionGroupsOk() ([]SuperplaneConnectionGroup, bool) {
	if o == nil || IsNil(o.ConnectionGroups) {
		return nil, false
	}
	return o.ConnectionGroups, true
}

// HasConnectionGroups returns a boolean if a field has been set.
func (o *SuperplaneListConnectionGroupsResponse) HasConnectionGroups() bool {
	if o != nil && !IsNil(o.ConnectionGroups) {
		return true
	}

	return false
}

// SetConnectionGroups gets a reference to the given []SuperplaneConnectionGroup and assigns it to the ConnectionGroups field.
func (o *SuperplaneListConnectionGroupsResponse) SetConnectionGroups(v []SuperplaneConnectionGroup) {
	o.ConnectionGroups = v
}

func (o SuperplaneListConnectionGroupsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneListConnectionGroupsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionGroups) {
		toSerialize["connectionGroups"] = o.ConnectionGroups
	}
	return toSerialize, nil
}

type NullableSuperplaneListConnectionGroupsResponse struct {
	value *SuperplaneListConnectionGroupsResponse
	isSet bool
}

func (v NullableSuperplaneListConnectionGroupsResponse) Get() *SuperplaneListConnectionGroupsResponse {
	return v.value
}

func (v *NullableSuperplaneListConnectionGroupsResponse) Set(val *SuperplaneListConnectionGroupsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneListConnectionGroupsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneListConnectionGroupsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneListConnectionGroupsResponse(val *SuperplaneListConnectionGroupsResponse) *NullableSuperplaneListConnectionGroupsResponse {
	return &NullableSuperplaneListConnectionGroupsResponse{value: val, isSet: true}
}

func (v NullableSuperplaneListConnectionGroupsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneListConnectionGroupsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


