/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneListPrimitivesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneListPrimitivesResponse{}

// SuperplaneListPrimitivesResponse struct for SuperplaneListPrimitivesResponse
type SuperplaneListPrimitivesResponse struct {
	Primitives []SuperplanePrimitive `json:"primitives,omitempty"`
}

// NewSuperplaneListPrimitivesResponse instantiates a new SuperplaneListPrimitivesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneListPrimitivesResponse() *SuperplaneListPrimitivesResponse {
	this := SuperplaneListPrimitivesResponse{}
	return &this
}

// NewSuperplaneListPrimitivesResponseWithDefaults instantiates a new SuperplaneListPrimitivesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneListPrimitivesResponseWithDefaults() *SuperplaneListPrimitivesResponse {
	this := SuperplaneListPrimitivesResponse{}
	return &this
}

// GetPrimitives returns the Primitives field value if set, zero value otherwise.
func (o *SuperplaneListPrimitivesResponse) GetPrimitives() []SuperplanePrimitive {
	if o == nil || IsNil(o.Primitives) {
		var ret []SuperplanePrimitive
		return ret
	}
	return o.Primitives
}

// GetPrimitivesOk returns a tuple with the Primitives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneListPrimitivesResponse) GetPrimitivesOk() ([]SuperplanePrimitive, bool) {
	if o == nil || IsNil(o.Primitives) {
		return nil, false
	}
	return o.Primitives, true
}

// HasPrimitives returns a boolean if a field has been set.
func (o *SuperplaneListPrimitivesResponse) HasPrimitives() bool {
	if o != nil && !IsNil(o.Primitives) {
		return true
	}

	return false
}

// SetPrimitives gets a reference to the given []SuperplanePrimitive and assigns it to the Primitives field.
func (o *SuperplaneListPrimitivesResponse) SetPrimitives(v []SuperplanePrimitive) {
	o.Primitives = v
}

func (o SuperplaneListPrimitivesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneListPrimitivesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Primitives) {
		toSerialize["primitives"] = o.Primitives
	}
	return toSerialize, nil
}

type NullableSuperplaneListPrimitivesResponse struct {
	value *SuperplaneListPrimitivesResponse
	isSet bool
}

func (v NullableSuperplaneListPrimitivesResponse) Get() *SuperplaneListPrimitivesResponse {
	return v.value
}

func (v *NullableSuperplaneListPrimitivesResponse) Set(val *SuperplaneListPrimitivesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneListPrimitivesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneListPrimitivesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneListPrimitivesResponse(val *SuperplaneListPrimitivesResponse) *NullableSuperplaneListPrimitivesResponse {
	return &NullableSuperplaneListPrimitivesResponse{value: val, isSet: true}
}

func (v NullableSuperplaneListPrimitivesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneListPrimitivesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


