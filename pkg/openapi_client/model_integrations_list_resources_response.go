/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the IntegrationsListResourcesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationsListResourcesResponse{}

// IntegrationsListResourcesResponse struct for IntegrationsListResourcesResponse
type IntegrationsListResourcesResponse struct {
	Resources []IntegrationsResource `json:"resources,omitempty"`
}

// NewIntegrationsListResourcesResponse instantiates a new IntegrationsListResourcesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationsListResourcesResponse() *IntegrationsListResourcesResponse {
	this := IntegrationsListResourcesResponse{}
	return &this
}

// NewIntegrationsListResourcesResponseWithDefaults instantiates a new IntegrationsListResourcesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationsListResourcesResponseWithDefaults() *IntegrationsListResourcesResponse {
	this := IntegrationsListResourcesResponse{}
	return &this
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *IntegrationsListResourcesResponse) GetResources() []IntegrationsResource {
	if o == nil || IsNil(o.Resources) {
		var ret []IntegrationsResource
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsListResourcesResponse) GetResourcesOk() ([]IntegrationsResource, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *IntegrationsListResourcesResponse) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []IntegrationsResource and assigns it to the Resources field.
func (o *IntegrationsListResourcesResponse) SetResources(v []IntegrationsResource) {
	o.Resources = v
}

func (o IntegrationsListResourcesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationsListResourcesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	return toSerialize, nil
}

type NullableIntegrationsListResourcesResponse struct {
	value *IntegrationsListResourcesResponse
	isSet bool
}

func (v NullableIntegrationsListResourcesResponse) Get() *IntegrationsListResourcesResponse {
	return v.value
}

func (v *NullableIntegrationsListResourcesResponse) Set(val *IntegrationsListResourcesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationsListResourcesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationsListResourcesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationsListResourcesResponse(val *IntegrationsListResourcesResponse) *NullableIntegrationsListResourcesResponse {
	return &NullableIntegrationsListResourcesResponse{value: val, isSet: true}
}

func (v NullableIntegrationsListResourcesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationsListResourcesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


