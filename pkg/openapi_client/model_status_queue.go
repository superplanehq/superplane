/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the StatusQueue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusQueue{}

// StatusQueue struct for StatusQueue
type StatusQueue struct {
	Total *int64 `json:"total,omitempty"`
	Items []SuperplaneStageEvent `json:"items,omitempty"`
}

// NewStatusQueue instantiates a new StatusQueue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusQueue() *StatusQueue {
	this := StatusQueue{}
	return &this
}

// NewStatusQueueWithDefaults instantiates a new StatusQueue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusQueueWithDefaults() *StatusQueue {
	this := StatusQueue{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *StatusQueue) GetTotal() int64 {
	if o == nil || IsNil(o.Total) {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusQueue) GetTotalOk() (*int64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *StatusQueue) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *StatusQueue) SetTotal(v int64) {
	o.Total = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *StatusQueue) GetItems() []SuperplaneStageEvent {
	if o == nil || IsNil(o.Items) {
		var ret []SuperplaneStageEvent
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusQueue) GetItemsOk() ([]SuperplaneStageEvent, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *StatusQueue) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []SuperplaneStageEvent and assigns it to the Items field.
func (o *StatusQueue) SetItems(v []SuperplaneStageEvent) {
	o.Items = v
}

func (o StatusQueue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusQueue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableStatusQueue struct {
	value *StatusQueue
	isSet bool
}

func (v NullableStatusQueue) Get() *StatusQueue {
	return v.value
}

func (v *NullableStatusQueue) Set(val *StatusQueue) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusQueue) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusQueue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusQueue(val *StatusQueue) *NullableStatusQueue {
	return &NullableStatusQueue{value: val, isSet: true}
}

func (v NullableStatusQueue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusQueue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


