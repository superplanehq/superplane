/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneSemaphoreRunTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneSemaphoreRunTemplate{}

// SuperplaneSemaphoreRunTemplate struct for SuperplaneSemaphoreRunTemplate
type SuperplaneSemaphoreRunTemplate struct {
	ProjectId *string `json:"projectId,omitempty"`
	Branch *string `json:"branch,omitempty"`
	PipelineFile *string `json:"pipelineFile,omitempty"`
	TaskId *string `json:"taskId,omitempty"`
	Parameters *map[string]string `json:"parameters,omitempty"`
	ApiToken *string `json:"apiToken,omitempty"`
	OrganizationUrl *string `json:"organizationUrl,omitempty"`
}

// NewSuperplaneSemaphoreRunTemplate instantiates a new SuperplaneSemaphoreRunTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneSemaphoreRunTemplate() *SuperplaneSemaphoreRunTemplate {
	this := SuperplaneSemaphoreRunTemplate{}
	return &this
}

// NewSuperplaneSemaphoreRunTemplateWithDefaults instantiates a new SuperplaneSemaphoreRunTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneSemaphoreRunTemplateWithDefaults() *SuperplaneSemaphoreRunTemplate {
	this := SuperplaneSemaphoreRunTemplate{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *SuperplaneSemaphoreRunTemplate) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneSemaphoreRunTemplate) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *SuperplaneSemaphoreRunTemplate) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *SuperplaneSemaphoreRunTemplate) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *SuperplaneSemaphoreRunTemplate) GetBranch() string {
	if o == nil || IsNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneSemaphoreRunTemplate) GetBranchOk() (*string, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *SuperplaneSemaphoreRunTemplate) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *SuperplaneSemaphoreRunTemplate) SetBranch(v string) {
	o.Branch = &v
}

// GetPipelineFile returns the PipelineFile field value if set, zero value otherwise.
func (o *SuperplaneSemaphoreRunTemplate) GetPipelineFile() string {
	if o == nil || IsNil(o.PipelineFile) {
		var ret string
		return ret
	}
	return *o.PipelineFile
}

// GetPipelineFileOk returns a tuple with the PipelineFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneSemaphoreRunTemplate) GetPipelineFileOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineFile) {
		return nil, false
	}
	return o.PipelineFile, true
}

// HasPipelineFile returns a boolean if a field has been set.
func (o *SuperplaneSemaphoreRunTemplate) HasPipelineFile() bool {
	if o != nil && !IsNil(o.PipelineFile) {
		return true
	}

	return false
}

// SetPipelineFile gets a reference to the given string and assigns it to the PipelineFile field.
func (o *SuperplaneSemaphoreRunTemplate) SetPipelineFile(v string) {
	o.PipelineFile = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *SuperplaneSemaphoreRunTemplate) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneSemaphoreRunTemplate) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *SuperplaneSemaphoreRunTemplate) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *SuperplaneSemaphoreRunTemplate) SetTaskId(v string) {
	o.TaskId = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *SuperplaneSemaphoreRunTemplate) GetParameters() map[string]string {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]string
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneSemaphoreRunTemplate) GetParametersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *SuperplaneSemaphoreRunTemplate) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *SuperplaneSemaphoreRunTemplate) SetParameters(v map[string]string) {
	o.Parameters = &v
}

// GetApiToken returns the ApiToken field value if set, zero value otherwise.
func (o *SuperplaneSemaphoreRunTemplate) GetApiToken() string {
	if o == nil || IsNil(o.ApiToken) {
		var ret string
		return ret
	}
	return *o.ApiToken
}

// GetApiTokenOk returns a tuple with the ApiToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneSemaphoreRunTemplate) GetApiTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ApiToken) {
		return nil, false
	}
	return o.ApiToken, true
}

// HasApiToken returns a boolean if a field has been set.
func (o *SuperplaneSemaphoreRunTemplate) HasApiToken() bool {
	if o != nil && !IsNil(o.ApiToken) {
		return true
	}

	return false
}

// SetApiToken gets a reference to the given string and assigns it to the ApiToken field.
func (o *SuperplaneSemaphoreRunTemplate) SetApiToken(v string) {
	o.ApiToken = &v
}

// GetOrganizationUrl returns the OrganizationUrl field value if set, zero value otherwise.
func (o *SuperplaneSemaphoreRunTemplate) GetOrganizationUrl() string {
	if o == nil || IsNil(o.OrganizationUrl) {
		var ret string
		return ret
	}
	return *o.OrganizationUrl
}

// GetOrganizationUrlOk returns a tuple with the OrganizationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneSemaphoreRunTemplate) GetOrganizationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationUrl) {
		return nil, false
	}
	return o.OrganizationUrl, true
}

// HasOrganizationUrl returns a boolean if a field has been set.
func (o *SuperplaneSemaphoreRunTemplate) HasOrganizationUrl() bool {
	if o != nil && !IsNil(o.OrganizationUrl) {
		return true
	}

	return false
}

// SetOrganizationUrl gets a reference to the given string and assigns it to the OrganizationUrl field.
func (o *SuperplaneSemaphoreRunTemplate) SetOrganizationUrl(v string) {
	o.OrganizationUrl = &v
}

func (o SuperplaneSemaphoreRunTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneSemaphoreRunTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !IsNil(o.PipelineFile) {
		toSerialize["pipelineFile"] = o.PipelineFile
	}
	if !IsNil(o.TaskId) {
		toSerialize["taskId"] = o.TaskId
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.ApiToken) {
		toSerialize["apiToken"] = o.ApiToken
	}
	if !IsNil(o.OrganizationUrl) {
		toSerialize["organizationUrl"] = o.OrganizationUrl
	}
	return toSerialize, nil
}

type NullableSuperplaneSemaphoreRunTemplate struct {
	value *SuperplaneSemaphoreRunTemplate
	isSet bool
}

func (v NullableSuperplaneSemaphoreRunTemplate) Get() *SuperplaneSemaphoreRunTemplate {
	return v.value
}

func (v *NullableSuperplaneSemaphoreRunTemplate) Set(val *SuperplaneSemaphoreRunTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneSemaphoreRunTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneSemaphoreRunTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneSemaphoreRunTemplate(val *SuperplaneSemaphoreRunTemplate) *NullableSuperplaneSemaphoreRunTemplate {
	return &NullableSuperplaneSemaphoreRunTemplate{value: val, isSet: true}
}

func (v NullableSuperplaneSemaphoreRunTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneSemaphoreRunTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


