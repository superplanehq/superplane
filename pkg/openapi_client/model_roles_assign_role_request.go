/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the RolesAssignRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RolesAssignRoleRequest{}

// RolesAssignRoleRequest struct for RolesAssignRoleRequest
type RolesAssignRoleRequest struct {
	UserId *string `json:"userId,omitempty"`
	UserEmail *string `json:"userEmail,omitempty"`
	RoleAssignment *RolesRoleAssignment `json:"roleAssignment,omitempty"`
}

// NewRolesAssignRoleRequest instantiates a new RolesAssignRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolesAssignRoleRequest() *RolesAssignRoleRequest {
	this := RolesAssignRoleRequest{}
	return &this
}

// NewRolesAssignRoleRequestWithDefaults instantiates a new RolesAssignRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolesAssignRoleRequestWithDefaults() *RolesAssignRoleRequest {
	this := RolesAssignRoleRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *RolesAssignRoleRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesAssignRoleRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *RolesAssignRoleRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *RolesAssignRoleRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetUserEmail returns the UserEmail field value if set, zero value otherwise.
func (o *RolesAssignRoleRequest) GetUserEmail() string {
	if o == nil || IsNil(o.UserEmail) {
		var ret string
		return ret
	}
	return *o.UserEmail
}

// GetUserEmailOk returns a tuple with the UserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesAssignRoleRequest) GetUserEmailOk() (*string, bool) {
	if o == nil || IsNil(o.UserEmail) {
		return nil, false
	}
	return o.UserEmail, true
}

// HasUserEmail returns a boolean if a field has been set.
func (o *RolesAssignRoleRequest) HasUserEmail() bool {
	if o != nil && !IsNil(o.UserEmail) {
		return true
	}

	return false
}

// SetUserEmail gets a reference to the given string and assigns it to the UserEmail field.
func (o *RolesAssignRoleRequest) SetUserEmail(v string) {
	o.UserEmail = &v
}

// GetRoleAssignment returns the RoleAssignment field value if set, zero value otherwise.
func (o *RolesAssignRoleRequest) GetRoleAssignment() RolesRoleAssignment {
	if o == nil || IsNil(o.RoleAssignment) {
		var ret RolesRoleAssignment
		return ret
	}
	return *o.RoleAssignment
}

// GetRoleAssignmentOk returns a tuple with the RoleAssignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesAssignRoleRequest) GetRoleAssignmentOk() (*RolesRoleAssignment, bool) {
	if o == nil || IsNil(o.RoleAssignment) {
		return nil, false
	}
	return o.RoleAssignment, true
}

// HasRoleAssignment returns a boolean if a field has been set.
func (o *RolesAssignRoleRequest) HasRoleAssignment() bool {
	if o != nil && !IsNil(o.RoleAssignment) {
		return true
	}

	return false
}

// SetRoleAssignment gets a reference to the given RolesRoleAssignment and assigns it to the RoleAssignment field.
func (o *RolesAssignRoleRequest) SetRoleAssignment(v RolesRoleAssignment) {
	o.RoleAssignment = &v
}

func (o RolesAssignRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RolesAssignRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.UserEmail) {
		toSerialize["userEmail"] = o.UserEmail
	}
	if !IsNil(o.RoleAssignment) {
		toSerialize["roleAssignment"] = o.RoleAssignment
	}
	return toSerialize, nil
}

type NullableRolesAssignRoleRequest struct {
	value *RolesAssignRoleRequest
	isSet bool
}

func (v NullableRolesAssignRoleRequest) Get() *RolesAssignRoleRequest {
	return v.value
}

func (v *NullableRolesAssignRoleRequest) Set(val *RolesAssignRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRolesAssignRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRolesAssignRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolesAssignRoleRequest(val *RolesAssignRoleRequest) *NullableRolesAssignRoleRequest {
	return &NullableRolesAssignRoleRequest{value: val, isSet: true}
}

func (v NullableRolesAssignRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolesAssignRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


