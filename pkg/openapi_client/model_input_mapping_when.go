/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the InputMappingWhen type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InputMappingWhen{}

// InputMappingWhen struct for InputMappingWhen
type InputMappingWhen struct {
	TriggeredBy *InputMappingWhenTriggeredBy `json:"triggeredBy,omitempty"`
}

// NewInputMappingWhen instantiates a new InputMappingWhen object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputMappingWhen() *InputMappingWhen {
	this := InputMappingWhen{}
	return &this
}

// NewInputMappingWhenWithDefaults instantiates a new InputMappingWhen object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputMappingWhenWithDefaults() *InputMappingWhen {
	this := InputMappingWhen{}
	return &this
}

// GetTriggeredBy returns the TriggeredBy field value if set, zero value otherwise.
func (o *InputMappingWhen) GetTriggeredBy() InputMappingWhenTriggeredBy {
	if o == nil || IsNil(o.TriggeredBy) {
		var ret InputMappingWhenTriggeredBy
		return ret
	}
	return *o.TriggeredBy
}

// GetTriggeredByOk returns a tuple with the TriggeredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputMappingWhen) GetTriggeredByOk() (*InputMappingWhenTriggeredBy, bool) {
	if o == nil || IsNil(o.TriggeredBy) {
		return nil, false
	}
	return o.TriggeredBy, true
}

// HasTriggeredBy returns a boolean if a field has been set.
func (o *InputMappingWhen) HasTriggeredBy() bool {
	if o != nil && !IsNil(o.TriggeredBy) {
		return true
	}

	return false
}

// SetTriggeredBy gets a reference to the given InputMappingWhenTriggeredBy and assigns it to the TriggeredBy field.
func (o *InputMappingWhen) SetTriggeredBy(v InputMappingWhenTriggeredBy) {
	o.TriggeredBy = &v
}

func (o InputMappingWhen) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InputMappingWhen) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TriggeredBy) {
		toSerialize["triggeredBy"] = o.TriggeredBy
	}
	return toSerialize, nil
}

type NullableInputMappingWhen struct {
	value *InputMappingWhen
	isSet bool
}

func (v NullableInputMappingWhen) Get() *InputMappingWhen {
	return v.value
}

func (v *NullableInputMappingWhen) Set(val *InputMappingWhen) {
	v.value = val
	v.isSet = true
}

func (v NullableInputMappingWhen) IsSet() bool {
	return v.isSet
}

func (v *NullableInputMappingWhen) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputMappingWhen(val *InputMappingWhen) *NullableInputMappingWhen {
	return &NullableInputMappingWhen{value: val, isSet: true}
}

func (v NullableInputMappingWhen) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputMappingWhen) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


