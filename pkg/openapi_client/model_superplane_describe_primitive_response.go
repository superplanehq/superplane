/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneDescribePrimitiveResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneDescribePrimitiveResponse{}

// SuperplaneDescribePrimitiveResponse struct for SuperplaneDescribePrimitiveResponse
type SuperplaneDescribePrimitiveResponse struct {
	Primitive *SuperplanePrimitive `json:"primitive,omitempty"`
}

// NewSuperplaneDescribePrimitiveResponse instantiates a new SuperplaneDescribePrimitiveResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneDescribePrimitiveResponse() *SuperplaneDescribePrimitiveResponse {
	this := SuperplaneDescribePrimitiveResponse{}
	return &this
}

// NewSuperplaneDescribePrimitiveResponseWithDefaults instantiates a new SuperplaneDescribePrimitiveResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneDescribePrimitiveResponseWithDefaults() *SuperplaneDescribePrimitiveResponse {
	this := SuperplaneDescribePrimitiveResponse{}
	return &this
}

// GetPrimitive returns the Primitive field value if set, zero value otherwise.
func (o *SuperplaneDescribePrimitiveResponse) GetPrimitive() SuperplanePrimitive {
	if o == nil || IsNil(o.Primitive) {
		var ret SuperplanePrimitive
		return ret
	}
	return *o.Primitive
}

// GetPrimitiveOk returns a tuple with the Primitive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneDescribePrimitiveResponse) GetPrimitiveOk() (*SuperplanePrimitive, bool) {
	if o == nil || IsNil(o.Primitive) {
		return nil, false
	}
	return o.Primitive, true
}

// HasPrimitive returns a boolean if a field has been set.
func (o *SuperplaneDescribePrimitiveResponse) HasPrimitive() bool {
	if o != nil && !IsNil(o.Primitive) {
		return true
	}

	return false
}

// SetPrimitive gets a reference to the given SuperplanePrimitive and assigns it to the Primitive field.
func (o *SuperplaneDescribePrimitiveResponse) SetPrimitive(v SuperplanePrimitive) {
	o.Primitive = &v
}

func (o SuperplaneDescribePrimitiveResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneDescribePrimitiveResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Primitive) {
		toSerialize["primitive"] = o.Primitive
	}
	return toSerialize, nil
}

type NullableSuperplaneDescribePrimitiveResponse struct {
	value *SuperplaneDescribePrimitiveResponse
	isSet bool
}

func (v NullableSuperplaneDescribePrimitiveResponse) Get() *SuperplaneDescribePrimitiveResponse {
	return v.value
}

func (v *NullableSuperplaneDescribePrimitiveResponse) Set(val *SuperplaneDescribePrimitiveResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneDescribePrimitiveResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneDescribePrimitiveResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneDescribePrimitiveResponse(val *SuperplaneDescribePrimitiveResponse) *NullableSuperplaneDescribePrimitiveResponse {
	return &NullableSuperplaneDescribePrimitiveResponse{value: val, isSet: true}
}

func (v NullableSuperplaneDescribePrimitiveResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneDescribePrimitiveResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


