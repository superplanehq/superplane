/*
Superplane Authorization API

API for the Superplane Authorization service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SecretsCreateSecretRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretsCreateSecretRequest{}

// SecretsCreateSecretRequest struct for SecretsCreateSecretRequest
type SecretsCreateSecretRequest struct {
	Secret *SecretsSecret `json:"secret,omitempty"`
	DomainType *AuthorizationDomainType `json:"domainType,omitempty"`
	DomainId *string `json:"domainId,omitempty"`
}

// NewSecretsCreateSecretRequest instantiates a new SecretsCreateSecretRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretsCreateSecretRequest() *SecretsCreateSecretRequest {
	this := SecretsCreateSecretRequest{}
	var domainType AuthorizationDomainType = AUTHORIZATIONDOMAINTYPE_DOMAIN_TYPE_UNSPECIFIED
	this.DomainType = &domainType
	return &this
}

// NewSecretsCreateSecretRequestWithDefaults instantiates a new SecretsCreateSecretRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretsCreateSecretRequestWithDefaults() *SecretsCreateSecretRequest {
	this := SecretsCreateSecretRequest{}
	var domainType AuthorizationDomainType = AUTHORIZATIONDOMAINTYPE_DOMAIN_TYPE_UNSPECIFIED
	this.DomainType = &domainType
	return &this
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *SecretsCreateSecretRequest) GetSecret() SecretsSecret {
	if o == nil || IsNil(o.Secret) {
		var ret SecretsSecret
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsCreateSecretRequest) GetSecretOk() (*SecretsSecret, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *SecretsCreateSecretRequest) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given SecretsSecret and assigns it to the Secret field.
func (o *SecretsCreateSecretRequest) SetSecret(v SecretsSecret) {
	o.Secret = &v
}

// GetDomainType returns the DomainType field value if set, zero value otherwise.
func (o *SecretsCreateSecretRequest) GetDomainType() AuthorizationDomainType {
	if o == nil || IsNil(o.DomainType) {
		var ret AuthorizationDomainType
		return ret
	}
	return *o.DomainType
}

// GetDomainTypeOk returns a tuple with the DomainType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsCreateSecretRequest) GetDomainTypeOk() (*AuthorizationDomainType, bool) {
	if o == nil || IsNil(o.DomainType) {
		return nil, false
	}
	return o.DomainType, true
}

// HasDomainType returns a boolean if a field has been set.
func (o *SecretsCreateSecretRequest) HasDomainType() bool {
	if o != nil && !IsNil(o.DomainType) {
		return true
	}

	return false
}

// SetDomainType gets a reference to the given AuthorizationDomainType and assigns it to the DomainType field.
func (o *SecretsCreateSecretRequest) SetDomainType(v AuthorizationDomainType) {
	o.DomainType = &v
}

// GetDomainId returns the DomainId field value if set, zero value otherwise.
func (o *SecretsCreateSecretRequest) GetDomainId() string {
	if o == nil || IsNil(o.DomainId) {
		var ret string
		return ret
	}
	return *o.DomainId
}

// GetDomainIdOk returns a tuple with the DomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsCreateSecretRequest) GetDomainIdOk() (*string, bool) {
	if o == nil || IsNil(o.DomainId) {
		return nil, false
	}
	return o.DomainId, true
}

// HasDomainId returns a boolean if a field has been set.
func (o *SecretsCreateSecretRequest) HasDomainId() bool {
	if o != nil && !IsNil(o.DomainId) {
		return true
	}

	return false
}

// SetDomainId gets a reference to the given string and assigns it to the DomainId field.
func (o *SecretsCreateSecretRequest) SetDomainId(v string) {
	o.DomainId = &v
}

func (o SecretsCreateSecretRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretsCreateSecretRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !IsNil(o.DomainType) {
		toSerialize["domainType"] = o.DomainType
	}
	if !IsNil(o.DomainId) {
		toSerialize["domainId"] = o.DomainId
	}
	return toSerialize, nil
}

type NullableSecretsCreateSecretRequest struct {
	value *SecretsCreateSecretRequest
	isSet bool
}

func (v NullableSecretsCreateSecretRequest) Get() *SecretsCreateSecretRequest {
	return v.value
}

func (v *NullableSecretsCreateSecretRequest) Set(val *SecretsCreateSecretRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretsCreateSecretRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretsCreateSecretRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretsCreateSecretRequest(val *SecretsCreateSecretRequest) *NullableSecretsCreateSecretRequest {
	return &NullableSecretsCreateSecretRequest{value: val, isSet: true}
}

func (v NullableSecretsCreateSecretRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretsCreateSecretRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


