/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the ComponentsListComponentActionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComponentsListComponentActionsResponse{}

// ComponentsListComponentActionsResponse struct for ComponentsListComponentActionsResponse
type ComponentsListComponentActionsResponse struct {
	Actions []ComponentsComponentAction `json:"actions,omitempty"`
}

// NewComponentsListComponentActionsResponse instantiates a new ComponentsListComponentActionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponentsListComponentActionsResponse() *ComponentsListComponentActionsResponse {
	this := ComponentsListComponentActionsResponse{}
	return &this
}

// NewComponentsListComponentActionsResponseWithDefaults instantiates a new ComponentsListComponentActionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentsListComponentActionsResponseWithDefaults() *ComponentsListComponentActionsResponse {
	this := ComponentsListComponentActionsResponse{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *ComponentsListComponentActionsResponse) GetActions() []ComponentsComponentAction {
	if o == nil || IsNil(o.Actions) {
		var ret []ComponentsComponentAction
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsListComponentActionsResponse) GetActionsOk() ([]ComponentsComponentAction, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *ComponentsListComponentActionsResponse) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []ComponentsComponentAction and assigns it to the Actions field.
func (o *ComponentsListComponentActionsResponse) SetActions(v []ComponentsComponentAction) {
	o.Actions = v
}

func (o ComponentsListComponentActionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComponentsListComponentActionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	return toSerialize, nil
}

type NullableComponentsListComponentActionsResponse struct {
	value *ComponentsListComponentActionsResponse
	isSet bool
}

func (v NullableComponentsListComponentActionsResponse) Get() *ComponentsListComponentActionsResponse {
	return v.value
}

func (v *NullableComponentsListComponentActionsResponse) Set(val *ComponentsListComponentActionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentsListComponentActionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentsListComponentActionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentsListComponentActionsResponse(val *ComponentsListComponentActionsResponse) *NullableComponentsListComponentActionsResponse {
	return &NullableComponentsListComponentActionsResponse{value: val, isSet: true}
}

func (v NullableComponentsListComponentActionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentsListComponentActionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


