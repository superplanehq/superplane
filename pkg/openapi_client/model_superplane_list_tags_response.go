/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneListTagsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneListTagsResponse{}

// SuperplaneListTagsResponse struct for SuperplaneListTagsResponse
type SuperplaneListTagsResponse struct {
	Tags []SuperplaneStageTag `json:"tags,omitempty"`
}

// NewSuperplaneListTagsResponse instantiates a new SuperplaneListTagsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneListTagsResponse() *SuperplaneListTagsResponse {
	this := SuperplaneListTagsResponse{}
	return &this
}

// NewSuperplaneListTagsResponseWithDefaults instantiates a new SuperplaneListTagsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneListTagsResponseWithDefaults() *SuperplaneListTagsResponse {
	this := SuperplaneListTagsResponse{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *SuperplaneListTagsResponse) GetTags() []SuperplaneStageTag {
	if o == nil || IsNil(o.Tags) {
		var ret []SuperplaneStageTag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneListTagsResponse) GetTagsOk() ([]SuperplaneStageTag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SuperplaneListTagsResponse) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []SuperplaneStageTag and assigns it to the Tags field.
func (o *SuperplaneListTagsResponse) SetTags(v []SuperplaneStageTag) {
	o.Tags = v
}

func (o SuperplaneListTagsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneListTagsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableSuperplaneListTagsResponse struct {
	value *SuperplaneListTagsResponse
	isSet bool
}

func (v NullableSuperplaneListTagsResponse) Get() *SuperplaneListTagsResponse {
	return v.value
}

func (v *NullableSuperplaneListTagsResponse) Set(val *SuperplaneListTagsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneListTagsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneListTagsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneListTagsResponse(val *SuperplaneListTagsResponse) *NullableSuperplaneListTagsResponse {
	return &NullableSuperplaneListTagsResponse{value: val, isSet: true}
}

func (v NullableSuperplaneListTagsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneListTagsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


