/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneBulkListStageEventsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneBulkListStageEventsResponse{}

// SuperplaneBulkListStageEventsResponse struct for SuperplaneBulkListStageEventsResponse
type SuperplaneBulkListStageEventsResponse struct {
	Results []SuperplaneStageEventItemResult `json:"results,omitempty"`
}

// NewSuperplaneBulkListStageEventsResponse instantiates a new SuperplaneBulkListStageEventsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneBulkListStageEventsResponse() *SuperplaneBulkListStageEventsResponse {
	this := SuperplaneBulkListStageEventsResponse{}
	return &this
}

// NewSuperplaneBulkListStageEventsResponseWithDefaults instantiates a new SuperplaneBulkListStageEventsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneBulkListStageEventsResponseWithDefaults() *SuperplaneBulkListStageEventsResponse {
	this := SuperplaneBulkListStageEventsResponse{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *SuperplaneBulkListStageEventsResponse) GetResults() []SuperplaneStageEventItemResult {
	if o == nil || IsNil(o.Results) {
		var ret []SuperplaneStageEventItemResult
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneBulkListStageEventsResponse) GetResultsOk() ([]SuperplaneStageEventItemResult, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *SuperplaneBulkListStageEventsResponse) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []SuperplaneStageEventItemResult and assigns it to the Results field.
func (o *SuperplaneBulkListStageEventsResponse) SetResults(v []SuperplaneStageEventItemResult) {
	o.Results = v
}

func (o SuperplaneBulkListStageEventsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneBulkListStageEventsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullableSuperplaneBulkListStageEventsResponse struct {
	value *SuperplaneBulkListStageEventsResponse
	isSet bool
}

func (v NullableSuperplaneBulkListStageEventsResponse) Get() *SuperplaneBulkListStageEventsResponse {
	return v.value
}

func (v *NullableSuperplaneBulkListStageEventsResponse) Set(val *SuperplaneBulkListStageEventsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneBulkListStageEventsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneBulkListStageEventsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneBulkListStageEventsResponse(val *SuperplaneBulkListStageEventsResponse) *NullableSuperplaneBulkListStageEventsResponse {
	return &NullableSuperplaneBulkListStageEventsResponse{value: val, isSet: true}
}

func (v NullableSuperplaneBulkListStageEventsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneBulkListStageEventsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


