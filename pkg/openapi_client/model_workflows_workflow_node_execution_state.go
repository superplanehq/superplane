/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"fmt"
)

// WorkflowsWorkflowNodeExecutionState the model 'WorkflowsWorkflowNodeExecutionState'
type WorkflowsWorkflowNodeExecutionState string

// List of WorkflowsWorkflowNodeExecutionState
const (
	WORKFLOWSWORKFLOWNODEEXECUTIONSTATE_STATE_UNKNOWN WorkflowsWorkflowNodeExecutionState = "STATE_UNKNOWN"
	WORKFLOWSWORKFLOWNODEEXECUTIONSTATE_STATE_PENDING WorkflowsWorkflowNodeExecutionState = "STATE_PENDING"
	WORKFLOWSWORKFLOWNODEEXECUTIONSTATE_STATE_WAITING WorkflowsWorkflowNodeExecutionState = "STATE_WAITING"
	WORKFLOWSWORKFLOWNODEEXECUTIONSTATE_STATE_STARTED WorkflowsWorkflowNodeExecutionState = "STATE_STARTED"
	WORKFLOWSWORKFLOWNODEEXECUTIONSTATE_STATE_ROUTING WorkflowsWorkflowNodeExecutionState = "STATE_ROUTING"
	WORKFLOWSWORKFLOWNODEEXECUTIONSTATE_STATE_FINISHED WorkflowsWorkflowNodeExecutionState = "STATE_FINISHED"
)

// All allowed values of WorkflowsWorkflowNodeExecutionState enum
var AllowedWorkflowsWorkflowNodeExecutionStateEnumValues = []WorkflowsWorkflowNodeExecutionState{
	"STATE_UNKNOWN",
	"STATE_PENDING",
	"STATE_WAITING",
	"STATE_STARTED",
	"STATE_ROUTING",
	"STATE_FINISHED",
}

func (v *WorkflowsWorkflowNodeExecutionState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WorkflowsWorkflowNodeExecutionState(value)
	for _, existing := range AllowedWorkflowsWorkflowNodeExecutionStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WorkflowsWorkflowNodeExecutionState", value)
}

// NewWorkflowsWorkflowNodeExecutionStateFromValue returns a pointer to a valid WorkflowsWorkflowNodeExecutionState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWorkflowsWorkflowNodeExecutionStateFromValue(v string) (*WorkflowsWorkflowNodeExecutionState, error) {
	ev := WorkflowsWorkflowNodeExecutionState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WorkflowsWorkflowNodeExecutionState: valid values are %v", v, AllowedWorkflowsWorkflowNodeExecutionStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WorkflowsWorkflowNodeExecutionState) IsValid() bool {
	for _, existing := range AllowedWorkflowsWorkflowNodeExecutionStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WorkflowsWorkflowNodeExecutionState value
func (v WorkflowsWorkflowNodeExecutionState) Ptr() *WorkflowsWorkflowNodeExecutionState {
	return &v
}

type NullableWorkflowsWorkflowNodeExecutionState struct {
	value *WorkflowsWorkflowNodeExecutionState
	isSet bool
}

func (v NullableWorkflowsWorkflowNodeExecutionState) Get() *WorkflowsWorkflowNodeExecutionState {
	return v.value
}

func (v *NullableWorkflowsWorkflowNodeExecutionState) Set(val *WorkflowsWorkflowNodeExecutionState) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowsWorkflowNodeExecutionState) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowsWorkflowNodeExecutionState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowsWorkflowNodeExecutionState(val *WorkflowsWorkflowNodeExecutionState) *NullableWorkflowsWorkflowNodeExecutionState {
	return &NullableWorkflowsWorkflowNodeExecutionState{value: val, isSet: true}
}

func (v NullableWorkflowsWorkflowNodeExecutionState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowsWorkflowNodeExecutionState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

