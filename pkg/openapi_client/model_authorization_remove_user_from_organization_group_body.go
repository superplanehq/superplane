/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the AuthorizationRemoveUserFromOrganizationGroupBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationRemoveUserFromOrganizationGroupBody{}

// AuthorizationRemoveUserFromOrganizationGroupBody struct for AuthorizationRemoveUserFromOrganizationGroupBody
type AuthorizationRemoveUserFromOrganizationGroupBody struct {
	OrganizationId *string `json:"organizationId,omitempty"`
	UserId *string `json:"userId,omitempty"`
	UserEmail *string `json:"userEmail,omitempty"`
}

// NewAuthorizationRemoveUserFromOrganizationGroupBody instantiates a new AuthorizationRemoveUserFromOrganizationGroupBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationRemoveUserFromOrganizationGroupBody() *AuthorizationRemoveUserFromOrganizationGroupBody {
	this := AuthorizationRemoveUserFromOrganizationGroupBody{}
	return &this
}

// NewAuthorizationRemoveUserFromOrganizationGroupBodyWithDefaults instantiates a new AuthorizationRemoveUserFromOrganizationGroupBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationRemoveUserFromOrganizationGroupBodyWithDefaults() *AuthorizationRemoveUserFromOrganizationGroupBody {
	this := AuthorizationRemoveUserFromOrganizationGroupBody{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *AuthorizationRemoveUserFromOrganizationGroupBody) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationRemoveUserFromOrganizationGroupBody) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *AuthorizationRemoveUserFromOrganizationGroupBody) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *AuthorizationRemoveUserFromOrganizationGroupBody) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AuthorizationRemoveUserFromOrganizationGroupBody) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationRemoveUserFromOrganizationGroupBody) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AuthorizationRemoveUserFromOrganizationGroupBody) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *AuthorizationRemoveUserFromOrganizationGroupBody) SetUserId(v string) {
	o.UserId = &v
}

// GetUserEmail returns the UserEmail field value if set, zero value otherwise.
func (o *AuthorizationRemoveUserFromOrganizationGroupBody) GetUserEmail() string {
	if o == nil || IsNil(o.UserEmail) {
		var ret string
		return ret
	}
	return *o.UserEmail
}

// GetUserEmailOk returns a tuple with the UserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationRemoveUserFromOrganizationGroupBody) GetUserEmailOk() (*string, bool) {
	if o == nil || IsNil(o.UserEmail) {
		return nil, false
	}
	return o.UserEmail, true
}

// HasUserEmail returns a boolean if a field has been set.
func (o *AuthorizationRemoveUserFromOrganizationGroupBody) HasUserEmail() bool {
	if o != nil && !IsNil(o.UserEmail) {
		return true
	}

	return false
}

// SetUserEmail gets a reference to the given string and assigns it to the UserEmail field.
func (o *AuthorizationRemoveUserFromOrganizationGroupBody) SetUserEmail(v string) {
	o.UserEmail = &v
}

func (o AuthorizationRemoveUserFromOrganizationGroupBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationRemoveUserFromOrganizationGroupBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.UserEmail) {
		toSerialize["userEmail"] = o.UserEmail
	}
	return toSerialize, nil
}

type NullableAuthorizationRemoveUserFromOrganizationGroupBody struct {
	value *AuthorizationRemoveUserFromOrganizationGroupBody
	isSet bool
}

func (v NullableAuthorizationRemoveUserFromOrganizationGroupBody) Get() *AuthorizationRemoveUserFromOrganizationGroupBody {
	return v.value
}

func (v *NullableAuthorizationRemoveUserFromOrganizationGroupBody) Set(val *AuthorizationRemoveUserFromOrganizationGroupBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationRemoveUserFromOrganizationGroupBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationRemoveUserFromOrganizationGroupBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationRemoveUserFromOrganizationGroupBody(val *AuthorizationRemoveUserFromOrganizationGroupBody) *NullableAuthorizationRemoveUserFromOrganizationGroupBody {
	return &NullableAuthorizationRemoveUserFromOrganizationGroupBody{value: val, isSet: true}
}

func (v NullableAuthorizationRemoveUserFromOrganizationGroupBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationRemoveUserFromOrganizationGroupBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


