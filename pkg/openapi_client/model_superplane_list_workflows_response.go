/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneListWorkflowsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneListWorkflowsResponse{}

// SuperplaneListWorkflowsResponse struct for SuperplaneListWorkflowsResponse
type SuperplaneListWorkflowsResponse struct {
	Workflows []SuperplaneWorkflow `json:"workflows,omitempty"`
}

// NewSuperplaneListWorkflowsResponse instantiates a new SuperplaneListWorkflowsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneListWorkflowsResponse() *SuperplaneListWorkflowsResponse {
	this := SuperplaneListWorkflowsResponse{}
	return &this
}

// NewSuperplaneListWorkflowsResponseWithDefaults instantiates a new SuperplaneListWorkflowsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneListWorkflowsResponseWithDefaults() *SuperplaneListWorkflowsResponse {
	this := SuperplaneListWorkflowsResponse{}
	return &this
}

// GetWorkflows returns the Workflows field value if set, zero value otherwise.
func (o *SuperplaneListWorkflowsResponse) GetWorkflows() []SuperplaneWorkflow {
	if o == nil || IsNil(o.Workflows) {
		var ret []SuperplaneWorkflow
		return ret
	}
	return o.Workflows
}

// GetWorkflowsOk returns a tuple with the Workflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneListWorkflowsResponse) GetWorkflowsOk() ([]SuperplaneWorkflow, bool) {
	if o == nil || IsNil(o.Workflows) {
		return nil, false
	}
	return o.Workflows, true
}

// HasWorkflows returns a boolean if a field has been set.
func (o *SuperplaneListWorkflowsResponse) HasWorkflows() bool {
	if o != nil && !IsNil(o.Workflows) {
		return true
	}

	return false
}

// SetWorkflows gets a reference to the given []SuperplaneWorkflow and assigns it to the Workflows field.
func (o *SuperplaneListWorkflowsResponse) SetWorkflows(v []SuperplaneWorkflow) {
	o.Workflows = v
}

func (o SuperplaneListWorkflowsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneListWorkflowsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Workflows) {
		toSerialize["workflows"] = o.Workflows
	}
	return toSerialize, nil
}

type NullableSuperplaneListWorkflowsResponse struct {
	value *SuperplaneListWorkflowsResponse
	isSet bool
}

func (v NullableSuperplaneListWorkflowsResponse) Get() *SuperplaneListWorkflowsResponse {
	return v.value
}

func (v *NullableSuperplaneListWorkflowsResponse) Set(val *SuperplaneListWorkflowsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneListWorkflowsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneListWorkflowsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneListWorkflowsResponse(val *SuperplaneListWorkflowsResponse) *NullableSuperplaneListWorkflowsResponse {
	return &NullableSuperplaneListWorkflowsResponse{value: val, isSet: true}
}

func (v NullableSuperplaneListWorkflowsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneListWorkflowsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


