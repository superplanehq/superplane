/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneStageStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneStageStatus{}

// SuperplaneStageStatus struct for SuperplaneStageStatus
type SuperplaneStageStatus struct {
	LastExecution *SuperplaneExecution `json:"lastExecution,omitempty"`
	Queue *StatusQueue `json:"queue,omitempty"`
}

// NewSuperplaneStageStatus instantiates a new SuperplaneStageStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneStageStatus() *SuperplaneStageStatus {
	this := SuperplaneStageStatus{}
	return &this
}

// NewSuperplaneStageStatusWithDefaults instantiates a new SuperplaneStageStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneStageStatusWithDefaults() *SuperplaneStageStatus {
	this := SuperplaneStageStatus{}
	return &this
}

// GetLastExecution returns the LastExecution field value if set, zero value otherwise.
func (o *SuperplaneStageStatus) GetLastExecution() SuperplaneExecution {
	if o == nil || IsNil(o.LastExecution) {
		var ret SuperplaneExecution
		return ret
	}
	return *o.LastExecution
}

// GetLastExecutionOk returns a tuple with the LastExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStageStatus) GetLastExecutionOk() (*SuperplaneExecution, bool) {
	if o == nil || IsNil(o.LastExecution) {
		return nil, false
	}
	return o.LastExecution, true
}

// HasLastExecution returns a boolean if a field has been set.
func (o *SuperplaneStageStatus) HasLastExecution() bool {
	if o != nil && !IsNil(o.LastExecution) {
		return true
	}

	return false
}

// SetLastExecution gets a reference to the given SuperplaneExecution and assigns it to the LastExecution field.
func (o *SuperplaneStageStatus) SetLastExecution(v SuperplaneExecution) {
	o.LastExecution = &v
}

// GetQueue returns the Queue field value if set, zero value otherwise.
func (o *SuperplaneStageStatus) GetQueue() StatusQueue {
	if o == nil || IsNil(o.Queue) {
		var ret StatusQueue
		return ret
	}
	return *o.Queue
}

// GetQueueOk returns a tuple with the Queue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStageStatus) GetQueueOk() (*StatusQueue, bool) {
	if o == nil || IsNil(o.Queue) {
		return nil, false
	}
	return o.Queue, true
}

// HasQueue returns a boolean if a field has been set.
func (o *SuperplaneStageStatus) HasQueue() bool {
	if o != nil && !IsNil(o.Queue) {
		return true
	}

	return false
}

// SetQueue gets a reference to the given StatusQueue and assigns it to the Queue field.
func (o *SuperplaneStageStatus) SetQueue(v StatusQueue) {
	o.Queue = &v
}

func (o SuperplaneStageStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneStageStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastExecution) {
		toSerialize["lastExecution"] = o.LastExecution
	}
	if !IsNil(o.Queue) {
		toSerialize["queue"] = o.Queue
	}
	return toSerialize, nil
}

type NullableSuperplaneStageStatus struct {
	value *SuperplaneStageStatus
	isSet bool
}

func (v NullableSuperplaneStageStatus) Get() *SuperplaneStageStatus {
	return v.value
}

func (v *NullableSuperplaneStageStatus) Set(val *SuperplaneStageStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneStageStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneStageStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneStageStatus(val *SuperplaneStageStatus) *NullableSuperplaneStageStatus {
	return &NullableSuperplaneStageStatus{value: val, isSet: true}
}

func (v NullableSuperplaneStageStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneStageStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


