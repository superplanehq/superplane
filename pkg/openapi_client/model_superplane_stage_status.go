/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneStageStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneStageStatus{}

// SuperplaneStageStatus struct for SuperplaneStageStatus
type SuperplaneStageStatus struct {
	LastExecution *SuperplaneExecution `json:"lastExecution,omitempty"`
	LastWaitingEvent *SuperplaneStageEvent `json:"lastWaitingEvent,omitempty"`
	LastPendingEvent *SuperplaneStageEvent `json:"lastPendingEvent,omitempty"`
	QueueItemsCount *int64 `json:"queueItemsCount,omitempty"`
}

// NewSuperplaneStageStatus instantiates a new SuperplaneStageStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneStageStatus() *SuperplaneStageStatus {
	this := SuperplaneStageStatus{}
	return &this
}

// NewSuperplaneStageStatusWithDefaults instantiates a new SuperplaneStageStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneStageStatusWithDefaults() *SuperplaneStageStatus {
	this := SuperplaneStageStatus{}
	return &this
}

// GetLastExecution returns the LastExecution field value if set, zero value otherwise.
func (o *SuperplaneStageStatus) GetLastExecution() SuperplaneExecution {
	if o == nil || IsNil(o.LastExecution) {
		var ret SuperplaneExecution
		return ret
	}
	return *o.LastExecution
}

// GetLastExecutionOk returns a tuple with the LastExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStageStatus) GetLastExecutionOk() (*SuperplaneExecution, bool) {
	if o == nil || IsNil(o.LastExecution) {
		return nil, false
	}
	return o.LastExecution, true
}

// HasLastExecution returns a boolean if a field has been set.
func (o *SuperplaneStageStatus) HasLastExecution() bool {
	if o != nil && !IsNil(o.LastExecution) {
		return true
	}

	return false
}

// SetLastExecution gets a reference to the given SuperplaneExecution and assigns it to the LastExecution field.
func (o *SuperplaneStageStatus) SetLastExecution(v SuperplaneExecution) {
	o.LastExecution = &v
}

// GetLastWaitingEvent returns the LastWaitingEvent field value if set, zero value otherwise.
func (o *SuperplaneStageStatus) GetLastWaitingEvent() SuperplaneStageEvent {
	if o == nil || IsNil(o.LastWaitingEvent) {
		var ret SuperplaneStageEvent
		return ret
	}
	return *o.LastWaitingEvent
}

// GetLastWaitingEventOk returns a tuple with the LastWaitingEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStageStatus) GetLastWaitingEventOk() (*SuperplaneStageEvent, bool) {
	if o == nil || IsNil(o.LastWaitingEvent) {
		return nil, false
	}
	return o.LastWaitingEvent, true
}

// HasLastWaitingEvent returns a boolean if a field has been set.
func (o *SuperplaneStageStatus) HasLastWaitingEvent() bool {
	if o != nil && !IsNil(o.LastWaitingEvent) {
		return true
	}

	return false
}

// SetLastWaitingEvent gets a reference to the given SuperplaneStageEvent and assigns it to the LastWaitingEvent field.
func (o *SuperplaneStageStatus) SetLastWaitingEvent(v SuperplaneStageEvent) {
	o.LastWaitingEvent = &v
}

// GetLastPendingEvent returns the LastPendingEvent field value if set, zero value otherwise.
func (o *SuperplaneStageStatus) GetLastPendingEvent() SuperplaneStageEvent {
	if o == nil || IsNil(o.LastPendingEvent) {
		var ret SuperplaneStageEvent
		return ret
	}
	return *o.LastPendingEvent
}

// GetLastPendingEventOk returns a tuple with the LastPendingEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStageStatus) GetLastPendingEventOk() (*SuperplaneStageEvent, bool) {
	if o == nil || IsNil(o.LastPendingEvent) {
		return nil, false
	}
	return o.LastPendingEvent, true
}

// HasLastPendingEvent returns a boolean if a field has been set.
func (o *SuperplaneStageStatus) HasLastPendingEvent() bool {
	if o != nil && !IsNil(o.LastPendingEvent) {
		return true
	}

	return false
}

// SetLastPendingEvent gets a reference to the given SuperplaneStageEvent and assigns it to the LastPendingEvent field.
func (o *SuperplaneStageStatus) SetLastPendingEvent(v SuperplaneStageEvent) {
	o.LastPendingEvent = &v
}

// GetQueueItemsCount returns the QueueItemsCount field value if set, zero value otherwise.
func (o *SuperplaneStageStatus) GetQueueItemsCount() int64 {
	if o == nil || IsNil(o.QueueItemsCount) {
		var ret int64
		return ret
	}
	return *o.QueueItemsCount
}

// GetQueueItemsCountOk returns a tuple with the QueueItemsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStageStatus) GetQueueItemsCountOk() (*int64, bool) {
	if o == nil || IsNil(o.QueueItemsCount) {
		return nil, false
	}
	return o.QueueItemsCount, true
}

// HasQueueItemsCount returns a boolean if a field has been set.
func (o *SuperplaneStageStatus) HasQueueItemsCount() bool {
	if o != nil && !IsNil(o.QueueItemsCount) {
		return true
	}

	return false
}

// SetQueueItemsCount gets a reference to the given int64 and assigns it to the QueueItemsCount field.
func (o *SuperplaneStageStatus) SetQueueItemsCount(v int64) {
	o.QueueItemsCount = &v
}

func (o SuperplaneStageStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneStageStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastExecution) {
		toSerialize["lastExecution"] = o.LastExecution
	}
	if !IsNil(o.LastWaitingEvent) {
		toSerialize["lastWaitingEvent"] = o.LastWaitingEvent
	}
	if !IsNil(o.LastPendingEvent) {
		toSerialize["lastPendingEvent"] = o.LastPendingEvent
	}
	if !IsNil(o.QueueItemsCount) {
		toSerialize["queueItemsCount"] = o.QueueItemsCount
	}
	return toSerialize, nil
}

type NullableSuperplaneStageStatus struct {
	value *SuperplaneStageStatus
	isSet bool
}

func (v NullableSuperplaneStageStatus) Get() *SuperplaneStageStatus {
	return v.value
}

func (v *NullableSuperplaneStageStatus) Set(val *SuperplaneStageStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneStageStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneStageStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneStageStatus(val *SuperplaneStageStatus) *NullableSuperplaneStageStatus {
	return &NullableSuperplaneStageStatus{value: val, isSet: true}
}

func (v NullableSuperplaneStageStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneStageStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


