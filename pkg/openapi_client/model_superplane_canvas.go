/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneCanvas type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneCanvas{}

// SuperplaneCanvas struct for SuperplaneCanvas
type SuperplaneCanvas struct {
	Metadata *SuperplaneCanvasMetadata `json:"metadata,omitempty"`
}

// NewSuperplaneCanvas instantiates a new SuperplaneCanvas object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneCanvas() *SuperplaneCanvas {
	this := SuperplaneCanvas{}
	return &this
}

// NewSuperplaneCanvasWithDefaults instantiates a new SuperplaneCanvas object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneCanvasWithDefaults() *SuperplaneCanvas {
	this := SuperplaneCanvas{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SuperplaneCanvas) GetMetadata() SuperplaneCanvasMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret SuperplaneCanvasMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneCanvas) GetMetadataOk() (*SuperplaneCanvasMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SuperplaneCanvas) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given SuperplaneCanvasMetadata and assigns it to the Metadata field.
func (o *SuperplaneCanvas) SetMetadata(v SuperplaneCanvasMetadata) {
	o.Metadata = &v
}

func (o SuperplaneCanvas) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneCanvas) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableSuperplaneCanvas struct {
	value *SuperplaneCanvas
	isSet bool
}

func (v NullableSuperplaneCanvas) Get() *SuperplaneCanvas {
	return v.value
}

func (v *NullableSuperplaneCanvas) Set(val *SuperplaneCanvas) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneCanvas) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneCanvas) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneCanvas(val *SuperplaneCanvas) *NullableSuperplaneCanvas {
	return &NullableSuperplaneCanvas{value: val, isSet: true}
}

func (v NullableSuperplaneCanvas) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneCanvas) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


