/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the AuthorizationPermission type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationPermission{}

// AuthorizationPermission struct for AuthorizationPermission
type AuthorizationPermission struct {
	Resource *string `json:"resource,omitempty"`
	Action *string `json:"action,omitempty"`
	DomainType *AuthorizationDomainType `json:"domainType,omitempty"`
}

// NewAuthorizationPermission instantiates a new AuthorizationPermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationPermission() *AuthorizationPermission {
	this := AuthorizationPermission{}
	var domainType AuthorizationDomainType = AUTHORIZATIONDOMAINTYPE_DOMAIN_TYPE_UNSPECIFIED
	this.DomainType = &domainType
	return &this
}

// NewAuthorizationPermissionWithDefaults instantiates a new AuthorizationPermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationPermissionWithDefaults() *AuthorizationPermission {
	this := AuthorizationPermission{}
	var domainType AuthorizationDomainType = AUTHORIZATIONDOMAINTYPE_DOMAIN_TYPE_UNSPECIFIED
	this.DomainType = &domainType
	return &this
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *AuthorizationPermission) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationPermission) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *AuthorizationPermission) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *AuthorizationPermission) SetResource(v string) {
	o.Resource = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *AuthorizationPermission) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationPermission) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *AuthorizationPermission) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *AuthorizationPermission) SetAction(v string) {
	o.Action = &v
}

// GetDomainType returns the DomainType field value if set, zero value otherwise.
func (o *AuthorizationPermission) GetDomainType() AuthorizationDomainType {
	if o == nil || IsNil(o.DomainType) {
		var ret AuthorizationDomainType
		return ret
	}
	return *o.DomainType
}

// GetDomainTypeOk returns a tuple with the DomainType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationPermission) GetDomainTypeOk() (*AuthorizationDomainType, bool) {
	if o == nil || IsNil(o.DomainType) {
		return nil, false
	}
	return o.DomainType, true
}

// HasDomainType returns a boolean if a field has been set.
func (o *AuthorizationPermission) HasDomainType() bool {
	if o != nil && !IsNil(o.DomainType) {
		return true
	}

	return false
}

// SetDomainType gets a reference to the given AuthorizationDomainType and assigns it to the DomainType field.
func (o *AuthorizationPermission) SetDomainType(v AuthorizationDomainType) {
	o.DomainType = &v
}

func (o AuthorizationPermission) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationPermission) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.DomainType) {
		toSerialize["domainType"] = o.DomainType
	}
	return toSerialize, nil
}

type NullableAuthorizationPermission struct {
	value *AuthorizationPermission
	isSet bool
}

func (v NullableAuthorizationPermission) Get() *AuthorizationPermission {
	return v.value
}

func (v *NullableAuthorizationPermission) Set(val *AuthorizationPermission) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationPermission) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationPermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationPermission(val *AuthorizationPermission) *NullableAuthorizationPermission {
	return &NullableAuthorizationPermission{value: val, isSet: true}
}

func (v NullableAuthorizationPermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationPermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


