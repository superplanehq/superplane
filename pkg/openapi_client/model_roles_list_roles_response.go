/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the RolesListRolesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RolesListRolesResponse{}

// RolesListRolesResponse struct for RolesListRolesResponse
type RolesListRolesResponse struct {
	Roles []RolesRole `json:"roles,omitempty"`
}

// NewRolesListRolesResponse instantiates a new RolesListRolesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolesListRolesResponse() *RolesListRolesResponse {
	this := RolesListRolesResponse{}
	return &this
}

// NewRolesListRolesResponseWithDefaults instantiates a new RolesListRolesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolesListRolesResponseWithDefaults() *RolesListRolesResponse {
	this := RolesListRolesResponse{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *RolesListRolesResponse) GetRoles() []RolesRole {
	if o == nil || IsNil(o.Roles) {
		var ret []RolesRole
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesListRolesResponse) GetRolesOk() ([]RolesRole, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *RolesListRolesResponse) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []RolesRole and assigns it to the Roles field.
func (o *RolesListRolesResponse) SetRoles(v []RolesRole) {
	o.Roles = v
}

func (o RolesListRolesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RolesListRolesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return toSerialize, nil
}

type NullableRolesListRolesResponse struct {
	value *RolesListRolesResponse
	isSet bool
}

func (v NullableRolesListRolesResponse) Get() *RolesListRolesResponse {
	return v.value
}

func (v *NullableRolesListRolesResponse) Set(val *RolesListRolesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRolesListRolesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRolesListRolesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolesListRolesResponse(val *RolesListRolesResponse) *NullableRolesListRolesResponse {
	return &NullableRolesListRolesResponse{value: val, isSet: true}
}

func (v NullableRolesListRolesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolesListRolesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


