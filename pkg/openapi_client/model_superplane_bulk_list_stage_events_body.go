/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"time"
)

// checks if the SuperplaneBulkListStageEventsBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneBulkListStageEventsBody{}

// SuperplaneBulkListStageEventsBody struct for SuperplaneBulkListStageEventsBody
type SuperplaneBulkListStageEventsBody struct {
	Stages []SuperplaneStageEventItemRequest `json:"stages,omitempty"`
	States []SuperplaneStageEventState `json:"states,omitempty"`
	StateReasons []SuperplaneStageEventStateReason `json:"stateReasons,omitempty"`
	ExecutionStates []SuperplaneExecutionState `json:"executionStates,omitempty"`
	ExecutionResults []ExecutionResult `json:"executionResults,omitempty"`
	LimitPerStage *int32 `json:"limitPerStage,omitempty"`
	Before *time.Time `json:"before,omitempty"`
}

// NewSuperplaneBulkListStageEventsBody instantiates a new SuperplaneBulkListStageEventsBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneBulkListStageEventsBody() *SuperplaneBulkListStageEventsBody {
	this := SuperplaneBulkListStageEventsBody{}
	return &this
}

// NewSuperplaneBulkListStageEventsBodyWithDefaults instantiates a new SuperplaneBulkListStageEventsBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneBulkListStageEventsBodyWithDefaults() *SuperplaneBulkListStageEventsBody {
	this := SuperplaneBulkListStageEventsBody{}
	return &this
}

// GetStages returns the Stages field value if set, zero value otherwise.
func (o *SuperplaneBulkListStageEventsBody) GetStages() []SuperplaneStageEventItemRequest {
	if o == nil || IsNil(o.Stages) {
		var ret []SuperplaneStageEventItemRequest
		return ret
	}
	return o.Stages
}

// GetStagesOk returns a tuple with the Stages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneBulkListStageEventsBody) GetStagesOk() ([]SuperplaneStageEventItemRequest, bool) {
	if o == nil || IsNil(o.Stages) {
		return nil, false
	}
	return o.Stages, true
}

// HasStages returns a boolean if a field has been set.
func (o *SuperplaneBulkListStageEventsBody) HasStages() bool {
	if o != nil && !IsNil(o.Stages) {
		return true
	}

	return false
}

// SetStages gets a reference to the given []SuperplaneStageEventItemRequest and assigns it to the Stages field.
func (o *SuperplaneBulkListStageEventsBody) SetStages(v []SuperplaneStageEventItemRequest) {
	o.Stages = v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *SuperplaneBulkListStageEventsBody) GetStates() []SuperplaneStageEventState {
	if o == nil || IsNil(o.States) {
		var ret []SuperplaneStageEventState
		return ret
	}
	return o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneBulkListStageEventsBody) GetStatesOk() ([]SuperplaneStageEventState, bool) {
	if o == nil || IsNil(o.States) {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *SuperplaneBulkListStageEventsBody) HasStates() bool {
	if o != nil && !IsNil(o.States) {
		return true
	}

	return false
}

// SetStates gets a reference to the given []SuperplaneStageEventState and assigns it to the States field.
func (o *SuperplaneBulkListStageEventsBody) SetStates(v []SuperplaneStageEventState) {
	o.States = v
}

// GetStateReasons returns the StateReasons field value if set, zero value otherwise.
func (o *SuperplaneBulkListStageEventsBody) GetStateReasons() []SuperplaneStageEventStateReason {
	if o == nil || IsNil(o.StateReasons) {
		var ret []SuperplaneStageEventStateReason
		return ret
	}
	return o.StateReasons
}

// GetStateReasonsOk returns a tuple with the StateReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneBulkListStageEventsBody) GetStateReasonsOk() ([]SuperplaneStageEventStateReason, bool) {
	if o == nil || IsNil(o.StateReasons) {
		return nil, false
	}
	return o.StateReasons, true
}

// HasStateReasons returns a boolean if a field has been set.
func (o *SuperplaneBulkListStageEventsBody) HasStateReasons() bool {
	if o != nil && !IsNil(o.StateReasons) {
		return true
	}

	return false
}

// SetStateReasons gets a reference to the given []SuperplaneStageEventStateReason and assigns it to the StateReasons field.
func (o *SuperplaneBulkListStageEventsBody) SetStateReasons(v []SuperplaneStageEventStateReason) {
	o.StateReasons = v
}

// GetExecutionStates returns the ExecutionStates field value if set, zero value otherwise.
func (o *SuperplaneBulkListStageEventsBody) GetExecutionStates() []SuperplaneExecutionState {
	if o == nil || IsNil(o.ExecutionStates) {
		var ret []SuperplaneExecutionState
		return ret
	}
	return o.ExecutionStates
}

// GetExecutionStatesOk returns a tuple with the ExecutionStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneBulkListStageEventsBody) GetExecutionStatesOk() ([]SuperplaneExecutionState, bool) {
	if o == nil || IsNil(o.ExecutionStates) {
		return nil, false
	}
	return o.ExecutionStates, true
}

// HasExecutionStates returns a boolean if a field has been set.
func (o *SuperplaneBulkListStageEventsBody) HasExecutionStates() bool {
	if o != nil && !IsNil(o.ExecutionStates) {
		return true
	}

	return false
}

// SetExecutionStates gets a reference to the given []SuperplaneExecutionState and assigns it to the ExecutionStates field.
func (o *SuperplaneBulkListStageEventsBody) SetExecutionStates(v []SuperplaneExecutionState) {
	o.ExecutionStates = v
}

// GetExecutionResults returns the ExecutionResults field value if set, zero value otherwise.
func (o *SuperplaneBulkListStageEventsBody) GetExecutionResults() []ExecutionResult {
	if o == nil || IsNil(o.ExecutionResults) {
		var ret []ExecutionResult
		return ret
	}
	return o.ExecutionResults
}

// GetExecutionResultsOk returns a tuple with the ExecutionResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneBulkListStageEventsBody) GetExecutionResultsOk() ([]ExecutionResult, bool) {
	if o == nil || IsNil(o.ExecutionResults) {
		return nil, false
	}
	return o.ExecutionResults, true
}

// HasExecutionResults returns a boolean if a field has been set.
func (o *SuperplaneBulkListStageEventsBody) HasExecutionResults() bool {
	if o != nil && !IsNil(o.ExecutionResults) {
		return true
	}

	return false
}

// SetExecutionResults gets a reference to the given []ExecutionResult and assigns it to the ExecutionResults field.
func (o *SuperplaneBulkListStageEventsBody) SetExecutionResults(v []ExecutionResult) {
	o.ExecutionResults = v
}

// GetLimitPerStage returns the LimitPerStage field value if set, zero value otherwise.
func (o *SuperplaneBulkListStageEventsBody) GetLimitPerStage() int32 {
	if o == nil || IsNil(o.LimitPerStage) {
		var ret int32
		return ret
	}
	return *o.LimitPerStage
}

// GetLimitPerStageOk returns a tuple with the LimitPerStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneBulkListStageEventsBody) GetLimitPerStageOk() (*int32, bool) {
	if o == nil || IsNil(o.LimitPerStage) {
		return nil, false
	}
	return o.LimitPerStage, true
}

// HasLimitPerStage returns a boolean if a field has been set.
func (o *SuperplaneBulkListStageEventsBody) HasLimitPerStage() bool {
	if o != nil && !IsNil(o.LimitPerStage) {
		return true
	}

	return false
}

// SetLimitPerStage gets a reference to the given int32 and assigns it to the LimitPerStage field.
func (o *SuperplaneBulkListStageEventsBody) SetLimitPerStage(v int32) {
	o.LimitPerStage = &v
}

// GetBefore returns the Before field value if set, zero value otherwise.
func (o *SuperplaneBulkListStageEventsBody) GetBefore() time.Time {
	if o == nil || IsNil(o.Before) {
		var ret time.Time
		return ret
	}
	return *o.Before
}

// GetBeforeOk returns a tuple with the Before field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneBulkListStageEventsBody) GetBeforeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Before) {
		return nil, false
	}
	return o.Before, true
}

// HasBefore returns a boolean if a field has been set.
func (o *SuperplaneBulkListStageEventsBody) HasBefore() bool {
	if o != nil && !IsNil(o.Before) {
		return true
	}

	return false
}

// SetBefore gets a reference to the given time.Time and assigns it to the Before field.
func (o *SuperplaneBulkListStageEventsBody) SetBefore(v time.Time) {
	o.Before = &v
}

func (o SuperplaneBulkListStageEventsBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneBulkListStageEventsBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Stages) {
		toSerialize["stages"] = o.Stages
	}
	if !IsNil(o.States) {
		toSerialize["states"] = o.States
	}
	if !IsNil(o.StateReasons) {
		toSerialize["stateReasons"] = o.StateReasons
	}
	if !IsNil(o.ExecutionStates) {
		toSerialize["executionStates"] = o.ExecutionStates
	}
	if !IsNil(o.ExecutionResults) {
		toSerialize["executionResults"] = o.ExecutionResults
	}
	if !IsNil(o.LimitPerStage) {
		toSerialize["limitPerStage"] = o.LimitPerStage
	}
	if !IsNil(o.Before) {
		toSerialize["before"] = o.Before
	}
	return toSerialize, nil
}

type NullableSuperplaneBulkListStageEventsBody struct {
	value *SuperplaneBulkListStageEventsBody
	isSet bool
}

func (v NullableSuperplaneBulkListStageEventsBody) Get() *SuperplaneBulkListStageEventsBody {
	return v.value
}

func (v *NullableSuperplaneBulkListStageEventsBody) Set(val *SuperplaneBulkListStageEventsBody) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneBulkListStageEventsBody) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneBulkListStageEventsBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneBulkListStageEventsBody(val *SuperplaneBulkListStageEventsBody) *NullableSuperplaneBulkListStageEventsBody {
	return &NullableSuperplaneBulkListStageEventsBody{value: val, isSet: true}
}

func (v NullableSuperplaneBulkListStageEventsBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneBulkListStageEventsBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


