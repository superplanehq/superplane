/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the EventSourceHourlySchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventSourceHourlySchedule{}

// EventSourceHourlySchedule struct for EventSourceHourlySchedule
type EventSourceHourlySchedule struct {
	Minute *int32 `json:"minute,omitempty"`
}

// NewEventSourceHourlySchedule instantiates a new EventSourceHourlySchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventSourceHourlySchedule() *EventSourceHourlySchedule {
	this := EventSourceHourlySchedule{}
	return &this
}

// NewEventSourceHourlyScheduleWithDefaults instantiates a new EventSourceHourlySchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventSourceHourlyScheduleWithDefaults() *EventSourceHourlySchedule {
	this := EventSourceHourlySchedule{}
	return &this
}

// GetMinute returns the Minute field value if set, zero value otherwise.
func (o *EventSourceHourlySchedule) GetMinute() int32 {
	if o == nil || IsNil(o.Minute) {
		var ret int32
		return ret
	}
	return *o.Minute
}

// GetMinuteOk returns a tuple with the Minute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventSourceHourlySchedule) GetMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.Minute) {
		return nil, false
	}
	return o.Minute, true
}

// HasMinute returns a boolean if a field has been set.
func (o *EventSourceHourlySchedule) HasMinute() bool {
	if o != nil && !IsNil(o.Minute) {
		return true
	}

	return false
}

// SetMinute gets a reference to the given int32 and assigns it to the Minute field.
func (o *EventSourceHourlySchedule) SetMinute(v int32) {
	o.Minute = &v
}

func (o EventSourceHourlySchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventSourceHourlySchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Minute) {
		toSerialize["minute"] = o.Minute
	}
	return toSerialize, nil
}

type NullableEventSourceHourlySchedule struct {
	value *EventSourceHourlySchedule
	isSet bool
}

func (v NullableEventSourceHourlySchedule) Get() *EventSourceHourlySchedule {
	return v.value
}

func (v *NullableEventSourceHourlySchedule) Set(val *EventSourceHourlySchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableEventSourceHourlySchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableEventSourceHourlySchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventSourceHourlySchedule(val *EventSourceHourlySchedule) *NullableEventSourceHourlySchedule {
	return &NullableEventSourceHourlySchedule{value: val, isSet: true}
}

func (v NullableEventSourceHourlySchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventSourceHourlySchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


