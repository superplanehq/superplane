/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneAcknowledgeAlertResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneAcknowledgeAlertResponse{}

// SuperplaneAcknowledgeAlertResponse struct for SuperplaneAcknowledgeAlertResponse
type SuperplaneAcknowledgeAlertResponse struct {
	Alert *SuperplaneAlert `json:"alert,omitempty"`
}

// NewSuperplaneAcknowledgeAlertResponse instantiates a new SuperplaneAcknowledgeAlertResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneAcknowledgeAlertResponse() *SuperplaneAcknowledgeAlertResponse {
	this := SuperplaneAcknowledgeAlertResponse{}
	return &this
}

// NewSuperplaneAcknowledgeAlertResponseWithDefaults instantiates a new SuperplaneAcknowledgeAlertResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneAcknowledgeAlertResponseWithDefaults() *SuperplaneAcknowledgeAlertResponse {
	this := SuperplaneAcknowledgeAlertResponse{}
	return &this
}

// GetAlert returns the Alert field value if set, zero value otherwise.
func (o *SuperplaneAcknowledgeAlertResponse) GetAlert() SuperplaneAlert {
	if o == nil || IsNil(o.Alert) {
		var ret SuperplaneAlert
		return ret
	}
	return *o.Alert
}

// GetAlertOk returns a tuple with the Alert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneAcknowledgeAlertResponse) GetAlertOk() (*SuperplaneAlert, bool) {
	if o == nil || IsNil(o.Alert) {
		return nil, false
	}
	return o.Alert, true
}

// HasAlert returns a boolean if a field has been set.
func (o *SuperplaneAcknowledgeAlertResponse) HasAlert() bool {
	if o != nil && !IsNil(o.Alert) {
		return true
	}

	return false
}

// SetAlert gets a reference to the given SuperplaneAlert and assigns it to the Alert field.
func (o *SuperplaneAcknowledgeAlertResponse) SetAlert(v SuperplaneAlert) {
	o.Alert = &v
}

func (o SuperplaneAcknowledgeAlertResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneAcknowledgeAlertResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alert) {
		toSerialize["alert"] = o.Alert
	}
	return toSerialize, nil
}

type NullableSuperplaneAcknowledgeAlertResponse struct {
	value *SuperplaneAcknowledgeAlertResponse
	isSet bool
}

func (v NullableSuperplaneAcknowledgeAlertResponse) Get() *SuperplaneAcknowledgeAlertResponse {
	return v.value
}

func (v *NullableSuperplaneAcknowledgeAlertResponse) Set(val *SuperplaneAcknowledgeAlertResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneAcknowledgeAlertResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneAcknowledgeAlertResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneAcknowledgeAlertResponse(val *SuperplaneAcknowledgeAlertResponse) *NullableSuperplaneAcknowledgeAlertResponse {
	return &NullableSuperplaneAcknowledgeAlertResponse{value: val, isSet: true}
}

func (v NullableSuperplaneAcknowledgeAlertResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneAcknowledgeAlertResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


