/*
Superplane Authorization API

API for the Superplane Authorization service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"time"
)

// checks if the SuperplaneConnectionGroupEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneConnectionGroupEvent{}

// SuperplaneConnectionGroupEvent struct for SuperplaneConnectionGroupEvent
type SuperplaneConnectionGroupEvent struct {
	Id *string `json:"id,omitempty"`
	SourceId *string `json:"sourceId,omitempty"`
	SourceType *SuperplaneConnectionType `json:"sourceType,omitempty"`
	SourceName *string `json:"sourceName,omitempty"`
	ReceivedAt *time.Time `json:"receivedAt,omitempty"`
}

// NewSuperplaneConnectionGroupEvent instantiates a new SuperplaneConnectionGroupEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneConnectionGroupEvent() *SuperplaneConnectionGroupEvent {
	this := SuperplaneConnectionGroupEvent{}
	var sourceType SuperplaneConnectionType = SUPERPLANECONNECTIONTYPE_TYPE_UNKNOWN
	this.SourceType = &sourceType
	return &this
}

// NewSuperplaneConnectionGroupEventWithDefaults instantiates a new SuperplaneConnectionGroupEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneConnectionGroupEventWithDefaults() *SuperplaneConnectionGroupEvent {
	this := SuperplaneConnectionGroupEvent{}
	var sourceType SuperplaneConnectionType = SUPERPLANECONNECTIONTYPE_TYPE_UNKNOWN
	this.SourceType = &sourceType
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SuperplaneConnectionGroupEvent) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneConnectionGroupEvent) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SuperplaneConnectionGroupEvent) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SuperplaneConnectionGroupEvent) SetId(v string) {
	o.Id = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *SuperplaneConnectionGroupEvent) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneConnectionGroupEvent) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *SuperplaneConnectionGroupEvent) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *SuperplaneConnectionGroupEvent) SetSourceId(v string) {
	o.SourceId = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *SuperplaneConnectionGroupEvent) GetSourceType() SuperplaneConnectionType {
	if o == nil || IsNil(o.SourceType) {
		var ret SuperplaneConnectionType
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneConnectionGroupEvent) GetSourceTypeOk() (*SuperplaneConnectionType, bool) {
	if o == nil || IsNil(o.SourceType) {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *SuperplaneConnectionGroupEvent) HasSourceType() bool {
	if o != nil && !IsNil(o.SourceType) {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given SuperplaneConnectionType and assigns it to the SourceType field.
func (o *SuperplaneConnectionGroupEvent) SetSourceType(v SuperplaneConnectionType) {
	o.SourceType = &v
}

// GetSourceName returns the SourceName field value if set, zero value otherwise.
func (o *SuperplaneConnectionGroupEvent) GetSourceName() string {
	if o == nil || IsNil(o.SourceName) {
		var ret string
		return ret
	}
	return *o.SourceName
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneConnectionGroupEvent) GetSourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceName) {
		return nil, false
	}
	return o.SourceName, true
}

// HasSourceName returns a boolean if a field has been set.
func (o *SuperplaneConnectionGroupEvent) HasSourceName() bool {
	if o != nil && !IsNil(o.SourceName) {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given string and assigns it to the SourceName field.
func (o *SuperplaneConnectionGroupEvent) SetSourceName(v string) {
	o.SourceName = &v
}

// GetReceivedAt returns the ReceivedAt field value if set, zero value otherwise.
func (o *SuperplaneConnectionGroupEvent) GetReceivedAt() time.Time {
	if o == nil || IsNil(o.ReceivedAt) {
		var ret time.Time
		return ret
	}
	return *o.ReceivedAt
}

// GetReceivedAtOk returns a tuple with the ReceivedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneConnectionGroupEvent) GetReceivedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ReceivedAt) {
		return nil, false
	}
	return o.ReceivedAt, true
}

// HasReceivedAt returns a boolean if a field has been set.
func (o *SuperplaneConnectionGroupEvent) HasReceivedAt() bool {
	if o != nil && !IsNil(o.ReceivedAt) {
		return true
	}

	return false
}

// SetReceivedAt gets a reference to the given time.Time and assigns it to the ReceivedAt field.
func (o *SuperplaneConnectionGroupEvent) SetReceivedAt(v time.Time) {
	o.ReceivedAt = &v
}

func (o SuperplaneConnectionGroupEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneConnectionGroupEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SourceId) {
		toSerialize["sourceId"] = o.SourceId
	}
	if !IsNil(o.SourceType) {
		toSerialize["sourceType"] = o.SourceType
	}
	if !IsNil(o.SourceName) {
		toSerialize["sourceName"] = o.SourceName
	}
	if !IsNil(o.ReceivedAt) {
		toSerialize["receivedAt"] = o.ReceivedAt
	}
	return toSerialize, nil
}

type NullableSuperplaneConnectionGroupEvent struct {
	value *SuperplaneConnectionGroupEvent
	isSet bool
}

func (v NullableSuperplaneConnectionGroupEvent) Get() *SuperplaneConnectionGroupEvent {
	return v.value
}

func (v *NullableSuperplaneConnectionGroupEvent) Set(val *SuperplaneConnectionGroupEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneConnectionGroupEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneConnectionGroupEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneConnectionGroupEvent(val *SuperplaneConnectionGroupEvent) *NullableSuperplaneConnectionGroupEvent {
	return &NullableSuperplaneConnectionGroupEvent{value: val, isSet: true}
}

func (v NullableSuperplaneConnectionGroupEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneConnectionGroupEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


