/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"fmt"
)

// AlertAlertOriginType the model 'AlertAlertOriginType'
type AlertAlertOriginType string

// List of AlertAlertOriginType
const (
	ALERTALERTORIGINTYPE_ALERT_ORIGIN_TYPE_UNKNOWN AlertAlertOriginType = "ALERT_ORIGIN_TYPE_UNKNOWN"
	ALERTALERTORIGINTYPE_ALERT_ORIGIN_TYPE_EVENT_REJECTION AlertAlertOriginType = "ALERT_ORIGIN_TYPE_EVENT_REJECTION"
)

// All allowed values of AlertAlertOriginType enum
var AllowedAlertAlertOriginTypeEnumValues = []AlertAlertOriginType{
	"ALERT_ORIGIN_TYPE_UNKNOWN",
	"ALERT_ORIGIN_TYPE_EVENT_REJECTION",
}

func (v *AlertAlertOriginType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AlertAlertOriginType(value)
	for _, existing := range AllowedAlertAlertOriginTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AlertAlertOriginType", value)
}

// NewAlertAlertOriginTypeFromValue returns a pointer to a valid AlertAlertOriginType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAlertAlertOriginTypeFromValue(v string) (*AlertAlertOriginType, error) {
	ev := AlertAlertOriginType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AlertAlertOriginType: valid values are %v", v, AllowedAlertAlertOriginTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AlertAlertOriginType) IsValid() bool {
	for _, existing := range AllowedAlertAlertOriginTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AlertAlertOriginType value
func (v AlertAlertOriginType) Ptr() *AlertAlertOriginType {
	return &v
}

type NullableAlertAlertOriginType struct {
	value *AlertAlertOriginType
	isSet bool
}

func (v NullableAlertAlertOriginType) Get() *AlertAlertOriginType {
	return v.value
}

func (v *NullableAlertAlertOriginType) Set(val *AlertAlertOriginType) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertAlertOriginType) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertAlertOriginType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertAlertOriginType(val *AlertAlertOriginType) *NullableAlertAlertOriginType {
	return &NullableAlertAlertOriginType{value: val, isSet: true}
}

func (v NullableAlertAlertOriginType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertAlertOriginType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

