/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneListAlertsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneListAlertsResponse{}

// SuperplaneListAlertsResponse struct for SuperplaneListAlertsResponse
type SuperplaneListAlertsResponse struct {
	Alerts []SuperplaneAlert `json:"alerts,omitempty"`
}

// NewSuperplaneListAlertsResponse instantiates a new SuperplaneListAlertsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneListAlertsResponse() *SuperplaneListAlertsResponse {
	this := SuperplaneListAlertsResponse{}
	return &this
}

// NewSuperplaneListAlertsResponseWithDefaults instantiates a new SuperplaneListAlertsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneListAlertsResponseWithDefaults() *SuperplaneListAlertsResponse {
	this := SuperplaneListAlertsResponse{}
	return &this
}

// GetAlerts returns the Alerts field value if set, zero value otherwise.
func (o *SuperplaneListAlertsResponse) GetAlerts() []SuperplaneAlert {
	if o == nil || IsNil(o.Alerts) {
		var ret []SuperplaneAlert
		return ret
	}
	return o.Alerts
}

// GetAlertsOk returns a tuple with the Alerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneListAlertsResponse) GetAlertsOk() ([]SuperplaneAlert, bool) {
	if o == nil || IsNil(o.Alerts) {
		return nil, false
	}
	return o.Alerts, true
}

// HasAlerts returns a boolean if a field has been set.
func (o *SuperplaneListAlertsResponse) HasAlerts() bool {
	if o != nil && !IsNil(o.Alerts) {
		return true
	}

	return false
}

// SetAlerts gets a reference to the given []SuperplaneAlert and assigns it to the Alerts field.
func (o *SuperplaneListAlertsResponse) SetAlerts(v []SuperplaneAlert) {
	o.Alerts = v
}

func (o SuperplaneListAlertsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneListAlertsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alerts) {
		toSerialize["alerts"] = o.Alerts
	}
	return toSerialize, nil
}

type NullableSuperplaneListAlertsResponse struct {
	value *SuperplaneListAlertsResponse
	isSet bool
}

func (v NullableSuperplaneListAlertsResponse) Get() *SuperplaneListAlertsResponse {
	return v.value
}

func (v *NullableSuperplaneListAlertsResponse) Set(val *SuperplaneListAlertsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneListAlertsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneListAlertsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneListAlertsResponse(val *SuperplaneListAlertsResponse) *NullableSuperplaneListAlertsResponse {
	return &NullableSuperplaneListAlertsResponse{value: val, isSet: true}
}

func (v NullableSuperplaneListAlertsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneListAlertsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


