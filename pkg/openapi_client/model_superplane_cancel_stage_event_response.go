/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneCancelStageEventResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneCancelStageEventResponse{}

// SuperplaneCancelStageEventResponse struct for SuperplaneCancelStageEventResponse
type SuperplaneCancelStageEventResponse struct {
	Event *SuperplaneStageEvent `json:"event,omitempty"`
}

// NewSuperplaneCancelStageEventResponse instantiates a new SuperplaneCancelStageEventResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneCancelStageEventResponse() *SuperplaneCancelStageEventResponse {
	this := SuperplaneCancelStageEventResponse{}
	return &this
}

// NewSuperplaneCancelStageEventResponseWithDefaults instantiates a new SuperplaneCancelStageEventResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneCancelStageEventResponseWithDefaults() *SuperplaneCancelStageEventResponse {
	this := SuperplaneCancelStageEventResponse{}
	return &this
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *SuperplaneCancelStageEventResponse) GetEvent() SuperplaneStageEvent {
	if o == nil || IsNil(o.Event) {
		var ret SuperplaneStageEvent
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneCancelStageEventResponse) GetEventOk() (*SuperplaneStageEvent, bool) {
	if o == nil || IsNil(o.Event) {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *SuperplaneCancelStageEventResponse) HasEvent() bool {
	if o != nil && !IsNil(o.Event) {
		return true
	}

	return false
}

// SetEvent gets a reference to the given SuperplaneStageEvent and assigns it to the Event field.
func (o *SuperplaneCancelStageEventResponse) SetEvent(v SuperplaneStageEvent) {
	o.Event = &v
}

func (o SuperplaneCancelStageEventResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneCancelStageEventResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Event) {
		toSerialize["event"] = o.Event
	}
	return toSerialize, nil
}

type NullableSuperplaneCancelStageEventResponse struct {
	value *SuperplaneCancelStageEventResponse
	isSet bool
}

func (v NullableSuperplaneCancelStageEventResponse) Get() *SuperplaneCancelStageEventResponse {
	return v.value
}

func (v *NullableSuperplaneCancelStageEventResponse) Set(val *SuperplaneCancelStageEventResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneCancelStageEventResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneCancelStageEventResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneCancelStageEventResponse(val *SuperplaneCancelStageEventResponse) *NullableSuperplaneCancelStageEventResponse {
	return &NullableSuperplaneCancelStageEventResponse{value: val, isSet: true}
}

func (v NullableSuperplaneCancelStageEventResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneCancelStageEventResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


