/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"time"
)

// checks if the SuperplaneStage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneStage{}

// SuperplaneStage struct for SuperplaneStage
type SuperplaneStage struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	CanvasId *string `json:"canvasId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Connections []SuperplaneConnection `json:"connections,omitempty"`
	Conditions []SuperplaneCondition `json:"conditions,omitempty"`
	RunTemplate *SuperplaneRunTemplate `json:"runTemplate,omitempty"`
}

// NewSuperplaneStage instantiates a new SuperplaneStage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneStage() *SuperplaneStage {
	this := SuperplaneStage{}
	return &this
}

// NewSuperplaneStageWithDefaults instantiates a new SuperplaneStage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneStageWithDefaults() *SuperplaneStage {
	this := SuperplaneStage{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SuperplaneStage) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStage) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SuperplaneStage) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SuperplaneStage) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SuperplaneStage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SuperplaneStage) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SuperplaneStage) SetName(v string) {
	o.Name = &v
}

// GetCanvasId returns the CanvasId field value if set, zero value otherwise.
func (o *SuperplaneStage) GetCanvasId() string {
	if o == nil || IsNil(o.CanvasId) {
		var ret string
		return ret
	}
	return *o.CanvasId
}

// GetCanvasIdOk returns a tuple with the CanvasId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStage) GetCanvasIdOk() (*string, bool) {
	if o == nil || IsNil(o.CanvasId) {
		return nil, false
	}
	return o.CanvasId, true
}

// HasCanvasId returns a boolean if a field has been set.
func (o *SuperplaneStage) HasCanvasId() bool {
	if o != nil && !IsNil(o.CanvasId) {
		return true
	}

	return false
}

// SetCanvasId gets a reference to the given string and assigns it to the CanvasId field.
func (o *SuperplaneStage) SetCanvasId(v string) {
	o.CanvasId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SuperplaneStage) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStage) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SuperplaneStage) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *SuperplaneStage) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetConnections returns the Connections field value if set, zero value otherwise.
func (o *SuperplaneStage) GetConnections() []SuperplaneConnection {
	if o == nil || IsNil(o.Connections) {
		var ret []SuperplaneConnection
		return ret
	}
	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStage) GetConnectionsOk() ([]SuperplaneConnection, bool) {
	if o == nil || IsNil(o.Connections) {
		return nil, false
	}
	return o.Connections, true
}

// HasConnections returns a boolean if a field has been set.
func (o *SuperplaneStage) HasConnections() bool {
	if o != nil && !IsNil(o.Connections) {
		return true
	}

	return false
}

// SetConnections gets a reference to the given []SuperplaneConnection and assigns it to the Connections field.
func (o *SuperplaneStage) SetConnections(v []SuperplaneConnection) {
	o.Connections = v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *SuperplaneStage) GetConditions() []SuperplaneCondition {
	if o == nil || IsNil(o.Conditions) {
		var ret []SuperplaneCondition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStage) GetConditionsOk() ([]SuperplaneCondition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *SuperplaneStage) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []SuperplaneCondition and assigns it to the Conditions field.
func (o *SuperplaneStage) SetConditions(v []SuperplaneCondition) {
	o.Conditions = v
}

// GetRunTemplate returns the RunTemplate field value if set, zero value otherwise.
func (o *SuperplaneStage) GetRunTemplate() SuperplaneRunTemplate {
	if o == nil || IsNil(o.RunTemplate) {
		var ret SuperplaneRunTemplate
		return ret
	}
	return *o.RunTemplate
}

// GetRunTemplateOk returns a tuple with the RunTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStage) GetRunTemplateOk() (*SuperplaneRunTemplate, bool) {
	if o == nil || IsNil(o.RunTemplate) {
		return nil, false
	}
	return o.RunTemplate, true
}

// HasRunTemplate returns a boolean if a field has been set.
func (o *SuperplaneStage) HasRunTemplate() bool {
	if o != nil && !IsNil(o.RunTemplate) {
		return true
	}

	return false
}

// SetRunTemplate gets a reference to the given SuperplaneRunTemplate and assigns it to the RunTemplate field.
func (o *SuperplaneStage) SetRunTemplate(v SuperplaneRunTemplate) {
	o.RunTemplate = &v
}

func (o SuperplaneStage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneStage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CanvasId) {
		toSerialize["canvasId"] = o.CanvasId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Connections) {
		toSerialize["connections"] = o.Connections
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.RunTemplate) {
		toSerialize["runTemplate"] = o.RunTemplate
	}
	return toSerialize, nil
}

type NullableSuperplaneStage struct {
	value *SuperplaneStage
	isSet bool
}

func (v NullableSuperplaneStage) Get() *SuperplaneStage {
	return v.value
}

func (v *NullableSuperplaneStage) Set(val *SuperplaneStage) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneStage) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneStage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneStage(val *SuperplaneStage) *NullableSuperplaneStage {
	return &NullableSuperplaneStage{value: val, isSet: true}
}

func (v NullableSuperplaneStage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneStage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


