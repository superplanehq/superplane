/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneStageEventItemResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneStageEventItemResult{}

// SuperplaneStageEventItemResult struct for SuperplaneStageEventItemResult
type SuperplaneStageEventItemResult struct {
	StageId *string `json:"stageId,omitempty"`
	Events []SuperplaneStageEvent `json:"events,omitempty"`
}

// NewSuperplaneStageEventItemResult instantiates a new SuperplaneStageEventItemResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneStageEventItemResult() *SuperplaneStageEventItemResult {
	this := SuperplaneStageEventItemResult{}
	return &this
}

// NewSuperplaneStageEventItemResultWithDefaults instantiates a new SuperplaneStageEventItemResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneStageEventItemResultWithDefaults() *SuperplaneStageEventItemResult {
	this := SuperplaneStageEventItemResult{}
	return &this
}

// GetStageId returns the StageId field value if set, zero value otherwise.
func (o *SuperplaneStageEventItemResult) GetStageId() string {
	if o == nil || IsNil(o.StageId) {
		var ret string
		return ret
	}
	return *o.StageId
}

// GetStageIdOk returns a tuple with the StageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStageEventItemResult) GetStageIdOk() (*string, bool) {
	if o == nil || IsNil(o.StageId) {
		return nil, false
	}
	return o.StageId, true
}

// HasStageId returns a boolean if a field has been set.
func (o *SuperplaneStageEventItemResult) HasStageId() bool {
	if o != nil && !IsNil(o.StageId) {
		return true
	}

	return false
}

// SetStageId gets a reference to the given string and assigns it to the StageId field.
func (o *SuperplaneStageEventItemResult) SetStageId(v string) {
	o.StageId = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *SuperplaneStageEventItemResult) GetEvents() []SuperplaneStageEvent {
	if o == nil || IsNil(o.Events) {
		var ret []SuperplaneStageEvent
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStageEventItemResult) GetEventsOk() ([]SuperplaneStageEvent, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *SuperplaneStageEventItemResult) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []SuperplaneStageEvent and assigns it to the Events field.
func (o *SuperplaneStageEventItemResult) SetEvents(v []SuperplaneStageEvent) {
	o.Events = v
}

func (o SuperplaneStageEventItemResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneStageEventItemResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StageId) {
		toSerialize["stageId"] = o.StageId
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	return toSerialize, nil
}

type NullableSuperplaneStageEventItemResult struct {
	value *SuperplaneStageEventItemResult
	isSet bool
}

func (v NullableSuperplaneStageEventItemResult) Get() *SuperplaneStageEventItemResult {
	return v.value
}

func (v *NullableSuperplaneStageEventItemResult) Set(val *SuperplaneStageEventItemResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneStageEventItemResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneStageEventItemResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneStageEventItemResult(val *SuperplaneStageEventItemResult) *NullableSuperplaneStageEventItemResult {
	return &NullableSuperplaneStageEventItemResult{value: val, isSet: true}
}

func (v NullableSuperplaneStageEventItemResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneStageEventItemResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


