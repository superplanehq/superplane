/*
Superplane Authorization API

API for the Superplane Authorization service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the AuthorizationGetOrganizationGroupUsersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationGetOrganizationGroupUsersResponse{}

// AuthorizationGetOrganizationGroupUsersResponse struct for AuthorizationGetOrganizationGroupUsersResponse
type AuthorizationGetOrganizationGroupUsersResponse struct {
	UserIds []string `json:"userIds,omitempty"`
	Group *AuthorizationGroup `json:"group,omitempty"`
}

// NewAuthorizationGetOrganizationGroupUsersResponse instantiates a new AuthorizationGetOrganizationGroupUsersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationGetOrganizationGroupUsersResponse() *AuthorizationGetOrganizationGroupUsersResponse {
	this := AuthorizationGetOrganizationGroupUsersResponse{}
	return &this
}

// NewAuthorizationGetOrganizationGroupUsersResponseWithDefaults instantiates a new AuthorizationGetOrganizationGroupUsersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationGetOrganizationGroupUsersResponseWithDefaults() *AuthorizationGetOrganizationGroupUsersResponse {
	this := AuthorizationGetOrganizationGroupUsersResponse{}
	return &this
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *AuthorizationGetOrganizationGroupUsersResponse) GetUserIds() []string {
	if o == nil || IsNil(o.UserIds) {
		var ret []string
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationGetOrganizationGroupUsersResponse) GetUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *AuthorizationGetOrganizationGroupUsersResponse) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *AuthorizationGetOrganizationGroupUsersResponse) SetUserIds(v []string) {
	o.UserIds = v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *AuthorizationGetOrganizationGroupUsersResponse) GetGroup() AuthorizationGroup {
	if o == nil || IsNil(o.Group) {
		var ret AuthorizationGroup
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationGetOrganizationGroupUsersResponse) GetGroupOk() (*AuthorizationGroup, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *AuthorizationGetOrganizationGroupUsersResponse) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given AuthorizationGroup and assigns it to the Group field.
func (o *AuthorizationGetOrganizationGroupUsersResponse) SetGroup(v AuthorizationGroup) {
	o.Group = &v
}

func (o AuthorizationGetOrganizationGroupUsersResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationGetOrganizationGroupUsersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserIds) {
		toSerialize["userIds"] = o.UserIds
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	return toSerialize, nil
}

type NullableAuthorizationGetOrganizationGroupUsersResponse struct {
	value *AuthorizationGetOrganizationGroupUsersResponse
	isSet bool
}

func (v NullableAuthorizationGetOrganizationGroupUsersResponse) Get() *AuthorizationGetOrganizationGroupUsersResponse {
	return v.value
}

func (v *NullableAuthorizationGetOrganizationGroupUsersResponse) Set(val *AuthorizationGetOrganizationGroupUsersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationGetOrganizationGroupUsersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationGetOrganizationGroupUsersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationGetOrganizationGroupUsersResponse(val *AuthorizationGetOrganizationGroupUsersResponse) *NullableAuthorizationGetOrganizationGroupUsersResponse {
	return &NullableAuthorizationGetOrganizationGroupUsersResponse{value: val, isSet: true}
}

func (v NullableAuthorizationGetOrganizationGroupUsersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationGetOrganizationGroupUsersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


