/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"time"
)

// checks if the WorkflowsWorkflowNodeExecution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowsWorkflowNodeExecution{}

// WorkflowsWorkflowNodeExecution struct for WorkflowsWorkflowNodeExecution
type WorkflowsWorkflowNodeExecution struct {
	Id *string `json:"id,omitempty"`
	WorkflowId *string `json:"workflowId,omitempty"`
	NodeId *string `json:"nodeId,omitempty"`
	ParentExecutionId *string `json:"parentExecutionId,omitempty"`
	BlueprintId *string `json:"blueprintId,omitempty"`
	State *WorkflowsWorkflowNodeExecutionState `json:"state,omitempty"`
	Result *WorkflowsWorkflowNodeExecutionResult `json:"result,omitempty"`
	ResultReason *WorkflowsWorkflowNodeExecutionResultReason `json:"resultReason,omitempty"`
	ResultMessage *string `json:"resultMessage,omitempty"`
	Input map[string]interface{} `json:"input,omitempty"`
	Outputs map[string]interface{} `json:"outputs,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	Configuration map[string]interface{} `json:"configuration,omitempty"`
	PreviousExecutionId *string `json:"previousExecutionId,omitempty"`
	PreviousOutputBranch *string `json:"previousOutputBranch,omitempty"`
	PreviousOutputIndex *int32 `json:"previousOutputIndex,omitempty"`
}

// NewWorkflowsWorkflowNodeExecution instantiates a new WorkflowsWorkflowNodeExecution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowsWorkflowNodeExecution() *WorkflowsWorkflowNodeExecution {
	this := WorkflowsWorkflowNodeExecution{}
	var state WorkflowsWorkflowNodeExecutionState = WORKFLOWSWORKFLOWNODEEXECUTIONSTATE_STATE_UNKNOWN
	this.State = &state
	var result WorkflowsWorkflowNodeExecutionResult = WORKFLOWSWORKFLOWNODEEXECUTIONRESULT_RESULT_UNKNOWN
	this.Result = &result
	var resultReason WorkflowsWorkflowNodeExecutionResultReason = WORKFLOWSWORKFLOWNODEEXECUTIONRESULTREASON_RESULT_REASON_OK
	this.ResultReason = &resultReason
	return &this
}

// NewWorkflowsWorkflowNodeExecutionWithDefaults instantiates a new WorkflowsWorkflowNodeExecution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowsWorkflowNodeExecutionWithDefaults() *WorkflowsWorkflowNodeExecution {
	this := WorkflowsWorkflowNodeExecution{}
	var state WorkflowsWorkflowNodeExecutionState = WORKFLOWSWORKFLOWNODEEXECUTIONSTATE_STATE_UNKNOWN
	this.State = &state
	var result WorkflowsWorkflowNodeExecutionResult = WORKFLOWSWORKFLOWNODEEXECUTIONRESULT_RESULT_UNKNOWN
	this.Result = &result
	var resultReason WorkflowsWorkflowNodeExecutionResultReason = WORKFLOWSWORKFLOWNODEEXECUTIONRESULTREASON_RESULT_REASON_OK
	this.ResultReason = &resultReason
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkflowsWorkflowNodeExecution) SetId(v string) {
	o.Id = &v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetWorkflowId() string {
	if o == nil || IsNil(o.WorkflowId) {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetWorkflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowId) {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasWorkflowId() bool {
	if o != nil && !IsNil(o.WorkflowId) {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *WorkflowsWorkflowNodeExecution) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *WorkflowsWorkflowNodeExecution) SetNodeId(v string) {
	o.NodeId = &v
}

// GetParentExecutionId returns the ParentExecutionId field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetParentExecutionId() string {
	if o == nil || IsNil(o.ParentExecutionId) {
		var ret string
		return ret
	}
	return *o.ParentExecutionId
}

// GetParentExecutionIdOk returns a tuple with the ParentExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetParentExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentExecutionId) {
		return nil, false
	}
	return o.ParentExecutionId, true
}

// HasParentExecutionId returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasParentExecutionId() bool {
	if o != nil && !IsNil(o.ParentExecutionId) {
		return true
	}

	return false
}

// SetParentExecutionId gets a reference to the given string and assigns it to the ParentExecutionId field.
func (o *WorkflowsWorkflowNodeExecution) SetParentExecutionId(v string) {
	o.ParentExecutionId = &v
}

// GetBlueprintId returns the BlueprintId field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetBlueprintId() string {
	if o == nil || IsNil(o.BlueprintId) {
		var ret string
		return ret
	}
	return *o.BlueprintId
}

// GetBlueprintIdOk returns a tuple with the BlueprintId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetBlueprintIdOk() (*string, bool) {
	if o == nil || IsNil(o.BlueprintId) {
		return nil, false
	}
	return o.BlueprintId, true
}

// HasBlueprintId returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasBlueprintId() bool {
	if o != nil && !IsNil(o.BlueprintId) {
		return true
	}

	return false
}

// SetBlueprintId gets a reference to the given string and assigns it to the BlueprintId field.
func (o *WorkflowsWorkflowNodeExecution) SetBlueprintId(v string) {
	o.BlueprintId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetState() WorkflowsWorkflowNodeExecutionState {
	if o == nil || IsNil(o.State) {
		var ret WorkflowsWorkflowNodeExecutionState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetStateOk() (*WorkflowsWorkflowNodeExecutionState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given WorkflowsWorkflowNodeExecutionState and assigns it to the State field.
func (o *WorkflowsWorkflowNodeExecution) SetState(v WorkflowsWorkflowNodeExecutionState) {
	o.State = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetResult() WorkflowsWorkflowNodeExecutionResult {
	if o == nil || IsNil(o.Result) {
		var ret WorkflowsWorkflowNodeExecutionResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetResultOk() (*WorkflowsWorkflowNodeExecutionResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given WorkflowsWorkflowNodeExecutionResult and assigns it to the Result field.
func (o *WorkflowsWorkflowNodeExecution) SetResult(v WorkflowsWorkflowNodeExecutionResult) {
	o.Result = &v
}

// GetResultReason returns the ResultReason field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetResultReason() WorkflowsWorkflowNodeExecutionResultReason {
	if o == nil || IsNil(o.ResultReason) {
		var ret WorkflowsWorkflowNodeExecutionResultReason
		return ret
	}
	return *o.ResultReason
}

// GetResultReasonOk returns a tuple with the ResultReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetResultReasonOk() (*WorkflowsWorkflowNodeExecutionResultReason, bool) {
	if o == nil || IsNil(o.ResultReason) {
		return nil, false
	}
	return o.ResultReason, true
}

// HasResultReason returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasResultReason() bool {
	if o != nil && !IsNil(o.ResultReason) {
		return true
	}

	return false
}

// SetResultReason gets a reference to the given WorkflowsWorkflowNodeExecutionResultReason and assigns it to the ResultReason field.
func (o *WorkflowsWorkflowNodeExecution) SetResultReason(v WorkflowsWorkflowNodeExecutionResultReason) {
	o.ResultReason = &v
}

// GetResultMessage returns the ResultMessage field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetResultMessage() string {
	if o == nil || IsNil(o.ResultMessage) {
		var ret string
		return ret
	}
	return *o.ResultMessage
}

// GetResultMessageOk returns a tuple with the ResultMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetResultMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ResultMessage) {
		return nil, false
	}
	return o.ResultMessage, true
}

// HasResultMessage returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasResultMessage() bool {
	if o != nil && !IsNil(o.ResultMessage) {
		return true
	}

	return false
}

// SetResultMessage gets a reference to the given string and assigns it to the ResultMessage field.
func (o *WorkflowsWorkflowNodeExecution) SetResultMessage(v string) {
	o.ResultMessage = &v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetInput() map[string]interface{} {
	if o == nil || IsNil(o.Input) {
		var ret map[string]interface{}
		return ret
	}
	return o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetInputOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Input) {
		return map[string]interface{}{}, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasInput() bool {
	if o != nil && !IsNil(o.Input) {
		return true
	}

	return false
}

// SetInput gets a reference to the given map[string]interface{} and assigns it to the Input field.
func (o *WorkflowsWorkflowNodeExecution) SetInput(v map[string]interface{}) {
	o.Input = v
}

// GetOutputs returns the Outputs field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetOutputs() map[string]interface{} {
	if o == nil || IsNil(o.Outputs) {
		var ret map[string]interface{}
		return ret
	}
	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetOutputsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Outputs) {
		return map[string]interface{}{}, false
	}
	return o.Outputs, true
}

// HasOutputs returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasOutputs() bool {
	if o != nil && !IsNil(o.Outputs) {
		return true
	}

	return false
}

// SetOutputs gets a reference to the given map[string]interface{} and assigns it to the Outputs field.
func (o *WorkflowsWorkflowNodeExecution) SetOutputs(v map[string]interface{}) {
	o.Outputs = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *WorkflowsWorkflowNodeExecution) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *WorkflowsWorkflowNodeExecution) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *WorkflowsWorkflowNodeExecution) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetConfiguration() map[string]interface{} {
	if o == nil || IsNil(o.Configuration) {
		var ret map[string]interface{}
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetConfigurationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Configuration) {
		return map[string]interface{}{}, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given map[string]interface{} and assigns it to the Configuration field.
func (o *WorkflowsWorkflowNodeExecution) SetConfiguration(v map[string]interface{}) {
	o.Configuration = v
}

// GetPreviousExecutionId returns the PreviousExecutionId field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetPreviousExecutionId() string {
	if o == nil || IsNil(o.PreviousExecutionId) {
		var ret string
		return ret
	}
	return *o.PreviousExecutionId
}

// GetPreviousExecutionIdOk returns a tuple with the PreviousExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetPreviousExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PreviousExecutionId) {
		return nil, false
	}
	return o.PreviousExecutionId, true
}

// HasPreviousExecutionId returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasPreviousExecutionId() bool {
	if o != nil && !IsNil(o.PreviousExecutionId) {
		return true
	}

	return false
}

// SetPreviousExecutionId gets a reference to the given string and assigns it to the PreviousExecutionId field.
func (o *WorkflowsWorkflowNodeExecution) SetPreviousExecutionId(v string) {
	o.PreviousExecutionId = &v
}

// GetPreviousOutputBranch returns the PreviousOutputBranch field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetPreviousOutputBranch() string {
	if o == nil || IsNil(o.PreviousOutputBranch) {
		var ret string
		return ret
	}
	return *o.PreviousOutputBranch
}

// GetPreviousOutputBranchOk returns a tuple with the PreviousOutputBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetPreviousOutputBranchOk() (*string, bool) {
	if o == nil || IsNil(o.PreviousOutputBranch) {
		return nil, false
	}
	return o.PreviousOutputBranch, true
}

// HasPreviousOutputBranch returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasPreviousOutputBranch() bool {
	if o != nil && !IsNil(o.PreviousOutputBranch) {
		return true
	}

	return false
}

// SetPreviousOutputBranch gets a reference to the given string and assigns it to the PreviousOutputBranch field.
func (o *WorkflowsWorkflowNodeExecution) SetPreviousOutputBranch(v string) {
	o.PreviousOutputBranch = &v
}

// GetPreviousOutputIndex returns the PreviousOutputIndex field value if set, zero value otherwise.
func (o *WorkflowsWorkflowNodeExecution) GetPreviousOutputIndex() int32 {
	if o == nil || IsNil(o.PreviousOutputIndex) {
		var ret int32
		return ret
	}
	return *o.PreviousOutputIndex
}

// GetPreviousOutputIndexOk returns a tuple with the PreviousOutputIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowsWorkflowNodeExecution) GetPreviousOutputIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.PreviousOutputIndex) {
		return nil, false
	}
	return o.PreviousOutputIndex, true
}

// HasPreviousOutputIndex returns a boolean if a field has been set.
func (o *WorkflowsWorkflowNodeExecution) HasPreviousOutputIndex() bool {
	if o != nil && !IsNil(o.PreviousOutputIndex) {
		return true
	}

	return false
}

// SetPreviousOutputIndex gets a reference to the given int32 and assigns it to the PreviousOutputIndex field.
func (o *WorkflowsWorkflowNodeExecution) SetPreviousOutputIndex(v int32) {
	o.PreviousOutputIndex = &v
}

func (o WorkflowsWorkflowNodeExecution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowsWorkflowNodeExecution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.WorkflowId) {
		toSerialize["workflowId"] = o.WorkflowId
	}
	if !IsNil(o.NodeId) {
		toSerialize["nodeId"] = o.NodeId
	}
	if !IsNil(o.ParentExecutionId) {
		toSerialize["parentExecutionId"] = o.ParentExecutionId
	}
	if !IsNil(o.BlueprintId) {
		toSerialize["blueprintId"] = o.BlueprintId
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.ResultReason) {
		toSerialize["resultReason"] = o.ResultReason
	}
	if !IsNil(o.ResultMessage) {
		toSerialize["resultMessage"] = o.ResultMessage
	}
	if !IsNil(o.Input) {
		toSerialize["input"] = o.Input
	}
	if !IsNil(o.Outputs) {
		toSerialize["outputs"] = o.Outputs
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !IsNil(o.PreviousExecutionId) {
		toSerialize["previousExecutionId"] = o.PreviousExecutionId
	}
	if !IsNil(o.PreviousOutputBranch) {
		toSerialize["previousOutputBranch"] = o.PreviousOutputBranch
	}
	if !IsNil(o.PreviousOutputIndex) {
		toSerialize["previousOutputIndex"] = o.PreviousOutputIndex
	}
	return toSerialize, nil
}

type NullableWorkflowsWorkflowNodeExecution struct {
	value *WorkflowsWorkflowNodeExecution
	isSet bool
}

func (v NullableWorkflowsWorkflowNodeExecution) Get() *WorkflowsWorkflowNodeExecution {
	return v.value
}

func (v *NullableWorkflowsWorkflowNodeExecution) Set(val *WorkflowsWorkflowNodeExecution) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowsWorkflowNodeExecution) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowsWorkflowNodeExecution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowsWorkflowNodeExecution(val *WorkflowsWorkflowNodeExecution) *NullableWorkflowsWorkflowNodeExecution {
	return &NullableWorkflowsWorkflowNodeExecution{value: val, isSet: true}
}

func (v NullableWorkflowsWorkflowNodeExecution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowsWorkflowNodeExecution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


