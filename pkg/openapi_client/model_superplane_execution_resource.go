/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneExecutionResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneExecutionResource{}

// SuperplaneExecutionResource struct for SuperplaneExecutionResource
type SuperplaneExecutionResource struct {
	Id *string `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	State *string `json:"state,omitempty"`
	Result *string `json:"result,omitempty"`
}

// NewSuperplaneExecutionResource instantiates a new SuperplaneExecutionResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneExecutionResource() *SuperplaneExecutionResource {
	this := SuperplaneExecutionResource{}
	return &this
}

// NewSuperplaneExecutionResourceWithDefaults instantiates a new SuperplaneExecutionResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneExecutionResourceWithDefaults() *SuperplaneExecutionResource {
	this := SuperplaneExecutionResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SuperplaneExecutionResource) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneExecutionResource) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SuperplaneExecutionResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SuperplaneExecutionResource) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SuperplaneExecutionResource) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneExecutionResource) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SuperplaneExecutionResource) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SuperplaneExecutionResource) SetType(v string) {
	o.Type = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SuperplaneExecutionResource) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneExecutionResource) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SuperplaneExecutionResource) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *SuperplaneExecutionResource) SetState(v string) {
	o.State = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *SuperplaneExecutionResource) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneExecutionResource) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *SuperplaneExecutionResource) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *SuperplaneExecutionResource) SetResult(v string) {
	o.Result = &v
}

func (o SuperplaneExecutionResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneExecutionResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableSuperplaneExecutionResource struct {
	value *SuperplaneExecutionResource
	isSet bool
}

func (v NullableSuperplaneExecutionResource) Get() *SuperplaneExecutionResource {
	return v.value
}

func (v *NullableSuperplaneExecutionResource) Set(val *SuperplaneExecutionResource) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneExecutionResource) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneExecutionResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneExecutionResource(val *SuperplaneExecutionResource) *NullableSuperplaneExecutionResource {
	return &NullableSuperplaneExecutionResource{value: val, isSet: true}
}

func (v NullableSuperplaneExecutionResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneExecutionResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


