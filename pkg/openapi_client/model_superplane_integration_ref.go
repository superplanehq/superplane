/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneIntegrationRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneIntegrationRef{}

// SuperplaneIntegrationRef struct for SuperplaneIntegrationRef
type SuperplaneIntegrationRef struct {
	DomainType *AuthorizationDomainType `json:"domainType,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewSuperplaneIntegrationRef instantiates a new SuperplaneIntegrationRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneIntegrationRef() *SuperplaneIntegrationRef {
	this := SuperplaneIntegrationRef{}
	var domainType AuthorizationDomainType = AUTHORIZATIONDOMAINTYPE_DOMAIN_TYPE_UNSPECIFIED
	this.DomainType = &domainType
	return &this
}

// NewSuperplaneIntegrationRefWithDefaults instantiates a new SuperplaneIntegrationRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneIntegrationRefWithDefaults() *SuperplaneIntegrationRef {
	this := SuperplaneIntegrationRef{}
	var domainType AuthorizationDomainType = AUTHORIZATIONDOMAINTYPE_DOMAIN_TYPE_UNSPECIFIED
	this.DomainType = &domainType
	return &this
}

// GetDomainType returns the DomainType field value if set, zero value otherwise.
func (o *SuperplaneIntegrationRef) GetDomainType() AuthorizationDomainType {
	if o == nil || IsNil(o.DomainType) {
		var ret AuthorizationDomainType
		return ret
	}
	return *o.DomainType
}

// GetDomainTypeOk returns a tuple with the DomainType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneIntegrationRef) GetDomainTypeOk() (*AuthorizationDomainType, bool) {
	if o == nil || IsNil(o.DomainType) {
		return nil, false
	}
	return o.DomainType, true
}

// HasDomainType returns a boolean if a field has been set.
func (o *SuperplaneIntegrationRef) HasDomainType() bool {
	if o != nil && !IsNil(o.DomainType) {
		return true
	}

	return false
}

// SetDomainType gets a reference to the given AuthorizationDomainType and assigns it to the DomainType field.
func (o *SuperplaneIntegrationRef) SetDomainType(v AuthorizationDomainType) {
	o.DomainType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SuperplaneIntegrationRef) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneIntegrationRef) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SuperplaneIntegrationRef) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SuperplaneIntegrationRef) SetName(v string) {
	o.Name = &v
}

func (o SuperplaneIntegrationRef) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneIntegrationRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DomainType) {
		toSerialize["domainType"] = o.DomainType
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableSuperplaneIntegrationRef struct {
	value *SuperplaneIntegrationRef
	isSet bool
}

func (v NullableSuperplaneIntegrationRef) Get() *SuperplaneIntegrationRef {
	return v.value
}

func (v *NullableSuperplaneIntegrationRef) Set(val *SuperplaneIntegrationRef) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneIntegrationRef) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneIntegrationRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneIntegrationRef(val *SuperplaneIntegrationRef) *NullableSuperplaneIntegrationRef {
	return &NullableSuperplaneIntegrationRef{value: val, isSet: true}
}

func (v NullableSuperplaneIntegrationRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneIntegrationRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


