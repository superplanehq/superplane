/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"time"
)

// checks if the SuperplaneWorkflowQueueItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneWorkflowQueueItem{}

// SuperplaneWorkflowQueueItem struct for SuperplaneWorkflowQueueItem
type SuperplaneWorkflowQueueItem struct {
	EventId *string `json:"eventId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Event *SuperplaneWorkflowEvent `json:"event,omitempty"`
}

// NewSuperplaneWorkflowQueueItem instantiates a new SuperplaneWorkflowQueueItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneWorkflowQueueItem() *SuperplaneWorkflowQueueItem {
	this := SuperplaneWorkflowQueueItem{}
	return &this
}

// NewSuperplaneWorkflowQueueItemWithDefaults instantiates a new SuperplaneWorkflowQueueItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneWorkflowQueueItemWithDefaults() *SuperplaneWorkflowQueueItem {
	this := SuperplaneWorkflowQueueItem{}
	return &this
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *SuperplaneWorkflowQueueItem) GetEventId() string {
	if o == nil || IsNil(o.EventId) {
		var ret string
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneWorkflowQueueItem) GetEventIdOk() (*string, bool) {
	if o == nil || IsNil(o.EventId) {
		return nil, false
	}
	return o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *SuperplaneWorkflowQueueItem) HasEventId() bool {
	if o != nil && !IsNil(o.EventId) {
		return true
	}

	return false
}

// SetEventId gets a reference to the given string and assigns it to the EventId field.
func (o *SuperplaneWorkflowQueueItem) SetEventId(v string) {
	o.EventId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SuperplaneWorkflowQueueItem) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneWorkflowQueueItem) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SuperplaneWorkflowQueueItem) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *SuperplaneWorkflowQueueItem) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *SuperplaneWorkflowQueueItem) GetEvent() SuperplaneWorkflowEvent {
	if o == nil || IsNil(o.Event) {
		var ret SuperplaneWorkflowEvent
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneWorkflowQueueItem) GetEventOk() (*SuperplaneWorkflowEvent, bool) {
	if o == nil || IsNil(o.Event) {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *SuperplaneWorkflowQueueItem) HasEvent() bool {
	if o != nil && !IsNil(o.Event) {
		return true
	}

	return false
}

// SetEvent gets a reference to the given SuperplaneWorkflowEvent and assigns it to the Event field.
func (o *SuperplaneWorkflowQueueItem) SetEvent(v SuperplaneWorkflowEvent) {
	o.Event = &v
}

func (o SuperplaneWorkflowQueueItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneWorkflowQueueItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EventId) {
		toSerialize["eventId"] = o.EventId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Event) {
		toSerialize["event"] = o.Event
	}
	return toSerialize, nil
}

type NullableSuperplaneWorkflowQueueItem struct {
	value *SuperplaneWorkflowQueueItem
	isSet bool
}

func (v NullableSuperplaneWorkflowQueueItem) Get() *SuperplaneWorkflowQueueItem {
	return v.value
}

func (v *NullableSuperplaneWorkflowQueueItem) Set(val *SuperplaneWorkflowQueueItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneWorkflowQueueItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneWorkflowQueueItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneWorkflowQueueItem(val *SuperplaneWorkflowQueueItem) *NullableSuperplaneWorkflowQueueItem {
	return &NullableSuperplaneWorkflowQueueItem{value: val, isSet: true}
}

func (v NullableSuperplaneWorkflowQueueItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneWorkflowQueueItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


