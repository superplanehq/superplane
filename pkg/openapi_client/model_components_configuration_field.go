/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the ComponentsConfigurationField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComponentsConfigurationField{}

// ComponentsConfigurationField struct for ComponentsConfigurationField
type ComponentsConfigurationField struct {
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	Description *string `json:"description,omitempty"`
	Required *bool `json:"required,omitempty"`
	DefaultValue *string `json:"defaultValue,omitempty"`
	Options []ComponentsFieldOption `json:"options,omitempty"`
	Min *int32 `json:"min,omitempty"`
	Max *int32 `json:"max,omitempty"`
	ListItem *ComponentsListItemDefinition `json:"listItem,omitempty"`
	Schema []ComponentsConfigurationField `json:"schema,omitempty"`
	Label *string `json:"label,omitempty"`
}

// NewComponentsConfigurationField instantiates a new ComponentsConfigurationField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponentsConfigurationField() *ComponentsConfigurationField {
	this := ComponentsConfigurationField{}
	return &this
}

// NewComponentsConfigurationFieldWithDefaults instantiates a new ComponentsConfigurationField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentsConfigurationFieldWithDefaults() *ComponentsConfigurationField {
	this := ComponentsConfigurationField{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ComponentsConfigurationField) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsConfigurationField) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ComponentsConfigurationField) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ComponentsConfigurationField) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ComponentsConfigurationField) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsConfigurationField) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ComponentsConfigurationField) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ComponentsConfigurationField) SetType(v string) {
	o.Type = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ComponentsConfigurationField) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsConfigurationField) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ComponentsConfigurationField) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ComponentsConfigurationField) SetDescription(v string) {
	o.Description = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *ComponentsConfigurationField) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsConfigurationField) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *ComponentsConfigurationField) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *ComponentsConfigurationField) SetRequired(v bool) {
	o.Required = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *ComponentsConfigurationField) GetDefaultValue() string {
	if o == nil || IsNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsConfigurationField) GetDefaultValueOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *ComponentsConfigurationField) HasDefaultValue() bool {
	if o != nil && !IsNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *ComponentsConfigurationField) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ComponentsConfigurationField) GetOptions() []ComponentsFieldOption {
	if o == nil || IsNil(o.Options) {
		var ret []ComponentsFieldOption
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsConfigurationField) GetOptionsOk() ([]ComponentsFieldOption, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ComponentsConfigurationField) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []ComponentsFieldOption and assigns it to the Options field.
func (o *ComponentsConfigurationField) SetOptions(v []ComponentsFieldOption) {
	o.Options = v
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *ComponentsConfigurationField) GetMin() int32 {
	if o == nil || IsNil(o.Min) {
		var ret int32
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsConfigurationField) GetMinOk() (*int32, bool) {
	if o == nil || IsNil(o.Min) {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *ComponentsConfigurationField) HasMin() bool {
	if o != nil && !IsNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given int32 and assigns it to the Min field.
func (o *ComponentsConfigurationField) SetMin(v int32) {
	o.Min = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *ComponentsConfigurationField) GetMax() int32 {
	if o == nil || IsNil(o.Max) {
		var ret int32
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsConfigurationField) GetMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *ComponentsConfigurationField) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given int32 and assigns it to the Max field.
func (o *ComponentsConfigurationField) SetMax(v int32) {
	o.Max = &v
}

// GetListItem returns the ListItem field value if set, zero value otherwise.
func (o *ComponentsConfigurationField) GetListItem() ComponentsListItemDefinition {
	if o == nil || IsNil(o.ListItem) {
		var ret ComponentsListItemDefinition
		return ret
	}
	return *o.ListItem
}

// GetListItemOk returns a tuple with the ListItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsConfigurationField) GetListItemOk() (*ComponentsListItemDefinition, bool) {
	if o == nil || IsNil(o.ListItem) {
		return nil, false
	}
	return o.ListItem, true
}

// HasListItem returns a boolean if a field has been set.
func (o *ComponentsConfigurationField) HasListItem() bool {
	if o != nil && !IsNil(o.ListItem) {
		return true
	}

	return false
}

// SetListItem gets a reference to the given ComponentsListItemDefinition and assigns it to the ListItem field.
func (o *ComponentsConfigurationField) SetListItem(v ComponentsListItemDefinition) {
	o.ListItem = &v
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *ComponentsConfigurationField) GetSchema() []ComponentsConfigurationField {
	if o == nil || IsNil(o.Schema) {
		var ret []ComponentsConfigurationField
		return ret
	}
	return o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsConfigurationField) GetSchemaOk() ([]ComponentsConfigurationField, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *ComponentsConfigurationField) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given []ComponentsConfigurationField and assigns it to the Schema field.
func (o *ComponentsConfigurationField) SetSchema(v []ComponentsConfigurationField) {
	o.Schema = v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ComponentsConfigurationField) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsConfigurationField) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ComponentsConfigurationField) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ComponentsConfigurationField) SetLabel(v string) {
	o.Label = &v
}

func (o ComponentsConfigurationField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComponentsConfigurationField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if !IsNil(o.DefaultValue) {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.ListItem) {
		toSerialize["listItem"] = o.ListItem
	}
	if !IsNil(o.Schema) {
		toSerialize["schema"] = o.Schema
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	return toSerialize, nil
}

type NullableComponentsConfigurationField struct {
	value *ComponentsConfigurationField
	isSet bool
}

func (v NullableComponentsConfigurationField) Get() *ComponentsConfigurationField {
	return v.value
}

func (v *NullableComponentsConfigurationField) Set(val *ComponentsConfigurationField) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentsConfigurationField) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentsConfigurationField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentsConfigurationField(val *ComponentsConfigurationField) *NullableComponentsConfigurationField {
	return &NullableComponentsConfigurationField{value: val, isSet: true}
}

func (v NullableComponentsConfigurationField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentsConfigurationField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


