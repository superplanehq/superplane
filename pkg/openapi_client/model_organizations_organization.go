/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the OrganizationsOrganization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationsOrganization{}

// OrganizationsOrganization struct for OrganizationsOrganization
type OrganizationsOrganization struct {
	Metadata *OrganizationsOrganizationMetadata `json:"metadata,omitempty"`
}

// NewOrganizationsOrganization instantiates a new OrganizationsOrganization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganization() *OrganizationsOrganization {
	this := OrganizationsOrganization{}
	return &this
}

// NewOrganizationsOrganizationWithDefaults instantiates a new OrganizationsOrganization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationWithDefaults() *OrganizationsOrganization {
	this := OrganizationsOrganization{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *OrganizationsOrganization) GetMetadata() OrganizationsOrganizationMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret OrganizationsOrganizationMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganization) GetMetadataOk() (*OrganizationsOrganizationMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *OrganizationsOrganization) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given OrganizationsOrganizationMetadata and assigns it to the Metadata field.
func (o *OrganizationsOrganization) SetMetadata(v OrganizationsOrganizationMetadata) {
	o.Metadata = &v
}

func (o OrganizationsOrganization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationsOrganization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableOrganizationsOrganization struct {
	value *OrganizationsOrganization
	isSet bool
}

func (v NullableOrganizationsOrganization) Get() *OrganizationsOrganization {
	return v.value
}

func (v *NullableOrganizationsOrganization) Set(val *OrganizationsOrganization) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganization) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganization(val *OrganizationsOrganization) *NullableOrganizationsOrganization {
	return &NullableOrganizationsOrganization{value: val, isSet: true}
}

func (v NullableOrganizationsOrganization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


