/*
Superplane Authorization API

API for the Superplane Authorization service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the AuthorizationListRolesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationListRolesResponse{}

// AuthorizationListRolesResponse struct for AuthorizationListRolesResponse
type AuthorizationListRolesResponse struct {
	Roles []AuthorizationRole `json:"roles,omitempty"`
}

// NewAuthorizationListRolesResponse instantiates a new AuthorizationListRolesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationListRolesResponse() *AuthorizationListRolesResponse {
	this := AuthorizationListRolesResponse{}
	return &this
}

// NewAuthorizationListRolesResponseWithDefaults instantiates a new AuthorizationListRolesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationListRolesResponseWithDefaults() *AuthorizationListRolesResponse {
	this := AuthorizationListRolesResponse{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *AuthorizationListRolesResponse) GetRoles() []AuthorizationRole {
	if o == nil || IsNil(o.Roles) {
		var ret []AuthorizationRole
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationListRolesResponse) GetRolesOk() ([]AuthorizationRole, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *AuthorizationListRolesResponse) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []AuthorizationRole and assigns it to the Roles field.
func (o *AuthorizationListRolesResponse) SetRoles(v []AuthorizationRole) {
	o.Roles = v
}

func (o AuthorizationListRolesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationListRolesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return toSerialize, nil
}

type NullableAuthorizationListRolesResponse struct {
	value *AuthorizationListRolesResponse
	isSet bool
}

func (v NullableAuthorizationListRolesResponse) Get() *AuthorizationListRolesResponse {
	return v.value
}

func (v *NullableAuthorizationListRolesResponse) Set(val *AuthorizationListRolesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationListRolesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationListRolesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationListRolesResponse(val *AuthorizationListRolesResponse) *NullableAuthorizationListRolesResponse {
	return &NullableAuthorizationListRolesResponse{value: val, isSet: true}
}

func (v NullableAuthorizationListRolesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationListRolesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


