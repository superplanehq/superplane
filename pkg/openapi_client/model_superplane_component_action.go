/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneComponentAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneComponentAction{}

// SuperplaneComponentAction struct for SuperplaneComponentAction
type SuperplaneComponentAction struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Parameters []SuperplaneConfigurationField `json:"parameters,omitempty"`
}

// NewSuperplaneComponentAction instantiates a new SuperplaneComponentAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneComponentAction() *SuperplaneComponentAction {
	this := SuperplaneComponentAction{}
	return &this
}

// NewSuperplaneComponentActionWithDefaults instantiates a new SuperplaneComponentAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneComponentActionWithDefaults() *SuperplaneComponentAction {
	this := SuperplaneComponentAction{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SuperplaneComponentAction) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneComponentAction) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SuperplaneComponentAction) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SuperplaneComponentAction) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SuperplaneComponentAction) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneComponentAction) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SuperplaneComponentAction) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SuperplaneComponentAction) SetDescription(v string) {
	o.Description = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *SuperplaneComponentAction) GetParameters() []SuperplaneConfigurationField {
	if o == nil || IsNil(o.Parameters) {
		var ret []SuperplaneConfigurationField
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneComponentAction) GetParametersOk() ([]SuperplaneConfigurationField, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *SuperplaneComponentAction) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []SuperplaneConfigurationField and assigns it to the Parameters field.
func (o *SuperplaneComponentAction) SetParameters(v []SuperplaneConfigurationField) {
	o.Parameters = v
}

func (o SuperplaneComponentAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneComponentAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableSuperplaneComponentAction struct {
	value *SuperplaneComponentAction
	isSet bool
}

func (v NullableSuperplaneComponentAction) Get() *SuperplaneComponentAction {
	return v.value
}

func (v *NullableSuperplaneComponentAction) Set(val *SuperplaneComponentAction) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneComponentAction) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneComponentAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneComponentAction(val *SuperplaneComponentAction) *NullableSuperplaneComponentAction {
	return &NullableSuperplaneComponentAction{value: val, isSet: true}
}

func (v NullableSuperplaneComponentAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneComponentAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


