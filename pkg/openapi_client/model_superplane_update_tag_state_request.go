/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneUpdateTagStateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneUpdateTagStateRequest{}

// SuperplaneUpdateTagStateRequest struct for SuperplaneUpdateTagStateRequest
type SuperplaneUpdateTagStateRequest struct {
	Tag *SuperplaneTag `json:"tag,omitempty"`
}

// NewSuperplaneUpdateTagStateRequest instantiates a new SuperplaneUpdateTagStateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneUpdateTagStateRequest() *SuperplaneUpdateTagStateRequest {
	this := SuperplaneUpdateTagStateRequest{}
	return &this
}

// NewSuperplaneUpdateTagStateRequestWithDefaults instantiates a new SuperplaneUpdateTagStateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneUpdateTagStateRequestWithDefaults() *SuperplaneUpdateTagStateRequest {
	this := SuperplaneUpdateTagStateRequest{}
	return &this
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *SuperplaneUpdateTagStateRequest) GetTag() SuperplaneTag {
	if o == nil || IsNil(o.Tag) {
		var ret SuperplaneTag
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneUpdateTagStateRequest) GetTagOk() (*SuperplaneTag, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *SuperplaneUpdateTagStateRequest) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given SuperplaneTag and assigns it to the Tag field.
func (o *SuperplaneUpdateTagStateRequest) SetTag(v SuperplaneTag) {
	o.Tag = &v
}

func (o SuperplaneUpdateTagStateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneUpdateTagStateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return toSerialize, nil
}

type NullableSuperplaneUpdateTagStateRequest struct {
	value *SuperplaneUpdateTagStateRequest
	isSet bool
}

func (v NullableSuperplaneUpdateTagStateRequest) Get() *SuperplaneUpdateTagStateRequest {
	return v.value
}

func (v *NullableSuperplaneUpdateTagStateRequest) Set(val *SuperplaneUpdateTagStateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneUpdateTagStateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneUpdateTagStateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneUpdateTagStateRequest(val *SuperplaneUpdateTagStateRequest) *NullableSuperplaneUpdateTagStateRequest {
	return &NullableSuperplaneUpdateTagStateRequest{value: val, isSet: true}
}

func (v NullableSuperplaneUpdateTagStateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneUpdateTagStateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


