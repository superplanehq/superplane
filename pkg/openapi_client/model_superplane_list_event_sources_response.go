/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneListEventSourcesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneListEventSourcesResponse{}

// SuperplaneListEventSourcesResponse struct for SuperplaneListEventSourcesResponse
type SuperplaneListEventSourcesResponse struct {
	EventSources []SuperplaneEventSource `json:"eventSources,omitempty"`
}

// NewSuperplaneListEventSourcesResponse instantiates a new SuperplaneListEventSourcesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneListEventSourcesResponse() *SuperplaneListEventSourcesResponse {
	this := SuperplaneListEventSourcesResponse{}
	return &this
}

// NewSuperplaneListEventSourcesResponseWithDefaults instantiates a new SuperplaneListEventSourcesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneListEventSourcesResponseWithDefaults() *SuperplaneListEventSourcesResponse {
	this := SuperplaneListEventSourcesResponse{}
	return &this
}

// GetEventSources returns the EventSources field value if set, zero value otherwise.
func (o *SuperplaneListEventSourcesResponse) GetEventSources() []SuperplaneEventSource {
	if o == nil || IsNil(o.EventSources) {
		var ret []SuperplaneEventSource
		return ret
	}
	return o.EventSources
}

// GetEventSourcesOk returns a tuple with the EventSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneListEventSourcesResponse) GetEventSourcesOk() ([]SuperplaneEventSource, bool) {
	if o == nil || IsNil(o.EventSources) {
		return nil, false
	}
	return o.EventSources, true
}

// HasEventSources returns a boolean if a field has been set.
func (o *SuperplaneListEventSourcesResponse) HasEventSources() bool {
	if o != nil && !IsNil(o.EventSources) {
		return true
	}

	return false
}

// SetEventSources gets a reference to the given []SuperplaneEventSource and assigns it to the EventSources field.
func (o *SuperplaneListEventSourcesResponse) SetEventSources(v []SuperplaneEventSource) {
	o.EventSources = v
}

func (o SuperplaneListEventSourcesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneListEventSourcesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EventSources) {
		toSerialize["eventSources"] = o.EventSources
	}
	return toSerialize, nil
}

type NullableSuperplaneListEventSourcesResponse struct {
	value *SuperplaneListEventSourcesResponse
	isSet bool
}

func (v NullableSuperplaneListEventSourcesResponse) Get() *SuperplaneListEventSourcesResponse {
	return v.value
}

func (v *NullableSuperplaneListEventSourcesResponse) Set(val *SuperplaneListEventSourcesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneListEventSourcesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneListEventSourcesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneListEventSourcesResponse(val *SuperplaneListEventSourcesResponse) *NullableSuperplaneListEventSourcesResponse {
	return &NullableSuperplaneListEventSourcesResponse{value: val, isSet: true}
}

func (v NullableSuperplaneListEventSourcesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneListEventSourcesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


