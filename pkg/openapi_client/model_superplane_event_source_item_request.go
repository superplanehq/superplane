/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneEventSourceItemRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneEventSourceItemRequest{}

// SuperplaneEventSourceItemRequest struct for SuperplaneEventSourceItemRequest
type SuperplaneEventSourceItemRequest struct {
	SourceId *string `json:"sourceId,omitempty"`
	SourceType *SuperplaneEventSourceType `json:"sourceType,omitempty"`
}

// NewSuperplaneEventSourceItemRequest instantiates a new SuperplaneEventSourceItemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneEventSourceItemRequest() *SuperplaneEventSourceItemRequest {
	this := SuperplaneEventSourceItemRequest{}
	var sourceType SuperplaneEventSourceType = SUPERPLANEEVENTSOURCETYPE_EVENT_SOURCE_TYPE_UNKNOWN
	this.SourceType = &sourceType
	return &this
}

// NewSuperplaneEventSourceItemRequestWithDefaults instantiates a new SuperplaneEventSourceItemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneEventSourceItemRequestWithDefaults() *SuperplaneEventSourceItemRequest {
	this := SuperplaneEventSourceItemRequest{}
	var sourceType SuperplaneEventSourceType = SUPERPLANEEVENTSOURCETYPE_EVENT_SOURCE_TYPE_UNKNOWN
	this.SourceType = &sourceType
	return &this
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *SuperplaneEventSourceItemRequest) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneEventSourceItemRequest) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *SuperplaneEventSourceItemRequest) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *SuperplaneEventSourceItemRequest) SetSourceId(v string) {
	o.SourceId = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *SuperplaneEventSourceItemRequest) GetSourceType() SuperplaneEventSourceType {
	if o == nil || IsNil(o.SourceType) {
		var ret SuperplaneEventSourceType
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneEventSourceItemRequest) GetSourceTypeOk() (*SuperplaneEventSourceType, bool) {
	if o == nil || IsNil(o.SourceType) {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *SuperplaneEventSourceItemRequest) HasSourceType() bool {
	if o != nil && !IsNil(o.SourceType) {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given SuperplaneEventSourceType and assigns it to the SourceType field.
func (o *SuperplaneEventSourceItemRequest) SetSourceType(v SuperplaneEventSourceType) {
	o.SourceType = &v
}

func (o SuperplaneEventSourceItemRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneEventSourceItemRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SourceId) {
		toSerialize["sourceId"] = o.SourceId
	}
	if !IsNil(o.SourceType) {
		toSerialize["sourceType"] = o.SourceType
	}
	return toSerialize, nil
}

type NullableSuperplaneEventSourceItemRequest struct {
	value *SuperplaneEventSourceItemRequest
	isSet bool
}

func (v NullableSuperplaneEventSourceItemRequest) Get() *SuperplaneEventSourceItemRequest {
	return v.value
}

func (v *NullableSuperplaneEventSourceItemRequest) Set(val *SuperplaneEventSourceItemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneEventSourceItemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneEventSourceItemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneEventSourceItemRequest(val *SuperplaneEventSourceItemRequest) *NullableSuperplaneEventSourceItemRequest {
	return &NullableSuperplaneEventSourceItemRequest{value: val, isSet: true}
}

func (v NullableSuperplaneEventSourceItemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneEventSourceItemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


