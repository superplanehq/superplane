/*
Superplane Organizations API

API for managing organizations in the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"time"
)

// checks if the SuperplaneListNodeQueueItemsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneListNodeQueueItemsResponse{}

// SuperplaneListNodeQueueItemsResponse struct for SuperplaneListNodeQueueItemsResponse
type SuperplaneListNodeQueueItemsResponse struct {
	QueueItems []SuperplaneWorkflowQueueItem `json:"queueItems,omitempty"`
	TotalCount *int64 `json:"totalCount,omitempty"`
	HasNextPage *bool `json:"hasNextPage,omitempty"`
	LastTimestamp *time.Time `json:"lastTimestamp,omitempty"`
}

// NewSuperplaneListNodeQueueItemsResponse instantiates a new SuperplaneListNodeQueueItemsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneListNodeQueueItemsResponse() *SuperplaneListNodeQueueItemsResponse {
	this := SuperplaneListNodeQueueItemsResponse{}
	return &this
}

// NewSuperplaneListNodeQueueItemsResponseWithDefaults instantiates a new SuperplaneListNodeQueueItemsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneListNodeQueueItemsResponseWithDefaults() *SuperplaneListNodeQueueItemsResponse {
	this := SuperplaneListNodeQueueItemsResponse{}
	return &this
}

// GetQueueItems returns the QueueItems field value if set, zero value otherwise.
func (o *SuperplaneListNodeQueueItemsResponse) GetQueueItems() []SuperplaneWorkflowQueueItem {
	if o == nil || IsNil(o.QueueItems) {
		var ret []SuperplaneWorkflowQueueItem
		return ret
	}
	return o.QueueItems
}

// GetQueueItemsOk returns a tuple with the QueueItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneListNodeQueueItemsResponse) GetQueueItemsOk() ([]SuperplaneWorkflowQueueItem, bool) {
	if o == nil || IsNil(o.QueueItems) {
		return nil, false
	}
	return o.QueueItems, true
}

// HasQueueItems returns a boolean if a field has been set.
func (o *SuperplaneListNodeQueueItemsResponse) HasQueueItems() bool {
	if o != nil && !IsNil(o.QueueItems) {
		return true
	}

	return false
}

// SetQueueItems gets a reference to the given []SuperplaneWorkflowQueueItem and assigns it to the QueueItems field.
func (o *SuperplaneListNodeQueueItemsResponse) SetQueueItems(v []SuperplaneWorkflowQueueItem) {
	o.QueueItems = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *SuperplaneListNodeQueueItemsResponse) GetTotalCount() int64 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneListNodeQueueItemsResponse) GetTotalCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *SuperplaneListNodeQueueItemsResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *SuperplaneListNodeQueueItemsResponse) SetTotalCount(v int64) {
	o.TotalCount = &v
}

// GetHasNextPage returns the HasNextPage field value if set, zero value otherwise.
func (o *SuperplaneListNodeQueueItemsResponse) GetHasNextPage() bool {
	if o == nil || IsNil(o.HasNextPage) {
		var ret bool
		return ret
	}
	return *o.HasNextPage
}

// GetHasNextPageOk returns a tuple with the HasNextPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneListNodeQueueItemsResponse) GetHasNextPageOk() (*bool, bool) {
	if o == nil || IsNil(o.HasNextPage) {
		return nil, false
	}
	return o.HasNextPage, true
}

// HasHasNextPage returns a boolean if a field has been set.
func (o *SuperplaneListNodeQueueItemsResponse) HasHasNextPage() bool {
	if o != nil && !IsNil(o.HasNextPage) {
		return true
	}

	return false
}

// SetHasNextPage gets a reference to the given bool and assigns it to the HasNextPage field.
func (o *SuperplaneListNodeQueueItemsResponse) SetHasNextPage(v bool) {
	o.HasNextPage = &v
}

// GetLastTimestamp returns the LastTimestamp field value if set, zero value otherwise.
func (o *SuperplaneListNodeQueueItemsResponse) GetLastTimestamp() time.Time {
	if o == nil || IsNil(o.LastTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.LastTimestamp
}

// GetLastTimestampOk returns a tuple with the LastTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneListNodeQueueItemsResponse) GetLastTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastTimestamp) {
		return nil, false
	}
	return o.LastTimestamp, true
}

// HasLastTimestamp returns a boolean if a field has been set.
func (o *SuperplaneListNodeQueueItemsResponse) HasLastTimestamp() bool {
	if o != nil && !IsNil(o.LastTimestamp) {
		return true
	}

	return false
}

// SetLastTimestamp gets a reference to the given time.Time and assigns it to the LastTimestamp field.
func (o *SuperplaneListNodeQueueItemsResponse) SetLastTimestamp(v time.Time) {
	o.LastTimestamp = &v
}

func (o SuperplaneListNodeQueueItemsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneListNodeQueueItemsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QueueItems) {
		toSerialize["queueItems"] = o.QueueItems
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	if !IsNil(o.HasNextPage) {
		toSerialize["hasNextPage"] = o.HasNextPage
	}
	if !IsNil(o.LastTimestamp) {
		toSerialize["lastTimestamp"] = o.LastTimestamp
	}
	return toSerialize, nil
}

type NullableSuperplaneListNodeQueueItemsResponse struct {
	value *SuperplaneListNodeQueueItemsResponse
	isSet bool
}

func (v NullableSuperplaneListNodeQueueItemsResponse) Get() *SuperplaneListNodeQueueItemsResponse {
	return v.value
}

func (v *NullableSuperplaneListNodeQueueItemsResponse) Set(val *SuperplaneListNodeQueueItemsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneListNodeQueueItemsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneListNodeQueueItemsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneListNodeQueueItemsResponse(val *SuperplaneListNodeQueueItemsResponse) *NullableSuperplaneListNodeQueueItemsResponse {
	return &NullableSuperplaneListNodeQueueItemsResponse{value: val, isSet: true}
}

func (v NullableSuperplaneListNodeQueueItemsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneListNodeQueueItemsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


