/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneStageTag type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneStageTag{}

// SuperplaneStageTag struct for SuperplaneStageTag
type SuperplaneStageTag struct {
	StageId *string `json:"stageId,omitempty"`
	StageEventState *SuperplaneStageEventState `json:"stageEventState,omitempty"`
	Tag *SuperplaneTag `json:"tag,omitempty"`
}

// NewSuperplaneStageTag instantiates a new SuperplaneStageTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneStageTag() *SuperplaneStageTag {
	this := SuperplaneStageTag{}
	var stageEventState SuperplaneStageEventState = SUPERPLANESTAGEEVENTSTATE_STATE_UNKNOWN
	this.StageEventState = &stageEventState
	return &this
}

// NewSuperplaneStageTagWithDefaults instantiates a new SuperplaneStageTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneStageTagWithDefaults() *SuperplaneStageTag {
	this := SuperplaneStageTag{}
	var stageEventState SuperplaneStageEventState = SUPERPLANESTAGEEVENTSTATE_STATE_UNKNOWN
	this.StageEventState = &stageEventState
	return &this
}

// GetStageId returns the StageId field value if set, zero value otherwise.
func (o *SuperplaneStageTag) GetStageId() string {
	if o == nil || IsNil(o.StageId) {
		var ret string
		return ret
	}
	return *o.StageId
}

// GetStageIdOk returns a tuple with the StageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStageTag) GetStageIdOk() (*string, bool) {
	if o == nil || IsNil(o.StageId) {
		return nil, false
	}
	return o.StageId, true
}

// HasStageId returns a boolean if a field has been set.
func (o *SuperplaneStageTag) HasStageId() bool {
	if o != nil && !IsNil(o.StageId) {
		return true
	}

	return false
}

// SetStageId gets a reference to the given string and assigns it to the StageId field.
func (o *SuperplaneStageTag) SetStageId(v string) {
	o.StageId = &v
}

// GetStageEventState returns the StageEventState field value if set, zero value otherwise.
func (o *SuperplaneStageTag) GetStageEventState() SuperplaneStageEventState {
	if o == nil || IsNil(o.StageEventState) {
		var ret SuperplaneStageEventState
		return ret
	}
	return *o.StageEventState
}

// GetStageEventStateOk returns a tuple with the StageEventState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStageTag) GetStageEventStateOk() (*SuperplaneStageEventState, bool) {
	if o == nil || IsNil(o.StageEventState) {
		return nil, false
	}
	return o.StageEventState, true
}

// HasStageEventState returns a boolean if a field has been set.
func (o *SuperplaneStageTag) HasStageEventState() bool {
	if o != nil && !IsNil(o.StageEventState) {
		return true
	}

	return false
}

// SetStageEventState gets a reference to the given SuperplaneStageEventState and assigns it to the StageEventState field.
func (o *SuperplaneStageTag) SetStageEventState(v SuperplaneStageEventState) {
	o.StageEventState = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *SuperplaneStageTag) GetTag() SuperplaneTag {
	if o == nil || IsNil(o.Tag) {
		var ret SuperplaneTag
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneStageTag) GetTagOk() (*SuperplaneTag, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *SuperplaneStageTag) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given SuperplaneTag and assigns it to the Tag field.
func (o *SuperplaneStageTag) SetTag(v SuperplaneTag) {
	o.Tag = &v
}

func (o SuperplaneStageTag) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneStageTag) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StageId) {
		toSerialize["stageId"] = o.StageId
	}
	if !IsNil(o.StageEventState) {
		toSerialize["stageEventState"] = o.StageEventState
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return toSerialize, nil
}

type NullableSuperplaneStageTag struct {
	value *SuperplaneStageTag
	isSet bool
}

func (v NullableSuperplaneStageTag) Get() *SuperplaneStageTag {
	return v.value
}

func (v *NullableSuperplaneStageTag) Set(val *SuperplaneStageTag) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneStageTag) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneStageTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneStageTag(val *SuperplaneStageTag) *NullableSuperplaneStageTag {
	return &NullableSuperplaneStageTag{value: val, isSet: true}
}

func (v NullableSuperplaneStageTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneStageTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


