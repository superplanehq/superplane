/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"time"
)

// checks if the SuperplaneConnectionGroupFieldSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneConnectionGroupFieldSet{}

// SuperplaneConnectionGroupFieldSet struct for SuperplaneConnectionGroupFieldSet
type SuperplaneConnectionGroupFieldSet struct {
	Id *string `json:"id,omitempty"`
	Fields []SuperplaneKeyValuePair `json:"fields,omitempty"`
	Hash *string `json:"hash,omitempty"`
	State *SuperplaneConnectionGroupFieldSetState `json:"state,omitempty"`
	Events []SuperplaneConnectionGroupEvent `json:"events,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
}

// NewSuperplaneConnectionGroupFieldSet instantiates a new SuperplaneConnectionGroupFieldSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneConnectionGroupFieldSet() *SuperplaneConnectionGroupFieldSet {
	this := SuperplaneConnectionGroupFieldSet{}
	var state SuperplaneConnectionGroupFieldSetState = SUPERPLANECONNECTIONGROUPFIELDSETSTATE_STATE_UNKNOWN
	this.State = &state
	return &this
}

// NewSuperplaneConnectionGroupFieldSetWithDefaults instantiates a new SuperplaneConnectionGroupFieldSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneConnectionGroupFieldSetWithDefaults() *SuperplaneConnectionGroupFieldSet {
	this := SuperplaneConnectionGroupFieldSet{}
	var state SuperplaneConnectionGroupFieldSetState = SUPERPLANECONNECTIONGROUPFIELDSETSTATE_STATE_UNKNOWN
	this.State = &state
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SuperplaneConnectionGroupFieldSet) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneConnectionGroupFieldSet) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SuperplaneConnectionGroupFieldSet) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SuperplaneConnectionGroupFieldSet) SetId(v string) {
	o.Id = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *SuperplaneConnectionGroupFieldSet) GetFields() []SuperplaneKeyValuePair {
	if o == nil || IsNil(o.Fields) {
		var ret []SuperplaneKeyValuePair
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneConnectionGroupFieldSet) GetFieldsOk() ([]SuperplaneKeyValuePair, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *SuperplaneConnectionGroupFieldSet) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []SuperplaneKeyValuePair and assigns it to the Fields field.
func (o *SuperplaneConnectionGroupFieldSet) SetFields(v []SuperplaneKeyValuePair) {
	o.Fields = v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *SuperplaneConnectionGroupFieldSet) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneConnectionGroupFieldSet) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *SuperplaneConnectionGroupFieldSet) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *SuperplaneConnectionGroupFieldSet) SetHash(v string) {
	o.Hash = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SuperplaneConnectionGroupFieldSet) GetState() SuperplaneConnectionGroupFieldSetState {
	if o == nil || IsNil(o.State) {
		var ret SuperplaneConnectionGroupFieldSetState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneConnectionGroupFieldSet) GetStateOk() (*SuperplaneConnectionGroupFieldSetState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SuperplaneConnectionGroupFieldSet) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given SuperplaneConnectionGroupFieldSetState and assigns it to the State field.
func (o *SuperplaneConnectionGroupFieldSet) SetState(v SuperplaneConnectionGroupFieldSetState) {
	o.State = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *SuperplaneConnectionGroupFieldSet) GetEvents() []SuperplaneConnectionGroupEvent {
	if o == nil || IsNil(o.Events) {
		var ret []SuperplaneConnectionGroupEvent
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneConnectionGroupFieldSet) GetEventsOk() ([]SuperplaneConnectionGroupEvent, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *SuperplaneConnectionGroupFieldSet) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []SuperplaneConnectionGroupEvent and assigns it to the Events field.
func (o *SuperplaneConnectionGroupFieldSet) SetEvents(v []SuperplaneConnectionGroupEvent) {
	o.Events = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SuperplaneConnectionGroupFieldSet) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneConnectionGroupFieldSet) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SuperplaneConnectionGroupFieldSet) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *SuperplaneConnectionGroupFieldSet) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o SuperplaneConnectionGroupFieldSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneConnectionGroupFieldSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableSuperplaneConnectionGroupFieldSet struct {
	value *SuperplaneConnectionGroupFieldSet
	isSet bool
}

func (v NullableSuperplaneConnectionGroupFieldSet) Get() *SuperplaneConnectionGroupFieldSet {
	return v.value
}

func (v *NullableSuperplaneConnectionGroupFieldSet) Set(val *SuperplaneConnectionGroupFieldSet) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneConnectionGroupFieldSet) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneConnectionGroupFieldSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneConnectionGroupFieldSet(val *SuperplaneConnectionGroupFieldSet) *NullableSuperplaneConnectionGroupFieldSet {
	return &NullableSuperplaneConnectionGroupFieldSet{value: val, isSet: true}
}

func (v NullableSuperplaneConnectionGroupFieldSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneConnectionGroupFieldSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


