/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the AuthorizationCreateRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationCreateRoleRequest{}

// AuthorizationCreateRoleRequest struct for AuthorizationCreateRoleRequest
type AuthorizationCreateRoleRequest struct {
	Name *string `json:"name,omitempty"`
	DomainType *AuthorizationDomainType `json:"domainType,omitempty"`
	DomainId *string `json:"domainId,omitempty"`
	Permissions []AuthorizationPermission `json:"permissions,omitempty"`
	InheritedRole *string `json:"inheritedRole,omitempty"`
}

// NewAuthorizationCreateRoleRequest instantiates a new AuthorizationCreateRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationCreateRoleRequest() *AuthorizationCreateRoleRequest {
	this := AuthorizationCreateRoleRequest{}
	var domainType AuthorizationDomainType = AUTHORIZATIONDOMAINTYPE_DOMAIN_TYPE_UNSPECIFIED
	this.DomainType = &domainType
	return &this
}

// NewAuthorizationCreateRoleRequestWithDefaults instantiates a new AuthorizationCreateRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationCreateRoleRequestWithDefaults() *AuthorizationCreateRoleRequest {
	this := AuthorizationCreateRoleRequest{}
	var domainType AuthorizationDomainType = AUTHORIZATIONDOMAINTYPE_DOMAIN_TYPE_UNSPECIFIED
	this.DomainType = &domainType
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuthorizationCreateRoleRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationCreateRoleRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuthorizationCreateRoleRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuthorizationCreateRoleRequest) SetName(v string) {
	o.Name = &v
}

// GetDomainType returns the DomainType field value if set, zero value otherwise.
func (o *AuthorizationCreateRoleRequest) GetDomainType() AuthorizationDomainType {
	if o == nil || IsNil(o.DomainType) {
		var ret AuthorizationDomainType
		return ret
	}
	return *o.DomainType
}

// GetDomainTypeOk returns a tuple with the DomainType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationCreateRoleRequest) GetDomainTypeOk() (*AuthorizationDomainType, bool) {
	if o == nil || IsNil(o.DomainType) {
		return nil, false
	}
	return o.DomainType, true
}

// HasDomainType returns a boolean if a field has been set.
func (o *AuthorizationCreateRoleRequest) HasDomainType() bool {
	if o != nil && !IsNil(o.DomainType) {
		return true
	}

	return false
}

// SetDomainType gets a reference to the given AuthorizationDomainType and assigns it to the DomainType field.
func (o *AuthorizationCreateRoleRequest) SetDomainType(v AuthorizationDomainType) {
	o.DomainType = &v
}

// GetDomainId returns the DomainId field value if set, zero value otherwise.
func (o *AuthorizationCreateRoleRequest) GetDomainId() string {
	if o == nil || IsNil(o.DomainId) {
		var ret string
		return ret
	}
	return *o.DomainId
}

// GetDomainIdOk returns a tuple with the DomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationCreateRoleRequest) GetDomainIdOk() (*string, bool) {
	if o == nil || IsNil(o.DomainId) {
		return nil, false
	}
	return o.DomainId, true
}

// HasDomainId returns a boolean if a field has been set.
func (o *AuthorizationCreateRoleRequest) HasDomainId() bool {
	if o != nil && !IsNil(o.DomainId) {
		return true
	}

	return false
}

// SetDomainId gets a reference to the given string and assigns it to the DomainId field.
func (o *AuthorizationCreateRoleRequest) SetDomainId(v string) {
	o.DomainId = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *AuthorizationCreateRoleRequest) GetPermissions() []AuthorizationPermission {
	if o == nil || IsNil(o.Permissions) {
		var ret []AuthorizationPermission
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationCreateRoleRequest) GetPermissionsOk() ([]AuthorizationPermission, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *AuthorizationCreateRoleRequest) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []AuthorizationPermission and assigns it to the Permissions field.
func (o *AuthorizationCreateRoleRequest) SetPermissions(v []AuthorizationPermission) {
	o.Permissions = v
}

// GetInheritedRole returns the InheritedRole field value if set, zero value otherwise.
func (o *AuthorizationCreateRoleRequest) GetInheritedRole() string {
	if o == nil || IsNil(o.InheritedRole) {
		var ret string
		return ret
	}
	return *o.InheritedRole
}

// GetInheritedRoleOk returns a tuple with the InheritedRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationCreateRoleRequest) GetInheritedRoleOk() (*string, bool) {
	if o == nil || IsNil(o.InheritedRole) {
		return nil, false
	}
	return o.InheritedRole, true
}

// HasInheritedRole returns a boolean if a field has been set.
func (o *AuthorizationCreateRoleRequest) HasInheritedRole() bool {
	if o != nil && !IsNil(o.InheritedRole) {
		return true
	}

	return false
}

// SetInheritedRole gets a reference to the given string and assigns it to the InheritedRole field.
func (o *AuthorizationCreateRoleRequest) SetInheritedRole(v string) {
	o.InheritedRole = &v
}

func (o AuthorizationCreateRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationCreateRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DomainType) {
		toSerialize["domainType"] = o.DomainType
	}
	if !IsNil(o.DomainId) {
		toSerialize["domainId"] = o.DomainId
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.InheritedRole) {
		toSerialize["inheritedRole"] = o.InheritedRole
	}
	return toSerialize, nil
}

type NullableAuthorizationCreateRoleRequest struct {
	value *AuthorizationCreateRoleRequest
	isSet bool
}

func (v NullableAuthorizationCreateRoleRequest) Get() *AuthorizationCreateRoleRequest {
	return v.value
}

func (v *NullableAuthorizationCreateRoleRequest) Set(val *AuthorizationCreateRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationCreateRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationCreateRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationCreateRoleRequest(val *AuthorizationCreateRoleRequest) *NullableAuthorizationCreateRoleRequest {
	return &NullableAuthorizationCreateRoleRequest{value: val, isSet: true}
}

func (v NullableAuthorizationCreateRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationCreateRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


