/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the AuthorizationCreateGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationCreateGroupRequest{}

// AuthorizationCreateGroupRequest struct for AuthorizationCreateGroupRequest
type AuthorizationCreateGroupRequest struct {
	DomainType *AuthorizationDomainType `json:"domainType,omitempty"`
	DomainId *string `json:"domainId,omitempty"`
	GroupName *string `json:"groupName,omitempty"`
	Role *string `json:"role,omitempty"`
}

// NewAuthorizationCreateGroupRequest instantiates a new AuthorizationCreateGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationCreateGroupRequest() *AuthorizationCreateGroupRequest {
	this := AuthorizationCreateGroupRequest{}
	var domainType AuthorizationDomainType = AUTHORIZATIONDOMAINTYPE_DOMAIN_TYPE_UNSPECIFIED
	this.DomainType = &domainType
	return &this
}

// NewAuthorizationCreateGroupRequestWithDefaults instantiates a new AuthorizationCreateGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationCreateGroupRequestWithDefaults() *AuthorizationCreateGroupRequest {
	this := AuthorizationCreateGroupRequest{}
	var domainType AuthorizationDomainType = AUTHORIZATIONDOMAINTYPE_DOMAIN_TYPE_UNSPECIFIED
	this.DomainType = &domainType
	return &this
}

// GetDomainType returns the DomainType field value if set, zero value otherwise.
func (o *AuthorizationCreateGroupRequest) GetDomainType() AuthorizationDomainType {
	if o == nil || IsNil(o.DomainType) {
		var ret AuthorizationDomainType
		return ret
	}
	return *o.DomainType
}

// GetDomainTypeOk returns a tuple with the DomainType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationCreateGroupRequest) GetDomainTypeOk() (*AuthorizationDomainType, bool) {
	if o == nil || IsNil(o.DomainType) {
		return nil, false
	}
	return o.DomainType, true
}

// HasDomainType returns a boolean if a field has been set.
func (o *AuthorizationCreateGroupRequest) HasDomainType() bool {
	if o != nil && !IsNil(o.DomainType) {
		return true
	}

	return false
}

// SetDomainType gets a reference to the given AuthorizationDomainType and assigns it to the DomainType field.
func (o *AuthorizationCreateGroupRequest) SetDomainType(v AuthorizationDomainType) {
	o.DomainType = &v
}

// GetDomainId returns the DomainId field value if set, zero value otherwise.
func (o *AuthorizationCreateGroupRequest) GetDomainId() string {
	if o == nil || IsNil(o.DomainId) {
		var ret string
		return ret
	}
	return *o.DomainId
}

// GetDomainIdOk returns a tuple with the DomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationCreateGroupRequest) GetDomainIdOk() (*string, bool) {
	if o == nil || IsNil(o.DomainId) {
		return nil, false
	}
	return o.DomainId, true
}

// HasDomainId returns a boolean if a field has been set.
func (o *AuthorizationCreateGroupRequest) HasDomainId() bool {
	if o != nil && !IsNil(o.DomainId) {
		return true
	}

	return false
}

// SetDomainId gets a reference to the given string and assigns it to the DomainId field.
func (o *AuthorizationCreateGroupRequest) SetDomainId(v string) {
	o.DomainId = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *AuthorizationCreateGroupRequest) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationCreateGroupRequest) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *AuthorizationCreateGroupRequest) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *AuthorizationCreateGroupRequest) SetGroupName(v string) {
	o.GroupName = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AuthorizationCreateGroupRequest) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationCreateGroupRequest) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AuthorizationCreateGroupRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *AuthorizationCreateGroupRequest) SetRole(v string) {
	o.Role = &v
}

func (o AuthorizationCreateGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationCreateGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DomainType) {
		toSerialize["domainType"] = o.DomainType
	}
	if !IsNil(o.DomainId) {
		toSerialize["domainId"] = o.DomainId
	}
	if !IsNil(o.GroupName) {
		toSerialize["groupName"] = o.GroupName
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullableAuthorizationCreateGroupRequest struct {
	value *AuthorizationCreateGroupRequest
	isSet bool
}

func (v NullableAuthorizationCreateGroupRequest) Get() *AuthorizationCreateGroupRequest {
	return v.value
}

func (v *NullableAuthorizationCreateGroupRequest) Set(val *AuthorizationCreateGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationCreateGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationCreateGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationCreateGroupRequest(val *AuthorizationCreateGroupRequest) *NullableAuthorizationCreateGroupRequest {
	return &NullableAuthorizationCreateGroupRequest{value: val, isSet: true}
}

func (v NullableAuthorizationCreateGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationCreateGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


