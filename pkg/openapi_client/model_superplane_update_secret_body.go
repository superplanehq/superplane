/*
Superplane API

API for the Superplane service

API version: 1.0
Contact: support@superplane.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SuperplaneUpdateSecretBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuperplaneUpdateSecretBody{}

// SuperplaneUpdateSecretBody struct for SuperplaneUpdateSecretBody
type SuperplaneUpdateSecretBody struct {
	RequesterId *string `json:"requesterId,omitempty"`
	Secret *SuperplaneSecret `json:"secret,omitempty"`
}

// NewSuperplaneUpdateSecretBody instantiates a new SuperplaneUpdateSecretBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuperplaneUpdateSecretBody() *SuperplaneUpdateSecretBody {
	this := SuperplaneUpdateSecretBody{}
	return &this
}

// NewSuperplaneUpdateSecretBodyWithDefaults instantiates a new SuperplaneUpdateSecretBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuperplaneUpdateSecretBodyWithDefaults() *SuperplaneUpdateSecretBody {
	this := SuperplaneUpdateSecretBody{}
	return &this
}

// GetRequesterId returns the RequesterId field value if set, zero value otherwise.
func (o *SuperplaneUpdateSecretBody) GetRequesterId() string {
	if o == nil || IsNil(o.RequesterId) {
		var ret string
		return ret
	}
	return *o.RequesterId
}

// GetRequesterIdOk returns a tuple with the RequesterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneUpdateSecretBody) GetRequesterIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequesterId) {
		return nil, false
	}
	return o.RequesterId, true
}

// HasRequesterId returns a boolean if a field has been set.
func (o *SuperplaneUpdateSecretBody) HasRequesterId() bool {
	if o != nil && !IsNil(o.RequesterId) {
		return true
	}

	return false
}

// SetRequesterId gets a reference to the given string and assigns it to the RequesterId field.
func (o *SuperplaneUpdateSecretBody) SetRequesterId(v string) {
	o.RequesterId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *SuperplaneUpdateSecretBody) GetSecret() SuperplaneSecret {
	if o == nil || IsNil(o.Secret) {
		var ret SuperplaneSecret
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuperplaneUpdateSecretBody) GetSecretOk() (*SuperplaneSecret, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *SuperplaneUpdateSecretBody) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given SuperplaneSecret and assigns it to the Secret field.
func (o *SuperplaneUpdateSecretBody) SetSecret(v SuperplaneSecret) {
	o.Secret = &v
}

func (o SuperplaneUpdateSecretBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuperplaneUpdateSecretBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequesterId) {
		toSerialize["requesterId"] = o.RequesterId
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	return toSerialize, nil
}

type NullableSuperplaneUpdateSecretBody struct {
	value *SuperplaneUpdateSecretBody
	isSet bool
}

func (v NullableSuperplaneUpdateSecretBody) Get() *SuperplaneUpdateSecretBody {
	return v.value
}

func (v *NullableSuperplaneUpdateSecretBody) Set(val *SuperplaneUpdateSecretBody) {
	v.value = val
	v.isSet = true
}

func (v NullableSuperplaneUpdateSecretBody) IsSet() bool {
	return v.isSet
}

func (v *NullableSuperplaneUpdateSecretBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuperplaneUpdateSecretBody(val *SuperplaneUpdateSecretBody) *NullableSuperplaneUpdateSecretBody {
	return &NullableSuperplaneUpdateSecretBody{value: val, isSet: true}
}

func (v NullableSuperplaneUpdateSecretBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuperplaneUpdateSecretBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


