{
  "swagger": "2.0",
  "info": {
    "title": "Superplane Organizations API",
    "description": "API for managing organizations in the Superplane service",
    "version": "1.0",
    "contact": {
      "name": "API Support",
      "email": "support@superplane.com"
    }
  },
  "tags": [
    {
      "name": "Organizations"
    },
    {
      "name": "Secrets"
    },
    {
      "name": "Integrations"
    },
    {
      "name": "Superplane"
    },
    {
      "name": "Users"
    },
    {
      "name": "Groups"
    },
    {
      "name": "Roles"
    },
    {
      "name": "Me"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/canvases": {
      "get": {
        "summary": "List canvases",
        "description": "Returns a list of all canvases",
        "operationId": "Superplane_ListCanvases",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneListCanvasesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Canvas"
        ]
      },
      "post": {
        "summary": "Create a new canvas",
        "description": "Creates a new canvas with the given name and organization ID",
        "operationId": "Superplane_CreateCanvas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneCreateCanvasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneCreateCanvasRequest"
            }
          }
        ],
        "tags": [
          "Canvas"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/connection-groups": {
      "get": {
        "summary": "List connection groups",
        "description": "Returns a list of all connection groups for the specified canvas (can be referenced by ID or name)",
        "operationId": "Superplane_ListConnectionGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneListConnectionGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectionGroup"
        ]
      },
      "post": {
        "summary": "Create a new canvas connection group",
        "description": "Creates a new canvas connection group",
        "operationId": "Superplane_CreateConnectionGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneCreateConnectionGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneCreateConnectionGroupBody"
            }
          }
        ],
        "tags": [
          "ConnectionGroup"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/connection-groups/{idOrName}": {
      "get": {
        "summary": "Get connection group details",
        "description": "Returns the details of a specific connection group (canvas can be referenced by ID or name)",
        "operationId": "Superplane_DescribeConnectionGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneDescribeConnectionGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectionGroup"
        ]
      },
      "delete": {
        "summary": "Delete a connection group",
        "description": "Deletes the specified connection group (canvas can be referenced by ID or name)",
        "operationId": "Superplane_DeleteConnectionGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneDeleteConnectionGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectionGroup"
        ]
      },
      "patch": {
        "summary": "Update a connection group",
        "description": "Updates the specified connection group (canvas can be referenced by ID or name)",
        "operationId": "Superplane_UpdateConnectionGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneUpdateConnectionGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneUpdateConnectionGroupBody"
            }
          }
        ],
        "tags": [
          "ConnectionGroup"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/connection-groups/{idOrName}/field-sets": {
      "get": {
        "summary": "List connection group field sets",
        "description": "Returns a list of field sets for the specified connection group (canvas can be referenced by ID or name)",
        "operationId": "Superplane_ListConnectionGroupFieldSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneListConnectionGroupFieldSetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectionGroup"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/event-sources": {
      "get": {
        "summary": "List event sources",
        "description": "Returns a list of all event sources for the specified canvas (can be referenced by ID or name)",
        "operationId": "Superplane_ListEventSources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneListEventSourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventSource"
        ]
      },
      "post": {
        "summary": "Create a new event source",
        "description": "Creates a new event source for the specified canvas (can be referenced by ID or name)",
        "operationId": "Superplane_CreateEventSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneCreateEventSourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneCreateEventSourceBody"
            }
          }
        ],
        "tags": [
          "EventSource"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/event-sources/{idOrName}": {
      "get": {
        "summary": "Get event source details",
        "description": "Returns the details of a specific event source (canvas can be referenced by ID or name)",
        "operationId": "Superplane_DescribeEventSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneDescribeEventSourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventSource"
        ]
      },
      "delete": {
        "summary": "Delete an event source",
        "description": "Deletes the specified event source (canvas can be referenced by ID or name)",
        "operationId": "Superplane_DeleteEventSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneDeleteEventSourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventSource"
        ]
      },
      "patch": {
        "summary": "Update an event source",
        "description": "Updates the specified event source (canvas can be referenced by ID or name)",
        "operationId": "Superplane_UpdateEventSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneUpdateEventSourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneUpdateEventSourceBody"
            }
          }
        ],
        "tags": [
          "EventSource"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/event-sources/{idOrName}/reset-key": {
      "post": {
        "summary": "Reset the key for an event source",
        "description": "Resets the key used to receive events from the specified event source (canvas can be referenced by ID or name)",
        "operationId": "Superplane_ResetEventSourceKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneResetEventSourceKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneResetEventSourceKeyBody"
            }
          }
        ],
        "tags": [
          "EventSource"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/events": {
      "get": {
        "summary": "List events",
        "description": "Returns a list of events with optional filtering by source type and source ID",
        "operationId": "Superplane_ListEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneListEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "EVENT_SOURCE_TYPE_UNKNOWN",
              "EVENT_SOURCE_TYPE_EVENT_SOURCE",
              "EVENT_SOURCE_TYPE_STAGE",
              "EVENT_SOURCE_TYPE_CONNECTION_GROUP"
            ],
            "default": "EVENT_SOURCE_TYPE_UNKNOWN"
          },
          {
            "name": "sourceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Event"
        ]
      },
      "post": {
        "summary": "Create an event",
        "description": "Creates a new event for the specified canvas (canvas can be referenced by ID or name)",
        "operationId": "Superplane_CreateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneCreateEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneCreateEventBody"
            }
          }
        ],
        "tags": [
          "Event"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/rejections": {
      "get": {
        "summary": "List event rejections",
        "description": "Returns a list of events that were rejected by a particular component",
        "operationId": "Superplane_ListEventRejections",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneListEventRejectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TYPE_UNKNOWN",
              "TYPE_EVENT_SOURCE",
              "TYPE_STAGE",
              "TYPE_CONNECTION_GROUP"
            ],
            "default": "TYPE_UNKNOWN"
          },
          {
            "name": "targetId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Canvas"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/stages": {
      "get": {
        "summary": "List stages",
        "description": "Returns a list of all stages for the specified canvas (can be referenced by ID or name)",
        "operationId": "Superplane_ListStages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneListStagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Stage"
        ]
      },
      "post": {
        "summary": "Create a new stage",
        "description": "Creates a new stage for the specified canvas (can be referenced by ID or name)",
        "operationId": "Superplane_CreateStage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneCreateStageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneCreateStageBody"
            }
          }
        ],
        "tags": [
          "Stage"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/stages/{idOrName}": {
      "get": {
        "summary": "Get stage details",
        "description": "Returns the details of a specific stage",
        "operationId": "Superplane_DescribeStage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneDescribeStageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Stage"
        ]
      },
      "delete": {
        "summary": "Delete a stage",
        "description": "Deletes the specified stage (canvas can be referenced by ID or name)",
        "operationId": "Superplane_DeleteStage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneDeleteStageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Stage"
        ]
      },
      "patch": {
        "summary": "Update a stage",
        "description": "Updates the specified stage (canvas can be referenced by ID or name)",
        "operationId": "Superplane_UpdateStage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneUpdateStageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneUpdateStageBody"
            }
          }
        ],
        "tags": [
          "Stage"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/stages/{stageIdOrName}/events": {
      "get": {
        "summary": "List stage events",
        "description": "Returns a list of events for the specified stage (canvas can be referenced by ID or name)",
        "operationId": "Superplane_ListStageEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneListStageEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stageIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "states",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "STATE_UNKNOWN",
                "STATE_PENDING",
                "STATE_WAITING",
                "STATE_PROCESSED",
                "STATE_DISCARDED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "stateReasons",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "STATE_REASON_UNKNOWN",
                "STATE_REASON_APPROVAL",
                "STATE_REASON_TIME_WINDOW"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Stage"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/stages/{stageIdOrName}/events/{eventId}/approve": {
      "post": {
        "summary": "Approve a stage event",
        "description": "Approves the specified stage event (canvas can be referenced by ID or name)",
        "operationId": "Superplane_ApproveStageEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneApproveStageEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stageIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneApproveStageEventBody"
            }
          }
        ],
        "tags": [
          "Stage"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/stages/{stageIdOrName}/events/{eventId}/discard": {
      "post": {
        "summary": "Discards a stage event",
        "description": "Discards the specified stage event (canvas can be referenced by ID or name)",
        "operationId": "Superplane_DiscardStageEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneDiscardStageEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stageIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneDiscardStageEventBody"
            }
          }
        ],
        "tags": [
          "Stage"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/stages/{stageIdOrName}/executions": {
      "get": {
        "summary": "List executions",
        "description": "Returns a list of all executions for the specified stage (canvas can be referenced by ID or name)",
        "operationId": "Superplane_ListStageExecutions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneListStageExecutionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stageIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "states",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "STATE_UNKNOWN",
                "STATE_PENDING",
                "STATE_STARTED",
                "STATE_FINISHED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "results",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "RESULT_UNKNOWN",
                "RESULT_PASSED",
                "RESULT_FAILED",
                "RESULT_CANCELLED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Execution"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/stages/{stageIdOrName}/executions/{executionId}/cancel": {
      "post": {
        "summary": "Cancel a stage execution",
        "description": "Cancel the specified stage execution (canvas can be referenced by ID or name)",
        "operationId": "Superplane_CancelStageExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneCancelStageExecutionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stageIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "executionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneCancelStageExecutionBody"
            }
          }
        ],
        "tags": [
          "Stage"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/users": {
      "post": {
        "summary": "Add a user to a canvas",
        "description": "Add a user to a canvas",
        "operationId": "Superplane_AddUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneAddUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuperplaneAddUserBody"
            }
          }
        ],
        "tags": [
          "Canvas"
        ]
      }
    },
    "/api/v1/canvases/{canvasIdOrName}/users/{userId}": {
      "delete": {
        "summary": "Remove a user from a canvas",
        "description": "Remove a user from a canvas",
        "operationId": "Superplane_RemoveUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneRemoveUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canvasIdOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Canvas"
        ]
      }
    },
    "/api/v1/canvases/{idOrName}": {
      "delete": {
        "summary": "Delete a canvas",
        "description": "Deletes the specified canvas (can be referenced by ID or name)",
        "operationId": "Superplane_DeleteCanvas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneDeleteCanvasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Canvas"
        ]
      }
    },
    "/api/v1/canvases/{id}": {
      "get": {
        "summary": "Get canvas details",
        "description": "Returns the details of a specific canvas",
        "operationId": "Superplane_DescribeCanvas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneDescribeCanvasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Canvas"
        ]
      }
    },
    "/api/v1/groups": {
      "get": {
        "summary": "List groups",
        "description": "Returns a list of groups within a domain",
        "operationId": "Groups_ListGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GroupsListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Groups"
        ]
      },
      "post": {
        "summary": "Create group",
        "description": "Creates a new group within a domain with a specific role",
        "operationId": "Groups_CreateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GroupsCreateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupsCreateGroupRequest"
            }
          }
        ],
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/groups/{groupName}": {
      "get": {
        "summary": "Get group",
        "description": "Returns details of a specific group within a domain",
        "operationId": "Groups_DescribeGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GroupsDescribeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Groups"
        ]
      },
      "delete": {
        "summary": "Delete group",
        "description": "Deletes an existing group within a domain",
        "operationId": "Groups_DeleteGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GroupsDeleteGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Groups"
        ]
      },
      "put": {
        "summary": "Update group",
        "description": "Updates an existing group within a domain",
        "operationId": "Groups_UpdateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GroupsUpdateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupsUpdateGroupBody"
            }
          }
        ],
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/groups/{groupName}/users": {
      "get": {
        "summary": "Get group users",
        "description": "Returns users that belong to a specific group within a domain",
        "operationId": "Groups_ListGroupUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GroupsListGroupUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Groups"
        ]
      },
      "post": {
        "summary": "Add user to group",
        "description": "Adds a user to a group within a domain",
        "operationId": "Groups_AddUserToGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GroupsAddUserToGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupsAddUserToGroupBody"
            }
          }
        ],
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/groups/{groupName}/users/remove": {
      "patch": {
        "summary": "Remove user from group",
        "description": "Removes a user from a group within a domain",
        "operationId": "Groups_RemoveUserFromGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GroupsRemoveUserFromGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupsRemoveUserFromGroupBody"
            }
          }
        ],
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/integrations": {
      "get": {
        "summary": "List integrations",
        "description": "List integrations",
        "operationId": "Integrations_ListIntegrations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/IntegrationsListIntegrationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Integration"
        ]
      },
      "post": {
        "summary": "Create a new canvas integration",
        "description": "Creates a new canvas integration",
        "operationId": "Integrations_CreateIntegration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/IntegrationsCreateIntegrationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationsCreateIntegrationRequest"
            }
          }
        ],
        "tags": [
          "Integration"
        ]
      }
    },
    "/api/v1/integrations/{idOrName}": {
      "get": {
        "summary": "Describe an integration",
        "description": "Describe an integration",
        "operationId": "Integrations_DescribeIntegration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/IntegrationsDescribeIntegrationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Integration"
        ]
      }
    },
    "/api/v1/me": {
      "get": {
        "summary": "Get current user",
        "description": "Returns the currently authenticated user",
        "operationId": "Me_Me",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneMeUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Me"
        ]
      }
    },
    "/api/v1/me/token": {
      "post": {
        "summary": "Regenerate API token",
        "description": "Regenerates the currently authencated user's API token",
        "operationId": "Me_RegenerateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MeRegenerateTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Me"
        ]
      }
    },
    "/api/v1/organizations/{id}": {
      "get": {
        "summary": "Get organization details",
        "description": "Returns the details of a specific organization (can be referenced by ID or name)",
        "operationId": "Organizations_DescribeOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/OrganizationsDescribeOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "delete": {
        "summary": "Delete an organization",
        "description": "Deletes the specified organization (can be referenced by ID or name)",
        "operationId": "Organizations_DeleteOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/OrganizationsDeleteOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "patch": {
        "summary": "Update an organization",
        "description": "Updates the specified organization (can be referenced by ID or name)",
        "operationId": "Organizations_UpdateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/OrganizationsUpdateOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrganizationsUpdateOrganizationBody"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/api/v1/organizations/{id}/invitations": {
      "get": {
        "summary": "List organization invitations",
        "description": "Returns pending invitations for an organization",
        "operationId": "Organizations_ListInvitations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/OrganizationsListInvitationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "post": {
        "summary": "Create an organization invitation",
        "description": "Invites a user to join an organization by email",
        "operationId": "Organizations_CreateInvitation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/OrganizationsCreateInvitationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrganizationsCreateInvitationBody"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/api/v1/organizations/{id}/users/{userId}": {
      "delete": {
        "summary": "Remove a user from an organization",
        "description": "Removes a user from an organization (can be referenced by ID or name)",
        "operationId": "Organizations_RemoveUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SuperplaneOrganizationsRemoveUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/api/v1/roles": {
      "get": {
        "summary": "List roles",
        "description": "Returns available roles for a specific domain type with their permissions and inheritance",
        "operationId": "Roles_ListRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RolesListRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Roles"
        ]
      },
      "post": {
        "summary": "Create role",
        "description": "Creates a new custom role with specified permissions",
        "operationId": "Roles_CreateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RolesCreateRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RolesCreateRoleRequest"
            }
          }
        ],
        "tags": [
          "Roles"
        ]
      }
    },
    "/api/v1/roles/{roleName}": {
      "get": {
        "summary": "Describe role",
        "description": "Returns detailed information about a specific role including permissions and inheritance",
        "operationId": "Roles_DescribeRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RolesDescribeRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Roles"
        ]
      },
      "delete": {
        "summary": "Delete role",
        "description": "Deletes an existing custom role",
        "operationId": "Roles_DeleteRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RolesDeleteRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Roles"
        ]
      },
      "put": {
        "summary": "Update role",
        "description": "Updates an existing custom role with new permissions",
        "operationId": "Roles_UpdateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RolesUpdateRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RolesUpdateRoleBody"
            }
          }
        ],
        "tags": [
          "Roles"
        ]
      }
    },
    "/api/v1/roles/{roleName}/users": {
      "post": {
        "summary": "Assign role",
        "description": "Assigns a role to a user within a domain",
        "operationId": "Roles_AssignRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RolesAssignRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RolesAssignRoleBody"
            }
          }
        ],
        "tags": [
          "Roles"
        ]
      }
    },
    "/api/v1/secrets": {
      "get": {
        "summary": "List secrets",
        "description": "Returns the list of secrets",
        "operationId": "Secrets_ListSecrets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SecretsListSecretsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Secret"
        ]
      },
      "post": {
        "summary": "Create a new secret",
        "description": "Creates a new secret",
        "operationId": "Secrets_CreateSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SecretsCreateSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretsCreateSecretRequest"
            }
          }
        ],
        "tags": [
          "Secret"
        ]
      }
    },
    "/api/v1/secrets/{idOrName}": {
      "get": {
        "summary": "Get secret details",
        "description": "Returns the details of a specific secret",
        "operationId": "Secrets_DescribeSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SecretsDescribeSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Secret"
        ]
      },
      "delete": {
        "summary": "Deletes a secret",
        "description": "Deletes the specified secret",
        "operationId": "Secrets_DeleteSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SecretsDeleteSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Secret"
        ]
      },
      "patch": {
        "summary": "Updates a secret",
        "description": "Updates the specified secret",
        "operationId": "Secrets_UpdateSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SecretsUpdateSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretsUpdateSecretBody"
            }
          }
        ],
        "tags": [
          "Secret"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "List users",
        "description": "Returns all users that have roles within a domain",
        "operationId": "Users_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UsersListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{userId}/permissions": {
      "get": {
        "summary": "List user permissions",
        "description": "Returns all permissions a user has within a specific domain",
        "operationId": "Users_ListUserPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UsersListUserPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{userId}/roles": {
      "get": {
        "summary": "Get user roles",
        "description": "Returns the roles a user has within a specific domain",
        "operationId": "Users_ListUserRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UsersListUserRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOMAIN_TYPE_UNSPECIFIED",
              "DOMAIN_TYPE_ORGANIZATION",
              "DOMAIN_TYPE_CANVAS"
            ],
            "default": "DOMAIN_TYPE_UNSPECIFIED"
          },
          {
            "name": "domainId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    }
  },
  "definitions": {
    "AuthToken": {
      "type": "object",
      "properties": {
        "valueFrom": {
          "$ref": "#/definitions/SuperplaneIntegrationsValueFrom"
        }
      }
    },
    "AuthorizationDomainType": {
      "type": "string",
      "enum": [
        "DOMAIN_TYPE_UNSPECIFIED",
        "DOMAIN_TYPE_ORGANIZATION",
        "DOMAIN_TYPE_CANVAS"
      ],
      "default": "DOMAIN_TYPE_UNSPECIFIED",
      "title": "Enums"
    },
    "AuthorizationPermission": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        }
      },
      "title": "Common data structures"
    },
    "EventRejectionRejectionReason": {
      "type": "string",
      "enum": [
        "REJECTION_REASON_UNKNOWN",
        "REJECTION_REASON_FILTERED",
        "REJECTION_REASON_ERROR"
      ],
      "default": "REJECTION_REASON_UNKNOWN"
    },
    "EventSourceEventType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneFilter"
          }
        },
        "filterOperator": {
          "$ref": "#/definitions/SuperplaneFilterOperator"
        }
      }
    },
    "ExecutionResult": {
      "type": "string",
      "enum": [
        "RESULT_UNKNOWN",
        "RESULT_PASSED",
        "RESULT_FAILED",
        "RESULT_CANCELLED"
      ],
      "default": "RESULT_UNKNOWN"
    },
    "ExecutionResultReason": {
      "type": "string",
      "enum": [
        "RESULT_REASON_OK",
        "RESULT_REASON_ERROR",
        "RESULT_REASON_MISSING_OUTPUTS",
        "RESULT_REASON_TIMEOUT",
        "RESULT_REASON_USER"
      ],
      "default": "RESULT_REASON_OK"
    },
    "GroupByField": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "expression": {
          "type": "string"
        }
      }
    },
    "GroupsAddUserToGroupBody": {
      "type": "object",
      "properties": {
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      }
    },
    "GroupsAddUserToGroupResponse": {
      "type": "object"
    },
    "GroupsCreateGroupRequest": {
      "type": "object",
      "properties": {
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "group": {
          "$ref": "#/definitions/GroupsGroup"
        }
      }
    },
    "GroupsCreateGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/GroupsGroup"
        }
      }
    },
    "GroupsDeleteGroupResponse": {
      "type": "object"
    },
    "GroupsDescribeGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/GroupsGroup"
        }
      }
    },
    "GroupsGroup": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/GroupsGroupMetadata"
        },
        "spec": {
          "$ref": "#/definitions/GroupsGroupSpec"
        },
        "status": {
          "$ref": "#/definitions/GroupsGroupStatus"
        }
      }
    },
    "GroupsGroupMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GroupsGroupSpec": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "GroupsGroupStatus": {
      "type": "object",
      "properties": {
        "membersCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GroupsListGroupUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneUsersUser"
          }
        },
        "group": {
          "$ref": "#/definitions/GroupsGroup"
        }
      }
    },
    "GroupsListGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GroupsGroup"
          }
        }
      }
    },
    "GroupsRemoveUserFromGroupBody": {
      "type": "object",
      "properties": {
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      }
    },
    "GroupsRemoveUserFromGroupResponse": {
      "type": "object"
    },
    "GroupsUpdateGroupBody": {
      "type": "object",
      "properties": {
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "group": {
          "$ref": "#/definitions/GroupsGroup"
        }
      }
    },
    "GroupsUpdateGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/GroupsGroup"
        }
      }
    },
    "InputMappingWhen": {
      "type": "object",
      "properties": {
        "triggeredBy": {
          "$ref": "#/definitions/InputMappingWhenTriggeredBy"
        }
      }
    },
    "InputMappingWhenTriggeredBy": {
      "type": "object",
      "properties": {
        "connection": {
          "type": "string"
        }
      }
    },
    "IntegrationAuth": {
      "type": "object",
      "properties": {
        "use": {
          "$ref": "#/definitions/IntegrationAuthType"
        },
        "token": {
          "$ref": "#/definitions/AuthToken"
        }
      }
    },
    "IntegrationAuthType": {
      "type": "string",
      "enum": [
        "AUTH_TYPE_NONE",
        "AUTH_TYPE_TOKEN",
        "AUTH_TYPE_OIDC"
      ],
      "default": "AUTH_TYPE_NONE"
    },
    "IntegrationsCreateIntegrationRequest": {
      "type": "object",
      "properties": {
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "integration": {
          "$ref": "#/definitions/IntegrationsIntegration"
        }
      }
    },
    "IntegrationsCreateIntegrationResponse": {
      "type": "object",
      "properties": {
        "integration": {
          "$ref": "#/definitions/IntegrationsIntegration"
        }
      }
    },
    "IntegrationsDescribeIntegrationResponse": {
      "type": "object",
      "properties": {
        "integration": {
          "$ref": "#/definitions/IntegrationsIntegration"
        }
      }
    },
    "IntegrationsIntegration": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/IntegrationsIntegrationMetadata"
        },
        "spec": {
          "$ref": "#/definitions/IntegrationsIntegrationSpec"
        }
      }
    },
    "IntegrationsIntegrationMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        }
      }
    },
    "IntegrationsIntegrationRef": {
      "type": "object",
      "properties": {
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "IntegrationsIntegrationSpec": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "auth": {
          "$ref": "#/definitions/IntegrationAuth"
        }
      }
    },
    "IntegrationsListIntegrationsResponse": {
      "type": "object",
      "properties": {
        "integrations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/IntegrationsIntegration"
          }
        }
      }
    },
    "IntegrationsResourceRef": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "MeRegenerateTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "OrganizationsCreateInvitationBody": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "OrganizationsCreateInvitationResponse": {
      "type": "object",
      "properties": {
        "invitation": {
          "$ref": "#/definitions/OrganizationsInvitation"
        }
      }
    },
    "OrganizationsDeleteOrganizationResponse": {
      "type": "object"
    },
    "OrganizationsDescribeOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/OrganizationsOrganization"
        }
      }
    },
    "OrganizationsInvitation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OrganizationsListInvitationsResponse": {
      "type": "object",
      "properties": {
        "invitations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/OrganizationsInvitation"
          }
        }
      }
    },
    "OrganizationsOrganization": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/OrganizationsOrganizationMetadata"
        }
      }
    },
    "OrganizationsOrganizationMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OrganizationsUpdateOrganizationBody": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/OrganizationsOrganization"
        }
      }
    },
    "OrganizationsUpdateOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/OrganizationsOrganization"
        }
      }
    },
    "RolesAssignRoleBody": {
      "type": "object",
      "properties": {
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      }
    },
    "RolesAssignRoleResponse": {
      "type": "object"
    },
    "RolesCreateRoleRequest": {
      "type": "object",
      "properties": {
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/RolesRole"
        }
      }
    },
    "RolesCreateRoleResponse": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/RolesRole"
        }
      }
    },
    "RolesDeleteRoleResponse": {
      "type": "object"
    },
    "RolesDescribeRoleResponse": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/RolesRole"
        }
      }
    },
    "RolesListRolesResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RolesRole"
          }
        }
      }
    },
    "RolesRole": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/RolesRoleMetadata"
        },
        "spec": {
          "$ref": "#/definitions/RolesRoleSpec"
        }
      }
    },
    "RolesRoleMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RolesRoleSpec": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AuthorizationPermission"
          }
        },
        "inheritedRole": {
          "$ref": "#/definitions/RolesRole"
        }
      }
    },
    "RolesUpdateRoleBody": {
      "type": "object",
      "properties": {
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/RolesRole"
        }
      }
    },
    "RolesUpdateRoleResponse": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/RolesRole"
        }
      }
    },
    "SecretLocal": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Local secrets are stored and managed by SuperPlane itself."
    },
    "SecretProvider": {
      "type": "string",
      "enum": [
        "PROVIDER_UNKNOWN",
        "PROVIDER_LOCAL"
      ],
      "default": "PROVIDER_UNKNOWN"
    },
    "SecretsCreateSecretRequest": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/SecretsSecret"
        },
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        }
      }
    },
    "SecretsCreateSecretResponse": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/SecretsSecret"
        }
      }
    },
    "SecretsDeleteSecretResponse": {
      "type": "object"
    },
    "SecretsDescribeSecretResponse": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/SecretsSecret"
        }
      }
    },
    "SecretsListSecretsResponse": {
      "type": "object",
      "properties": {
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SecretsSecret"
          }
        }
      }
    },
    "SecretsSecret": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/SecretsSecretMetadata"
        },
        "spec": {
          "$ref": "#/definitions/SecretsSecretSpec"
        }
      }
    },
    "SecretsSecretMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SecretsSecretSpec": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/SecretProvider"
        },
        "local": {
          "$ref": "#/definitions/SecretLocal"
        }
      }
    },
    "SecretsUpdateSecretBody": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/SecretsSecret"
        },
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        }
      }
    },
    "SecretsUpdateSecretResponse": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/SecretsSecret"
        }
      }
    },
    "SpecGroupBy": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GroupByField"
          }
        }
      }
    },
    "SpecTimeoutBehavior": {
      "type": "string",
      "enum": [
        "TIMEOUT_BEHAVIOR_NONE",
        "TIMEOUT_BEHAVIOR_DROP",
        "TIMEOUT_BEHAVIOR_EMIT"
      ],
      "default": "TIMEOUT_BEHAVIOR_NONE"
    },
    "StatusHistory": {
      "type": "object",
      "properties": {
        "received": {
          "type": "integer",
          "format": "int64"
        },
        "recentItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneEvent"
          }
        }
      }
    },
    "StatusQueue": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneStageEvent"
          }
        }
      }
    },
    "SuperplaneAddUserBody": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "SuperplaneAddUserResponse": {
      "type": "object"
    },
    "SuperplaneApproveStageEventBody": {
      "type": "object"
    },
    "SuperplaneApproveStageEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/SuperplaneStageEvent"
        }
      }
    },
    "SuperplaneCancelStageExecutionBody": {
      "type": "object"
    },
    "SuperplaneCancelStageExecutionResponse": {
      "type": "object",
      "properties": {
        "execution": {
          "$ref": "#/definitions/SuperplaneExecution"
        }
      }
    },
    "SuperplaneCanvas": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/SuperplaneCanvasMetadata",
          "title": "No spec needed for Canvas as per the YAML example"
        }
      }
    },
    "SuperplaneCanvasMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuperplaneCondition": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/SuperplaneConditionType"
        },
        "approval": {
          "$ref": "#/definitions/SuperplaneConditionApproval"
        },
        "timeWindow": {
          "$ref": "#/definitions/SuperplaneConditionTimeWindow"
        }
      }
    },
    "SuperplaneConditionApproval": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SuperplaneConditionTimeWindow": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "weekDays": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SuperplaneConditionType": {
      "type": "string",
      "enum": [
        "CONDITION_TYPE_UNKNOWN",
        "CONDITION_TYPE_APPROVAL",
        "CONDITION_TYPE_TIME_WINDOW"
      ],
      "default": "CONDITION_TYPE_UNKNOWN"
    },
    "SuperplaneConnection": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/SuperplaneConnectionType"
        },
        "name": {
          "type": "string"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneFilter"
          }
        },
        "filterOperator": {
          "$ref": "#/definitions/SuperplaneFilterOperator"
        }
      }
    },
    "SuperplaneConnectionGroup": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/SuperplaneConnectionGroupMetadata"
        },
        "spec": {
          "$ref": "#/definitions/SuperplaneConnectionGroupSpec"
        }
      }
    },
    "SuperplaneConnectionGroupEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "sourceId": {
          "type": "string"
        },
        "sourceType": {
          "$ref": "#/definitions/SuperplaneConnectionType"
        },
        "sourceName": {
          "type": "string"
        },
        "receivedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuperplaneConnectionGroupFieldSet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneKeyValuePair"
          }
        },
        "hash": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/SuperplaneConnectionGroupFieldSetState"
        },
        "stateReason": {
          "$ref": "#/definitions/SuperplaneConnectionGroupFieldSetStateReason"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneConnectionGroupEvent"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuperplaneConnectionGroupFieldSetState": {
      "type": "string",
      "enum": [
        "STATE_UNKNOWN",
        "STATE_PENDING",
        "STATE_PROCESSED",
        "STATE_DISCARDED"
      ],
      "default": "STATE_UNKNOWN"
    },
    "SuperplaneConnectionGroupFieldSetStateReason": {
      "type": "string",
      "enum": [
        "STATE_REASON_NONE",
        "STATE_REASON_OK",
        "STATE_REASON_TIMEOUT"
      ],
      "default": "STATE_REASON_NONE"
    },
    "SuperplaneConnectionGroupMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "canvasId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        }
      }
    },
    "SuperplaneConnectionGroupSpec": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneConnection"
          }
        },
        "groupBy": {
          "$ref": "#/definitions/SpecGroupBy"
        },
        "timeout": {
          "type": "integer",
          "format": "int64"
        },
        "timeoutBehavior": {
          "$ref": "#/definitions/SpecTimeoutBehavior"
        }
      }
    },
    "SuperplaneConnectionType": {
      "type": "string",
      "enum": [
        "TYPE_UNKNOWN",
        "TYPE_EVENT_SOURCE",
        "TYPE_STAGE",
        "TYPE_CONNECTION_GROUP"
      ],
      "default": "TYPE_UNKNOWN"
    },
    "SuperplaneCreateCanvasRequest": {
      "type": "object",
      "properties": {
        "canvas": {
          "$ref": "#/definitions/SuperplaneCanvas"
        }
      }
    },
    "SuperplaneCreateCanvasResponse": {
      "type": "object",
      "properties": {
        "canvas": {
          "$ref": "#/definitions/SuperplaneCanvas"
        }
      }
    },
    "SuperplaneCreateConnectionGroupBody": {
      "type": "object",
      "properties": {
        "connectionGroup": {
          "$ref": "#/definitions/SuperplaneConnectionGroup"
        }
      }
    },
    "SuperplaneCreateConnectionGroupResponse": {
      "type": "object",
      "properties": {
        "connectionGroup": {
          "$ref": "#/definitions/SuperplaneConnectionGroup"
        }
      }
    },
    "SuperplaneCreateEventBody": {
      "type": "object",
      "properties": {
        "sourceType": {
          "$ref": "#/definitions/SuperplaneEventSourceType"
        },
        "sourceId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "raw": {
          "type": "object"
        }
      }
    },
    "SuperplaneCreateEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/SuperplaneEvent"
        }
      }
    },
    "SuperplaneCreateEventSourceBody": {
      "type": "object",
      "properties": {
        "eventSource": {
          "$ref": "#/definitions/SuperplaneEventSource"
        }
      }
    },
    "SuperplaneCreateEventSourceResponse": {
      "type": "object",
      "properties": {
        "eventSource": {
          "$ref": "#/definitions/SuperplaneEventSource"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "SuperplaneCreateStageBody": {
      "type": "object",
      "properties": {
        "stage": {
          "$ref": "#/definitions/SuperplaneStage"
        }
      }
    },
    "SuperplaneCreateStageResponse": {
      "type": "object",
      "properties": {
        "stage": {
          "$ref": "#/definitions/SuperplaneStage"
        }
      }
    },
    "SuperplaneDataFilter": {
      "type": "object",
      "properties": {
        "expression": {
          "type": "string"
        }
      }
    },
    "SuperplaneDeleteCanvasResponse": {
      "type": "object"
    },
    "SuperplaneDeleteConnectionGroupResponse": {
      "type": "object"
    },
    "SuperplaneDeleteEventSourceResponse": {
      "type": "object"
    },
    "SuperplaneDeleteStageResponse": {
      "type": "object"
    },
    "SuperplaneDescribeCanvasResponse": {
      "type": "object",
      "properties": {
        "canvas": {
          "$ref": "#/definitions/SuperplaneCanvas"
        }
      }
    },
    "SuperplaneDescribeConnectionGroupResponse": {
      "type": "object",
      "properties": {
        "connectionGroup": {
          "$ref": "#/definitions/SuperplaneConnectionGroup"
        }
      }
    },
    "SuperplaneDescribeEventSourceResponse": {
      "type": "object",
      "properties": {
        "eventSource": {
          "$ref": "#/definitions/SuperplaneEventSource"
        }
      }
    },
    "SuperplaneDescribeStageResponse": {
      "type": "object",
      "properties": {
        "stage": {
          "$ref": "#/definitions/SuperplaneStage"
        }
      }
    },
    "SuperplaneDiscardStageEventBody": {
      "type": "object"
    },
    "SuperplaneDiscardStageEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/SuperplaneStageEvent"
        }
      }
    },
    "SuperplaneEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "sourceId": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "sourceType": {
          "$ref": "#/definitions/SuperplaneEventSourceType"
        },
        "type": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/SuperplaneEventState"
        },
        "stateReason": {
          "$ref": "#/definitions/SuperplaneEventStateReason"
        },
        "stateMessage": {
          "type": "string"
        },
        "receivedAt": {
          "type": "string",
          "format": "date-time"
        },
        "raw": {
          "type": "object"
        },
        "headers": {
          "type": "object"
        }
      }
    },
    "SuperplaneEventRejection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "event": {
          "$ref": "#/definitions/SuperplaneEvent"
        },
        "targetType": {
          "$ref": "#/definitions/SuperplaneConnectionType"
        },
        "targetId": {
          "type": "string"
        },
        "targetName": {
          "type": "string"
        },
        "reason": {
          "$ref": "#/definitions/EventRejectionRejectionReason"
        },
        "message": {
          "type": "string"
        },
        "rejectedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuperplaneEventSource": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/SuperplaneEventSourceMetadata"
        },
        "spec": {
          "$ref": "#/definitions/SuperplaneEventSourceSpec"
        },
        "status": {
          "$ref": "#/definitions/SuperplaneEventSourceStatus"
        }
      }
    },
    "SuperplaneEventSourceMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "canvasId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuperplaneEventSourceSpec": {
      "type": "object",
      "properties": {
        "integration": {
          "$ref": "#/definitions/IntegrationsIntegrationRef"
        },
        "resource": {
          "$ref": "#/definitions/IntegrationsResourceRef"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EventSourceEventType"
          }
        }
      }
    },
    "SuperplaneEventSourceStatus": {
      "type": "object",
      "properties": {
        "history": {
          "$ref": "#/definitions/StatusHistory"
        }
      }
    },
    "SuperplaneEventSourceType": {
      "type": "string",
      "enum": [
        "EVENT_SOURCE_TYPE_UNKNOWN",
        "EVENT_SOURCE_TYPE_EVENT_SOURCE",
        "EVENT_SOURCE_TYPE_STAGE",
        "EVENT_SOURCE_TYPE_CONNECTION_GROUP"
      ],
      "default": "EVENT_SOURCE_TYPE_UNKNOWN"
    },
    "SuperplaneEventState": {
      "type": "string",
      "enum": [
        "STATE_UNKNOWN",
        "STATE_PENDING",
        "STATE_REJECTED",
        "STATE_PROCESSED"
      ],
      "default": "STATE_UNKNOWN"
    },
    "SuperplaneEventStateReason": {
      "type": "string",
      "enum": [
        "STATE_REASON_UNKNOWN",
        "STATE_REASON_FILTERED",
        "STATE_REASON_ERROR",
        "STATE_REASON_OK"
      ],
      "default": "STATE_REASON_UNKNOWN"
    },
    "SuperplaneExecution": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/SuperplaneExecutionState"
        },
        "result": {
          "$ref": "#/definitions/ExecutionResult"
        },
        "resultReason": {
          "$ref": "#/definitions/ExecutionResultReason"
        },
        "resultMessage": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time"
        },
        "cancelledAt": {
          "type": "string",
          "format": "date-time"
        },
        "finishedAt": {
          "type": "string",
          "format": "date-time"
        },
        "outputs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneOutputValue"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneExecutionResource"
          }
        },
        "stageEvent": {
          "$ref": "#/definitions/SuperplaneStageEvent"
        }
      }
    },
    "SuperplaneExecutionResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "SuperplaneExecutionState": {
      "type": "string",
      "enum": [
        "STATE_UNKNOWN",
        "STATE_PENDING",
        "STATE_STARTED",
        "STATE_FINISHED"
      ],
      "default": "STATE_UNKNOWN"
    },
    "SuperplaneExecutor": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "integration": {
          "$ref": "#/definitions/IntegrationsIntegrationRef"
        },
        "resource": {
          "$ref": "#/definitions/IntegrationsResourceRef"
        },
        "spec": {
          "type": "object"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "SuperplaneFilter": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/SuperplaneFilterType"
        },
        "data": {
          "$ref": "#/definitions/SuperplaneDataFilter"
        },
        "header": {
          "$ref": "#/definitions/SuperplaneHeaderFilter"
        }
      }
    },
    "SuperplaneFilterOperator": {
      "type": "string",
      "enum": [
        "FILTER_OPERATOR_AND",
        "FILTER_OPERATOR_OR"
      ],
      "default": "FILTER_OPERATOR_AND",
      "title": "Filters can be combined in two ways:\n  - FILTER_OPERATOR_AND: all filters must be true (default)\n  - FILTER_OPERATOR_OR: at least one filter must be true"
    },
    "SuperplaneFilterType": {
      "type": "string",
      "enum": [
        "FILTER_TYPE_UNKNOWN",
        "FILTER_TYPE_DATA",
        "FILTER_TYPE_HEADER"
      ],
      "default": "FILTER_TYPE_UNKNOWN"
    },
    "SuperplaneHeaderFilter": {
      "type": "object",
      "properties": {
        "expression": {
          "type": "string"
        }
      }
    },
    "SuperplaneInputDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "SuperplaneInputMapping": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneValueDefinition"
          }
        },
        "when": {
          "$ref": "#/definitions/InputMappingWhen"
        }
      }
    },
    "SuperplaneIntegrationsValueFrom": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/SuperplaneIntegrationsValueFromSecret"
        }
      }
    },
    "SuperplaneIntegrationsValueFromSecret": {
      "type": "object",
      "properties": {
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "name": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "SuperplaneKeyValuePair": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "SuperplaneListCanvasesResponse": {
      "type": "object",
      "properties": {
        "canvases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneCanvas"
          }
        }
      }
    },
    "SuperplaneListConnectionGroupFieldSetsResponse": {
      "type": "object",
      "properties": {
        "fieldSets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneConnectionGroupFieldSet"
          }
        }
      }
    },
    "SuperplaneListConnectionGroupsResponse": {
      "type": "object",
      "properties": {
        "connectionGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneConnectionGroup"
          }
        }
      }
    },
    "SuperplaneListEventRejectionsResponse": {
      "type": "object",
      "properties": {
        "rejections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneEventRejection"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "lastTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuperplaneListEventSourcesResponse": {
      "type": "object",
      "properties": {
        "eventSources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneEventSource"
          }
        }
      }
    },
    "SuperplaneListEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneEvent"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "lastTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuperplaneListStageEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneStageEvent"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "lastTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuperplaneListStageExecutionsResponse": {
      "type": "object",
      "properties": {
        "executions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneExecution"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "lastTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuperplaneListStagesResponse": {
      "type": "object",
      "properties": {
        "stages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneStage"
          }
        }
      }
    },
    "SuperplaneMeUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "hasToken": {
          "type": "boolean"
        }
      }
    },
    "SuperplaneOrganizationsRemoveUserResponse": {
      "type": "object"
    },
    "SuperplaneOutputDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        }
      }
    },
    "SuperplaneOutputValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "SuperplaneRemoveUserResponse": {
      "type": "object"
    },
    "SuperplaneResetEventSourceKeyBody": {
      "type": "object"
    },
    "SuperplaneResetEventSourceKeyResponse": {
      "type": "object",
      "properties": {
        "eventSource": {
          "$ref": "#/definitions/SuperplaneEventSource"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "SuperplaneStage": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/SuperplaneStageMetadata"
        },
        "spec": {
          "$ref": "#/definitions/SuperplaneStageSpec"
        },
        "status": {
          "$ref": "#/definitions/SuperplaneStageStatus"
        }
      }
    },
    "SuperplaneStageEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/SuperplaneStageEventState"
        },
        "stateReason": {
          "$ref": "#/definitions/SuperplaneStageEventStateReason"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "approvals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneStageEventApproval"
          }
        },
        "inputs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneKeyValuePair"
          }
        },
        "name": {
          "type": "string"
        },
        "triggerEvent": {
          "$ref": "#/definitions/SuperplaneEvent"
        },
        "discardedBy": {
          "type": "string"
        },
        "discardedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuperplaneStageEventApproval": {
      "type": "object",
      "properties": {
        "approvedBy": {
          "type": "string"
        },
        "approvedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuperplaneStageEventState": {
      "type": "string",
      "enum": [
        "STATE_UNKNOWN",
        "STATE_PENDING",
        "STATE_WAITING",
        "STATE_PROCESSED",
        "STATE_DISCARDED"
      ],
      "default": "STATE_UNKNOWN"
    },
    "SuperplaneStageEventStateReason": {
      "type": "string",
      "enum": [
        "STATE_REASON_UNKNOWN",
        "STATE_REASON_APPROVAL",
        "STATE_REASON_TIME_WINDOW"
      ],
      "default": "STATE_REASON_UNKNOWN"
    },
    "SuperplaneStageMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "canvasId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuperplaneStageSpec": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneConnection"
          }
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneCondition"
          }
        },
        "executor": {
          "$ref": "#/definitions/SuperplaneExecutor"
        },
        "inputs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneInputDefinition"
          }
        },
        "inputMappings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneInputMapping"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneOutputDefinition"
          }
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneValueDefinition"
          }
        }
      }
    },
    "SuperplaneStageStatus": {
      "type": "object",
      "properties": {
        "lastExecution": {
          "$ref": "#/definitions/SuperplaneExecution"
        },
        "queue": {
          "$ref": "#/definitions/StatusQueue"
        }
      }
    },
    "SuperplaneUpdateConnectionGroupBody": {
      "type": "object",
      "properties": {
        "connectionGroup": {
          "$ref": "#/definitions/SuperplaneConnectionGroup"
        }
      }
    },
    "SuperplaneUpdateConnectionGroupResponse": {
      "type": "object",
      "properties": {
        "connectionGroup": {
          "$ref": "#/definitions/SuperplaneConnectionGroup"
        }
      }
    },
    "SuperplaneUpdateEventSourceBody": {
      "type": "object",
      "properties": {
        "eventSource": {
          "$ref": "#/definitions/SuperplaneEventSource"
        }
      }
    },
    "SuperplaneUpdateEventSourceResponse": {
      "type": "object",
      "properties": {
        "eventSource": {
          "$ref": "#/definitions/SuperplaneEventSource"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "SuperplaneUpdateStageBody": {
      "type": "object",
      "properties": {
        "stage": {
          "$ref": "#/definitions/SuperplaneStage"
        }
      }
    },
    "SuperplaneUpdateStageResponse": {
      "type": "object",
      "properties": {
        "stage": {
          "$ref": "#/definitions/SuperplaneStage"
        }
      }
    },
    "SuperplaneUsersUser": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/UsersUserMetadata"
        },
        "spec": {
          "$ref": "#/definitions/UsersUserSpec"
        },
        "status": {
          "$ref": "#/definitions/UsersUserStatus"
        }
      }
    },
    "SuperplaneValueDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/definitions/SuperplaneValueFrom"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "SuperplaneValueFrom": {
      "type": "object",
      "properties": {
        "eventData": {
          "$ref": "#/definitions/SuperplaneValueFromEventData"
        },
        "lastExecution": {
          "$ref": "#/definitions/SuperplaneValueFromLastExecution"
        },
        "secret": {
          "$ref": "#/definitions/SuperplaneValueFromSecret"
        }
      }
    },
    "SuperplaneValueFromEventData": {
      "type": "object",
      "properties": {
        "connection": {
          "type": "string"
        },
        "expression": {
          "type": "string"
        }
      }
    },
    "SuperplaneValueFromLastExecution": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionResult"
          }
        }
      }
    },
    "SuperplaneValueFromSecret": {
      "type": "object",
      "properties": {
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "name": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "UsersAccountProvider": {
      "type": "object",
      "properties": {
        "providerType": {
          "type": "string"
        },
        "providerId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "avatarUrl": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UsersListUserPermissionsResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AuthorizationPermission"
          }
        }
      }
    },
    "UsersListUserRolesResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RolesRole"
          }
        }
      }
    },
    "UsersListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SuperplaneUsersUser"
          }
        }
      }
    },
    "UsersUserMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UsersUserRoleAssignment": {
      "type": "object",
      "properties": {
        "roleName": {
          "type": "string"
        },
        "roleDisplayName": {
          "type": "string"
        },
        "roleDescription": {
          "type": "string"
        },
        "domainType": {
          "$ref": "#/definitions/AuthorizationDomainType"
        },
        "domainId": {
          "type": "string"
        },
        "assignedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UsersUserSpec": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "accountProviders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UsersAccountProvider"
          }
        }
      }
    },
    "UsersUserStatus": {
      "type": "object",
      "properties": {
        "roleAssignments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UsersUserRoleAssignment"
          }
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    }
  }
}
